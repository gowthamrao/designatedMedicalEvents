"cohortId","cohortName","json","sql"
207,"Acquired Pure Red Cell Aplasia","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 20,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 20,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 15,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 20,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : true,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 16,
					""MeasurementTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 4,
						""Op"" : ""bt"",
						""Extent"" : 11
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 4121395,
							""CONCEPT_NAME"" : ""g/dL"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""258795003"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : null
						},
						{
							""CONCEPT_ID"" : 8713,
							""CONCEPT_NAME"" : ""gram per deciliter"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""g/dL"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						},
						{
							""CONCEPT_ID"" : 8950,
							""CONCEPT_NAME"" : ""gram per deciliter calculated"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""g/dL{calc}"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Measurement"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 20,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 17,
					""MeasurementTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 5,
						""Op"" : ""bt"",
						""Extent"" : 30
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 8554,
							""CONCEPT_NAME"" : ""percent"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""%"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Congenital or Genetic anemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295183,
							""CONCEPT_NAME"" : ""Mixed hemoglobin disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38589006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4214409,
							""CONCEPT_NAME"" : ""Hereditary red blood cell disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""414394009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125630,
							""CONCEPT_NAME"" : ""Chronic non-spherocytic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4120449,
							""CONCEPT_NAME"" : ""von Jaksch's anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234345001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017165,
							""CONCEPT_NAME"" : ""GATA binding protein 1 related thrombocytopenia with dyserythropoiesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713388002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4217370,
							""CONCEPT_NAME"" : ""Aase syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71988008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4159748,
							""CONCEPT_NAME"" : ""Hand-foot syndrome in sickle cell anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371104006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36680584,
							""CONCEPT_NAME"" : ""Autosomal dominant aplasia and myelodysplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""778006008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4301410,
							""CONCEPT_NAME"" : ""Inherited disorder of porphyrin metabolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""403832004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434156,
							""CONCEPT_NAME"" : ""Congenital anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""63565007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4024671,
							""CONCEPT_NAME"" : ""Paroxysmal nocturnal hemoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1963002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Polycythemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 135214,
							""CONCEPT_NAME"" : ""Polycythemia vera (clinical)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""109992005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3656046,
							""CONCEPT_NAME"" : ""Post-polycythemia vera myelofibrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871540009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4030270,
							""CONCEPT_NAME"" : ""Polycythemia vera"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128841001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058607,
							""CONCEPT_NAME"" : ""Polycythemia irradiation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169344005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4067525,
							""CONCEPT_NAME"" : ""Fetal OR neonatal jaundice from polycythemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21404001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4071736,
							""CONCEPT_NAME"" : ""Perinatal jaundice from polycythemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""206446002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4130681,
							""CONCEPT_NAME"" : ""Erythrocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127062003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45765440,
							""CONCEPT_NAME"" : ""Hypermanganesemia with dystonia, polycythemia, and cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""702377007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 15,
			""name"" : ""Anemia or Reticulocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617149,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer radiotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EB"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36716029,
							""CONCEPT_NAME"" : ""Hyperuricemia, anemia, renal failure syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721840000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617148,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EA"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029669,
							""CONCEPT_NAME"" : ""Refractory anemia with sideroblasts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128846006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4120449,
							""CONCEPT_NAME"" : ""von Jaksch's anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234345001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 35624756,
							""CONCEPT_NAME"" : ""Anemia due to and following chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""767657005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028718,
							""CONCEPT_NAME"" : ""Refractory anemia with excess blasts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128847002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017165,
							""CONCEPT_NAME"" : ""GATA binding protein 1 related thrombocytopenia with dyserythropoiesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713388002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4144746,
							""CONCEPT_NAME"" : ""Hereditary hemoglobinopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""427306008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617150,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia not due to anti-cancer radiotherapy or anti-cancer chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EC"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44831063,
							""CONCEPT_NAME"" : ""Anemia associated with other specified nutritional deficiency"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281.8"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD9CM"",
							""CONCEPT_CLASS_ID"" : ""4-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4105643,
							""CONCEPT_NAME"" : ""Myasthenic syndrome due to pernicious anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""193213003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37398911,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 4"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691401000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438869,
							""CONCEPT_NAME"" : ""Perinatal jaundice due to hereditary hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56921004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4183718,
							""CONCEPT_NAME"" : ""Pericarditis associated with severe chronic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43742007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37395652,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 5"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691411000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125630,
							""CONCEPT_NAME"" : ""Chronic non-spherocytic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4217370,
							""CONCEPT_NAME"" : ""Aase syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71988008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267432,
							""CONCEPT_NAME"" : ""Erythropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62574001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36680584,
							""CONCEPT_NAME"" : ""Autosomal dominant aplasia and myelodysplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""778006008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37018722,
							""CONCEPT_NAME"" : ""Anemia caused by zidovudine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713496008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295183,
							""CONCEPT_NAME"" : ""Mixed hemoglobin disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38589006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028717,
							""CONCEPT_NAME"" : ""Refractory anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128845005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44783626,
							""CONCEPT_NAME"" : ""Pulmonary arterial hypertension associated with chronic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""697908003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4159748,
							""CONCEPT_NAME"" : ""Hand-foot syndrome in sickle cell anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371104006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4051681,
							""CONCEPT_NAME"" : ""Reticulocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""124961001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017132,
							""CONCEPT_NAME"" : ""Anemia co-occurrent with human immunodeficiency virus infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713349004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029670,
							""CONCEPT_NAME"" : ""Refractory anemia with excess blasts in transformation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128848007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006467,
							""CONCEPT_NAME"" : ""Anemia due to infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111570005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40478891,
							""CONCEPT_NAME"" : ""Erythropoietin resistance in anemia of chronic kidney disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444271000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715584,
							""CONCEPT_NAME"" : ""Refractory anemia with ringed sideroblasts associated with marked thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721302006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 16,
			""name"" : ""Hemoglobin measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3000963,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Hematocrit measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3009542,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20570-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3034976,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41654-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3028813,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Capillary blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""42908-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3019909,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Centrifugation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4545-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050746,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Estimated"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48703-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869584,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71829-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3023314,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4544-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869588,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71833-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4016241,
							""CONCEPT_NAME"" : ""Hematocrit, spun microhematocrit method"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""104139004"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151358,
							""CONCEPT_NAME"" : ""Hematocrit determination"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""28317006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4097621,
							""CONCEPT_NAME"" : ""Platelet hematocrit measurement"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""250314004"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212641,
							""CONCEPT_NAME"" : ""Blood count; spun microhematocrit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85013"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212642,
							""CONCEPT_NAME"" : ""Blood count; hematocrit (Hct)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85014"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 20,
			""name"" : ""Acquired Pure Red Cell Aplasia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 138723,
							""CONCEPT_NAME"" : ""Acquired red cell aplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234376007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 22,
			""name"" : ""Bone marrow transplant"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028623,
							""CONCEPT_NAME"" : ""Transplantation of bone marrow"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""23719005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4081380,
							""CONCEPT_NAME"" : ""Peripheral blood stem cell graft"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""278257006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4145532,
							""CONCEPT_NAME"" : ""Allograft of cord blood to bone marrow"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""427615008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4265436,
							""CONCEPT_NAME"" : ""Limbal stem cell transplantation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397554006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4323781,
							""CONCEPT_NAME"" : ""Disorder related to bone marrow transplantation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429450002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40492243,
							""CONCEPT_NAME"" : ""Blood and marrow transplantation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""445715009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Qualifier Value""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42537745,
							""CONCEPT_NAME"" : ""Bone marrow transplant present"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""737300001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46270345,
							""CONCEPT_NAME"" : ""History of bone marrow transplant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2631000119108"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46271079,
							""CONCEPT_NAME"" : ""Transplantation of autologous hematopoietic stem cell"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""709115004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 29,
			""name"" : ""Constitutional and childhood red cell aplasia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4146087,
							""CONCEPT_NAME"" : ""Constitutional red cell aplasia and hypoplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267525005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125499,
							""CONCEPT_NAME"" : ""Transient erythroblastopenia of childhood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234375006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""No congenital or genetic anemia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Constitutional Pure Red Cell Aplasia"",
			""description"" : ""A congenital form of pure red cell aplasia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 29,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No normal Hemoglobin measurement in blood on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 16,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 11,
									""Op"" : ""bt"",
									""Extent"" : 14
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 4121395,
										""CONCEPT_NAME"" : ""g/dL"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""258795003"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""SNOMED"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8713,
										""CONCEPT_NAME"" : ""gram per deciliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""g/dL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8950,
										""CONCEPT_NAME"" : ""gram per deciliter calculated"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""g/dL{calc}"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No normal Hematocrit measurement in blood on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 17,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 37,
									""Op"" : ""bt"",
									""Extent"" : 47
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 8554,
										""CONCEPT_NAME"" : ""percent"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""%"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Polycythemia on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 4,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Bone marrow transplant"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 22,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 180,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 22,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 180,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4295183,4214409,4125630,4120449,37017165,4217370,4159748,36680584,4301410,434156,4024671))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4295183,4214409,4125630,4120449,37017165,4217370,4159748,36680584,4301410,434156,4024671))

) I
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (135214,3656046,4030270,4058607,4067525,4071736,4130681,45765440))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (135214,3656046,4030270,4058607,4067525,4071736,4130681,45765440))

) I
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (2617149,36716029,2617148,4029669,4120449,35624756,4028718,37017165,4144746,2617150,44831063,4105643,37398911,438869,4183718,37395652,4125630,4217370,4267432,36680584,37018722,4295183,4028717,44783626,4159748,4051681,37017132,4029670,4006467,40478891,36715584))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (2617149,36716029,2617148,4029669,4120449,35624756,4028718,37017165,4144746,2617150,4105643,37398911,438869,4183718,37395652,4125630,4217370,4267432,36680584,37018722,4295183,4028717,44783626,4159748,4051681,37017132,4029670,4006467,40478891,36715584))

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3000963))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3000963))

) I
) C UNION ALL 
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3009542,3034976,3028813,3019909,3050746,42869584,3023314,42869588,4016241,4151358,4097621,2212641,2212642))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3009542,3034976,3028813,3019909,3050746,42869584,3023314,42869588,4016241,4151358,4097621,2212641,2212642))

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (138723))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (138723))

) I
) C UNION ALL 
SELECT 22 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4028623,4081380,4145532,4265436,4323781,40492243,42537745,46270345,46271079))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4028623,4081380,4145532,4265436,4323781,40492243,42537745,46270345,46271079))

) I
) C UNION ALL 
SELECT 29 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4146087,4125499))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4146087,4125499))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Condition Occurrence Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 16)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 16)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 16)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 17)
) C

WHERE (C.value_as_number >= 5.0000 and C.value_as_number <= 30.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 17)
) C

WHERE (C.value_as_number >= 5.0000 and C.value_as_number <= 30.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 17)
) C

WHERE (C.value_as_number >= 5.0000 and C.value_as_number <= 30.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 29)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 16)
) C

WHERE (C.value_as_number >= 11.0000 and C.value_as_number <= 14.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 17)
) C

WHERE (C.value_as_number >= 37.0000 and C.value_as_number <= 47.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 4)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 22)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 22)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{6 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),6)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 6 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
210,"Hemolytic Anemia Extra corpuscular ex hgpathy, memb defect","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 6,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 6,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 2,
					""MeasurementTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 4,
						""Op"" : ""bt"",
						""Extent"" : 11
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 4121395,
							""CONCEPT_NAME"" : ""g/dL"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""258795003"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : null
						},
						{
							""CONCEPT_ID"" : 8713,
							""CONCEPT_NAME"" : ""gram per deciliter"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""g/dL"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						},
						{
							""CONCEPT_ID"" : 8950,
							""CONCEPT_NAME"" : ""gram per deciliter calculated"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""g/dL{calc}"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Measurement"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 6,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 18,
					""MeasurementTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 5,
						""Op"" : ""bt"",
						""Extent"" : 30
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 8554,
							""CONCEPT_NAME"" : ""percent"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""%"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ANY"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 1,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""Measurement"" : {
										""CodesetId"" : 2,
										""MeasurementTypeExclude"" : false,
										""ValueAsNumber"" : {
											""Value"" : 4,
											""Op"" : ""bt"",
											""Extent"" : 11
										},
										""Unit"" : [
											{
												""CONCEPT_ID"" : 4121395,
												""CONCEPT_NAME"" : ""g/dL"",
												""STANDARD_CONCEPT"" : null,
												""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
												""INVALID_REASON"" : null,
												""INVALID_REASON_CAPTION"" : ""Unknown"",
												""CONCEPT_CODE"" : ""258795003"",
												""DOMAIN_ID"" : ""Unit"",
												""VOCABULARY_ID"" : ""SNOMED"",
												""CONCEPT_CLASS_ID"" : null
											},
											{
												""CONCEPT_ID"" : 8713,
												""CONCEPT_NAME"" : ""gram per deciliter"",
												""STANDARD_CONCEPT"" : null,
												""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
												""INVALID_REASON"" : null,
												""INVALID_REASON_CAPTION"" : ""Unknown"",
												""CONCEPT_CODE"" : ""g/dL"",
												""DOMAIN_ID"" : ""Unit"",
												""VOCABULARY_ID"" : ""UCUM"",
												""CONCEPT_CLASS_ID"" : null
											},
											{
												""CONCEPT_ID"" : 8950,
												""CONCEPT_NAME"" : ""gram per deciliter calculated"",
												""STANDARD_CONCEPT"" : null,
												""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
												""INVALID_REASON"" : null,
												""INVALID_REASON_CAPTION"" : ""Unknown"",
												""CONCEPT_CODE"" : ""g/dL{calc}"",
												""DOMAIN_ID"" : ""Unit"",
												""VOCABULARY_ID"" : ""UCUM"",
												""CONCEPT_CLASS_ID"" : null
											}
										]
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""Measurement"" : {
										""CodesetId"" : 18,
										""MeasurementTypeExclude"" : false,
										""ValueAsNumber"" : {
											""Value"" : 5,
											""Op"" : ""bt"",
											""Extent"" : 30
										},
										""Unit"" : [
											{
												""CONCEPT_ID"" : 8554,
												""CONCEPT_NAME"" : ""percent"",
												""STANDARD_CONCEPT"" : null,
												""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
												""INVALID_REASON"" : null,
												""INVALID_REASON_CAPTION"" : ""Unknown"",
												""CONCEPT_CODE"" : ""%"",
												""DOMAIN_ID"" : ""Unit"",
												""VOCABULARY_ID"" : ""UCUM"",
												""CONCEPT_CLASS_ID"" : null
											}
										]
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 6,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Hemolytic Anemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 435503,
							""CONCEPT_NAME"" : ""Hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61261009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438869,
							""CONCEPT_NAME"" : ""Perinatal jaundice due to hereditary hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56921004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4082253,
							""CONCEPT_NAME"" : ""Unstable hemoglobin disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""18273004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125630,
							""CONCEPT_NAME"" : ""Chronic non-spherocytic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4168772,
							""CONCEPT_NAME"" : ""Megaloblastic anemia due to chronic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""47844003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44783626,
							""CONCEPT_NAME"" : ""Pulmonary arterial hypertension associated with chronic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""697908003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Anemia or Reticulocytopenia that can potentially be due to hemolysis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 35624756,
							""CONCEPT_NAME"" : ""Anemia due to and following chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""767657005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4183718,
							""CONCEPT_NAME"" : ""Pericarditis associated with severe chronic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43742007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4064310,
							""CONCEPT_NAME"" : ""O/E - anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164139008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125630,
							""CONCEPT_NAME"" : ""Chronic non-spherocytic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439777,
							""CONCEPT_NAME"" : ""Anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""271737000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37018722,
							""CONCEPT_NAME"" : ""Anemia caused by zidovudine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713496008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295183,
							""CONCEPT_NAME"" : ""Mixed hemoglobin disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38589006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028717,
							""CONCEPT_NAME"" : ""Refractory anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128845005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44783626,
							""CONCEPT_NAME"" : ""Pulmonary arterial hypertension associated with chronic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""697908003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006467,
							""CONCEPT_NAME"" : ""Anemia due to infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111570005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Hemoglobin measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3000963,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3027484,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood by calculation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20509-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Polycythemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 135214,
							""CONCEPT_NAME"" : ""Polycythemia vera (clinical)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""109992005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3656046,
							""CONCEPT_NAME"" : ""Post-polycythemia vera myelofibrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871540009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4030270,
							""CONCEPT_NAME"" : ""Polycythemia vera"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128841001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058607,
							""CONCEPT_NAME"" : ""Polycythemia irradiation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169344005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4067525,
							""CONCEPT_NAME"" : ""Fetal OR neonatal jaundice from polycythemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21404001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4071736,
							""CONCEPT_NAME"" : ""Perinatal jaundice from polycythemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""206446002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4130681,
							""CONCEPT_NAME"" : ""Erythrocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127062003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45765440,
							""CONCEPT_NAME"" : ""Hypermanganesemia with dystonia, polycythemia, and cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""702377007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Hemolytic disorder"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4133980,
							""CONCEPT_NAME"" : ""Hemolytic disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128086004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4133151,
							""CONCEPT_NAME"" : ""Red blood cell destruction finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127403002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Hereditary hemoglobinopathy"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4144746,
							""CONCEPT_NAME"" : ""Hereditary hemoglobinopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""427306008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Erythrocyte membrane defect"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4009785,
							""CONCEPT_NAME"" : ""Anemia due to membrane defect"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111575000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4122936,
							""CONCEPT_NAME"" : ""Erythrocyte membrane abnormality"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234409003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Hereditary hemolytic anemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 28396,
							""CONCEPT_NAME"" : ""Hereditary hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38911009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 12,
			""name"" : ""Inherited disorder of porphyrin metabolism"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4301410,
							""CONCEPT_NAME"" : ""Inherited disorder of porphyrin metabolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""403832004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Paroxysmal nocturnal hemoglobinuria"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4024671,
							""CONCEPT_NAME"" : ""Paroxysmal nocturnal hemoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1963002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40481388,
							""CONCEPT_NAME"" : ""Thrombophilia due to paroxysmal nocturnal hemoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""441990004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 18,
			""name"" : ""Hematocrit measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3009542,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20570-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3034976,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41654-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3028813,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Capillary blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""42908-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3019909,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Centrifugation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4545-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050746,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Estimated"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48703-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869584,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71829-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3023314,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4544-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869588,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71833-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4016241,
							""CONCEPT_NAME"" : ""Hematocrit, spun microhematocrit method"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""104139004"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151358,
							""CONCEPT_NAME"" : ""Hematocrit determination"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""28317006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4097621,
							""CONCEPT_NAME"" : ""Platelet hematocrit measurement"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""250314004"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212641,
							""CONCEPT_NAME"" : ""Blood count; spun microhematocrit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85013"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212642,
							""CONCEPT_NAME"" : ""Blood count; hematocrit (Hct)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85014"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""No normal low Hemoglobin measurement in blood on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 2,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 11,
									""Op"" : ""bt"",
									""Extent"" : 14
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 4121395,
										""CONCEPT_NAME"" : ""g/dL"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""258795003"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""SNOMED"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8713,
										""CONCEPT_NAME"" : ""gram per deciliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""g/dL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8950,
										""CONCEPT_NAME"" : ""gram per deciliter calculated"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""g/dL{calc}"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Polycythemia on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 4,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Hereditary hemoglobinopathy"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 8,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Erythrocyte membrane defect"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 9,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Hereditary hemolytic anemia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 10,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Inherited disorder of porphyrin metabolism"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 12,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Paroxysmal nocturnal hemoglobinuria"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 17,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [
		{
			""Measurement"" : {
				""CodesetId"" : 2,
				""MeasurementTypeExclude"" : false,
				""ValueAsNumber"" : {
					""Value"" : 11,
					""Op"" : ""bt"",
					""Extent"" : 14
				},
				""Unit"" : [
					{
						""CONCEPT_ID"" : 4121395,
						""CONCEPT_NAME"" : ""g/dL"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""258795003"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""SNOMED"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 8713,
						""CONCEPT_NAME"" : ""gram per deciliter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""g/dL"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 8950,
						""CONCEPT_NAME"" : ""gram per deciliter calculated"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""g/dL{calc}"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					}
				]
			}
		},
		{
			""Measurement"" : {
				""CodesetId"" : 18,
				""MeasurementTypeExclude"" : false,
				""ValueAsNumber"" : {
					""Value"" : 37,
					""Op"" : ""bt"",
					""Extent"" : 47
				},
				""Unit"" : [
					{
						""CONCEPT_ID"" : 8554,
						""CONCEPT_NAME"" : ""percent"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""%"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					}
				]
			}
		}
	],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435503,438869,4082253,4125630,4168772,44783626))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435503,438869,4082253,4125630,4168772,44783626))

) I
) C UNION ALL 
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (35624756,4183718,4064310,4125630,439777,37018722,4295183,4028717,44783626,4006467))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (35624756,4183718,4064310,4125630,439777,37018722,4295183,4028717,44783626,4006467))

) I
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3000963,3027484))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3000963,3027484))

) I
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (135214,3656046,4030270,4058607,4067525,4071736,4130681,45765440))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (135214,3656046,4030270,4058607,4067525,4071736,4130681,45765440))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4133980,4133151))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4133980,4133151))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4144746))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4144746))

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4009785,4122936))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4009785,4122936))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (28396))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (28396))

) I
) C UNION ALL 
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4301410))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4301410))

) I
) C UNION ALL 
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4024671,40481388))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4024671,40481388))

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3009542,3034976,3028813,3019909,3050746,42869584,3023314,42869588,4016241,4151358,4097621,2212641,2212642))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3009542,3034976,3028813,3019909,3050746,42869584,3023314,42869588,4016241,4151358,4097621,2212641,2212642))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 18)
) C

WHERE (C.value_as_number >= 5.0000 and C.value_as_number <= 30.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 18)
) C

WHERE (C.value_as_number >= 5.0000 and C.value_as_number <= 30.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 18)
) C

WHERE (C.value_as_number >= 5.0000 and C.value_as_number <= 30.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 18)
) C

WHERE (C.value_as_number >= 5.0000 and C.value_as_number <= 30.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 11.0000 and C.value_as_number <= 14.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 4)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 17)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{7 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),7)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > op_end_date then op_end_date else DATEADD(day,0,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

UNION ALL
-- Censor Events
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 11.0000 and C.value_as_number <= 14.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 18)
) C

WHERE (C.value_as_number >= 37.0000 and C.value_as_number <= 47.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id


    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 7 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence UNION ALL SELECT CAST(6 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
211,"Pancytopenia, Acquired","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 18,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""AT_LEAST"",
						""Count"" : 3,
						""CriteriaList"" : [],
						""DemographicCriteriaList"" : [],
						""Groups"" : [
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""Measurement"" : {
												""CodesetId"" : 21,
												""MeasurementTypeExclude"" : false,
												""ValueAsNumber"" : {
													""Value"" : 0.010000000000000000208167,
													""Op"" : ""bt"",
													""Extent"" : 1.4990000000000001101341
												},
												""Unit"" : [
													{
														""CONCEPT_ID"" : 9444,
														""CONCEPT_NAME"" : ""billion per liter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*9/L"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 8848,
														""CONCEPT_NAME"" : ""thousand per microliter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*3/uL"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 8816,
														""CONCEPT_NAME"" : ""million per milliliter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*6/mL"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 8961,
														""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*3/mm3"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 44777588,
														""CONCEPT_NAME"" : ""billion cells per liter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													}
												]
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 1,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 1,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : true,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""Measurement"" : {
												""CodesetId"" : 21,
												""MeasurementTypeExclude"" : false,
												""ValueAsNumber"" : {
													""Value"" : 10,
													""Op"" : ""bt"",
													""Extent"" : 1499
												},
												""Unit"" : [
													{
														""CONCEPT_ID"" : 8784,
														""CONCEPT_NAME"" : ""cells per microliter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""{cells}/uL"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 8647,
														""CONCEPT_NAME"" : ""per microliter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""/uL"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													}
												]
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 1,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 1,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : true,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 23,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 1,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 1,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : true,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							},
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""Measurement"" : {
												""CodesetId"" : 24,
												""MeasurementTypeExclude"" : false,
												""ValueAsNumber"" : {
													""Value"" : 4,
													""Op"" : ""bt"",
													""Extent"" : 11
												},
												""Unit"" : [
													{
														""CONCEPT_ID"" : 4121395,
														""CONCEPT_NAME"" : ""g/dL"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""258795003"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""SNOMED"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 8713,
														""CONCEPT_NAME"" : ""gram per deciliter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""g/dL"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 8950,
														""CONCEPT_NAME"" : ""gram per deciliter calculated"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""g/dL{calc}"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													}
												]
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 1,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 1,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : true,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""Measurement"" : {
												""CodesetId"" : 31,
												""MeasurementTypeExclude"" : false,
												""ValueAsNumber"" : {
													""Value"" : 5,
													""Op"" : ""bt"",
													""Extent"" : 30
												},
												""Unit"" : [
													{
														""CONCEPT_ID"" : 8554,
														""CONCEPT_NAME"" : ""percent"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""%"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													}
												]
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 1,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 1,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : true,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 25,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 1,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 1,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : true,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							},
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""Measurement"" : {
												""CodesetId"" : 26,
												""MeasurementTypeExclude"" : false,
												""ValueAsNumber"" : {
													""Value"" : 10,
													""Op"" : ""bt"",
													""Extent"" : 149
												},
												""Unit"" : [
													{
														""CONCEPT_ID"" : 8961,
														""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*3/mm3"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 8848,
														""CONCEPT_NAME"" : ""thousand per microliter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*3/uL"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 9444,
														""CONCEPT_NAME"" : ""billion per liter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*9/L"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 8816,
														""CONCEPT_NAME"" : ""million per milliliter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*6/mL"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													},
													{
														""CONCEPT_ID"" : 44777588,
														""CONCEPT_NAME"" : ""billion cells per liter"",
														""STANDARD_CONCEPT"" : null,
														""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
														""INVALID_REASON"" : null,
														""INVALID_REASON_CAPTION"" : ""Unknown"",
														""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
														""DOMAIN_ID"" : ""Unit"",
														""VOCABULARY_ID"" : ""UCUM"",
														""CONCEPT_CLASS_ID"" : null
													}
												]
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 1,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 1,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : true,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 27,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 1,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 1,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : true,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							}
						]
					},
					""CodesetId"" : 20,
					""MeasurementTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 18,
			""name"" : ""Pancytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 432881,
							""CONCEPT_NAME"" : ""Pancytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127034005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 20,
			""name"" : ""Measurement of platelet, neutrophil, hemoglobin or hematocrit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3019909,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Centrifugation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4545-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4097621,
							""CONCEPT_NAME"" : ""Platelet hematocrit measurement"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""250314004"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050583,
							""CONCEPT_NAME"" : ""Platelets panel - Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53800-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393863,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022651000000100"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148615,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""30630007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3018010,
							""CONCEPT_NAME"" : ""Neutrophils/100 leukocytes in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26511-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3001643,
							""CONCEPT_NAME"" : ""Hemoglobin and Hematocrit panel - Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""24360-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3013650,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""751-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3008342,
							""CONCEPT_NAME"" : ""Neutrophils/100 leukocytes in Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""770-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3007461,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26515-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3028813,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Capillary blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""42908-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151358,
							""CONCEPT_NAME"" : ""Hematocrit determination"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""28317006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050746,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Estimated"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48703-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869588,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71833-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267147,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61928009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3023314,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4544-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3034976,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41654-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393856,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022551000000104"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3031586,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood by Estimate"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49497-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869584,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71829-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 21,
			""name"" : ""Neutrophil Absolute Count"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393856,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022551000000104"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148615,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""30630007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017732,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26499-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3013650,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""751-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017501,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Manual count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""753-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 23,
			""name"" : ""Neutropenia, Agranulocytosis or Leukopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715585,
							""CONCEPT_NAME"" : ""Refractory neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721303001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 320073,
							""CONCEPT_NAME"" : ""Neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""165517008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42872951,
							""CONCEPT_NAME"" : ""Refractory neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""450946009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435224,
							""CONCEPT_NAME"" : ""Leukopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84828003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440689,
							""CONCEPT_NAME"" : ""Agranulocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17182001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766061,
							""CONCEPT_NAME"" : ""Periodontitis associated with chronic familial neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703148008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 24,
			""name"" : ""Hemoglobin measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3000963,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3027484,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood by calculation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20509-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 25,
			""name"" : ""Anemia or Reticulocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617149,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer radiotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EB"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36716029,
							""CONCEPT_NAME"" : ""Hyperuricemia, anemia, renal failure syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721840000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617148,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EA"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029669,
							""CONCEPT_NAME"" : ""Refractory anemia with sideroblasts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128846006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4120449,
							""CONCEPT_NAME"" : ""von Jaksch's anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234345001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 35624756,
							""CONCEPT_NAME"" : ""Anemia due to and following chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""767657005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028718,
							""CONCEPT_NAME"" : ""Refractory anemia with excess blasts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128847002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017165,
							""CONCEPT_NAME"" : ""GATA binding protein 1 related thrombocytopenia with dyserythropoiesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713388002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4144746,
							""CONCEPT_NAME"" : ""Hereditary hemoglobinopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""427306008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617150,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia not due to anti-cancer radiotherapy or anti-cancer chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EC"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44831063,
							""CONCEPT_NAME"" : ""Anemia associated with other specified nutritional deficiency"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281.8"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD9CM"",
							""CONCEPT_CLASS_ID"" : ""4-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4105643,
							""CONCEPT_NAME"" : ""Myasthenic syndrome due to pernicious anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""193213003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37398911,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 4"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691401000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438869,
							""CONCEPT_NAME"" : ""Perinatal jaundice due to hereditary hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56921004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4183718,
							""CONCEPT_NAME"" : ""Pericarditis associated with severe chronic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43742007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37395652,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 5"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691411000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125630,
							""CONCEPT_NAME"" : ""Chronic non-spherocytic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4217370,
							""CONCEPT_NAME"" : ""Aase syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71988008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267432,
							""CONCEPT_NAME"" : ""Erythropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62574001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36680584,
							""CONCEPT_NAME"" : ""Autosomal dominant aplasia and myelodysplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""778006008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37018722,
							""CONCEPT_NAME"" : ""Anemia caused by zidovudine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713496008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295183,
							""CONCEPT_NAME"" : ""Mixed hemoglobin disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38589006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028717,
							""CONCEPT_NAME"" : ""Refractory anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128845005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44783626,
							""CONCEPT_NAME"" : ""Pulmonary arterial hypertension associated with chronic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""697908003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4159748,
							""CONCEPT_NAME"" : ""Hand-foot syndrome in sickle cell anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371104006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4051681,
							""CONCEPT_NAME"" : ""Reticulocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""124961001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017132,
							""CONCEPT_NAME"" : ""Anemia co-occurrent with human immunodeficiency virus infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713349004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029670,
							""CONCEPT_NAME"" : ""Refractory anemia with excess blasts in transformation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128848007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006467,
							""CONCEPT_NAME"" : ""Anemia due to infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111570005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40478891,
							""CONCEPT_NAME"" : ""Erythropoietin resistance in anemia of chronic kidney disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444271000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715584,
							""CONCEPT_NAME"" : ""Refractory anemia with ringed sideroblasts associated with marked thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721302006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 26,
			""name"" : ""Platelet measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267147,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61928009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3031586,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood by Estimate"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49497-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050583,
							""CONCEPT_NAME"" : ""Platelets panel - Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53800-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3007461,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26515-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393863,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022651000000100"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 27,
			""name"" : ""Thrombocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 432870,
							""CONCEPT_NAME"" : ""Thrombocytopenic disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""302215000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006469,
							""CONCEPT_NAME"" : ""Reticular dysgenesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111584000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37397537,
							""CONCEPT_NAME"" : ""Beta thalassemia X-linked thrombocytopenia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718196002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42872952,
							""CONCEPT_NAME"" : ""Refractory thrombocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""450947000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 28,
			""name"" : ""Congenital or Genetic Neutropenia, Leukopenia or Agranulocytosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 193448,
							""CONCEPT_NAME"" : ""Doan-Wiseman syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""58639003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4289321,
							""CONCEPT_NAME"" : ""Propionic acidemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""69080001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 35622701,
							""CONCEPT_NAME"" : ""3-methylglutaconic aciduria type 7"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""764860006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434895,
							""CONCEPT_NAME"" : ""Congenital neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""89655007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 29,
			""name"" : ""Congenital or Genetic anemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295183,
							""CONCEPT_NAME"" : ""Mixed hemoglobin disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38589006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4214409,
							""CONCEPT_NAME"" : ""Hereditary red blood cell disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""414394009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125630,
							""CONCEPT_NAME"" : ""Chronic non-spherocytic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4120449,
							""CONCEPT_NAME"" : ""von Jaksch's anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234345001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017165,
							""CONCEPT_NAME"" : ""GATA binding protein 1 related thrombocytopenia with dyserythropoiesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713388002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4217370,
							""CONCEPT_NAME"" : ""Aase syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71988008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4159748,
							""CONCEPT_NAME"" : ""Hand-foot syndrome in sickle cell anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371104006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36680584,
							""CONCEPT_NAME"" : ""Autosomal dominant aplasia and myelodysplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""778006008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4301410,
							""CONCEPT_NAME"" : ""Inherited disorder of porphyrin metabolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""403832004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434156,
							""CONCEPT_NAME"" : ""Congenital anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""63565007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4024671,
							""CONCEPT_NAME"" : ""Paroxysmal nocturnal hemoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1963002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 30,
			""name"" : ""Congenital or Genetic Thrombocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006469,
							""CONCEPT_NAME"" : ""Reticular dysgenesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111584000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37397537,
							""CONCEPT_NAME"" : ""Beta thalassemia X-linked thrombocytopenia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718196002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4121131,
							""CONCEPT_NAME"" : ""Inherited platelet disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234469001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 31,
			""name"" : ""Hematocrit measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212642,
							""CONCEPT_NAME"" : ""Blood count; hematocrit (Hct)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85014"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212641,
							""CONCEPT_NAME"" : ""Blood count; spun microhematocrit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85013"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151358,
							""CONCEPT_NAME"" : ""Hematocrit determination"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""28317006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869588,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71833-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869584,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71829-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4016241,
							""CONCEPT_NAME"" : ""Hematocrit, spun microhematocrit method"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""104139004"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3009542,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20570-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3023314,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4544-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3019909,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Centrifugation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4545-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050746,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Estimated"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48703-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3028813,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Capillary blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""42908-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3034976,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41654-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""No Congenital or Genetic Neutropenia, Leukopenia or Agranulocytosis"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 28,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Congenital or Genetic anemia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 29,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Congenital or Genetic Thrombocytopenia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 30,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 60
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 365
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (432881))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (432881))

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3019909,4097621,3050583,37393863,4148615,3018010,3001643,3013650,3008342,3007461,3028813,4151358,3050746,42869588,4267147,3023314,3034976,37393856,3031586,42869584))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3019909,4097621,3050583,37393863,4148615,3018010,3001643,3013650,3008342,3007461,3028813,4151358,3050746,42869588,4267147,3023314,3034976,37393856,3031586,42869584))

) I
) C UNION ALL 
SELECT 21 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (37393856,4148615,3017732,3013650,3017501))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3017732,3013650,3017501))

) I
) C UNION ALL 
SELECT 23 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (36715585,320073,42872951,435224,440689,45766061))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (36715585,320073,42872951,435224,440689,45766061))

) I
) C UNION ALL 
SELECT 24 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3000963,3027484))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3000963,3027484))

) I
) C UNION ALL 
SELECT 25 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (2617149,36716029,2617148,4029669,4120449,35624756,4028718,37017165,4144746,2617150,44831063,4105643,37398911,438869,4183718,37395652,4125630,4217370,4267432,36680584,37018722,4295183,4028717,44783626,4159748,4051681,37017132,4029670,4006467,40478891,36715584))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (2617149,36716029,2617148,4029669,4120449,35624756,4028718,37017165,4144746,2617150,4105643,37398911,438869,4183718,37395652,4125630,4217370,4267432,36680584,37018722,4295183,4028717,44783626,4159748,4051681,37017132,4029670,4006467,40478891,36715584))

) I
) C UNION ALL 
SELECT 26 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4267147,3031586,3050583,3007461,37393863))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4267147,3031586,3050583,3007461,37393863))

) I
) C UNION ALL 
SELECT 27 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (432870,4006469,37397537,42872952))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (432870,4006469,37397537,42872952))

) I
) C UNION ALL 
SELECT 28 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (193448,4289321,35622701,434895))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (193448,4289321,35622701,434895))

) I
) C UNION ALL 
SELECT 29 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4295183,4214409,4125630,4120449,37017165,4217370,4159748,36680584,4301410,434156,4024671))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4295183,4214409,4125630,4120449,37017165,4217370,4159748,36680584,4301410,434156,4024671))

) I
) C UNION ALL 
SELECT 30 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4006469,37397537,4121131))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4006469,37397537,4121131))

) I
) C UNION ALL 
SELECT 31 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (2212642,2212641,4151358,42869588,42869584,4016241,3009542,3023314,3019909,3050746,3028813,3034976))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (2212642,2212641,4151358,42869588,42869584,4016241,3009542,3023314,3019909,3050746,3028813,3034976))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 21)
) C

WHERE (C.value_as_number >= 0.0100 and C.value_as_number <= 1.4990)
AND C.unit_concept_id in (9444,8848,8816,8961,44777588)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 21)
) C

WHERE (C.value_as_number >= 10.0000 and C.value_as_number <= 1499.0000)
AND C.unit_concept_id in (8784,8647)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 23)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 24)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 31)
) C

WHERE (C.value_as_number >= 5.0000 and C.value_as_number <= 30.0000)
AND C.unit_concept_id in (8554)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 25)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 2 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 26)
) C

WHERE (C.value_as_number >= 10.0000 and C.value_as_number <= 149.0000)
AND C.unit_concept_id in (8961,8848,9444,8816,44777588)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 27)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) >= 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 28)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 29)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 30)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{3 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),3)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,60,end_date) > op_end_date then op_end_date else DATEADD(day,60,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 365, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,365,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 3 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
216,"Isolated Immune Thrombocytopenia in absence of common thrombocytopenia causes","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 30,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 7,
			""name"" : ""Platelet measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267147,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61928009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3031586,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood by Estimate"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49497-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050583,
							""CONCEPT_NAME"" : ""Platelets panel - Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53800-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3007461,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26515-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393863,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022651000000100"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Congenital or genetic causes for thrombocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 37397537,
							""CONCEPT_NAME"" : ""Beta thalassemia X-linked thrombocytopenia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718196002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4121131,
							""CONCEPT_NAME"" : ""Inherited platelet disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234469001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006469,
							""CONCEPT_NAME"" : ""Reticular dysgenesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111584000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42537688,
							""CONCEPT_NAME"" : ""Congenital thrombocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""737221003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437242,
							""CONCEPT_NAME"" : ""Congenital thrombocytopenic purpura"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267535004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Thrombocytosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4280071,
							""CONCEPT_NAME"" : ""Thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""6631009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715584,
							""CONCEPT_NAME"" : ""Refractory anemia with ringed sideroblasts associated with marked thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721302006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766614,
							""CONCEPT_NAME"" : ""Refractory anemia with ring sideroblasts associated with marked thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703817002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 12,
			""name"" : ""Antiphospholipid syndrome"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4098292,
							""CONCEPT_NAME"" : ""Antiphospholipid syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26843008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 13,
			""name"" : ""Hypersplenism"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 192298,
							""CONCEPT_NAME"" : ""Hypersplenism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""58381000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 200527,
							""CONCEPT_NAME"" : ""Splenomegaly"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""16294009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4064314,
							""CONCEPT_NAME"" : ""O/E - splenomegaly"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164162005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4272928,
							""CONCEPT_NAME"" : ""Thrombocytopenia due to hypersplenism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""63444004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 14,
			""name"" : ""No major autoimmune disorders (RA, MS, Psoriasis, SLE, CD, UC, Addisons, Graves, Sjogren, Myasthenia Gravis, Vasculitis, Celiac)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 75580,
							""CONCEPT_NAME"" : ""Chronic ulcerative proctitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52231000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 76685,
							""CONCEPT_NAME"" : ""Myasthenia gravis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""91637004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 80809,
							""CONCEPT_NAME"" : ""Rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""69896004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 81893,
							""CONCEPT_NAME"" : ""Ulcerative colitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""64766004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 140168,
							""CONCEPT_NAME"" : ""Psoriasis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9014002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194992,
							""CONCEPT_NAME"" : ""Celiac disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""396331005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 201606,
							""CONCEPT_NAME"" : ""Crohn's disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""34000006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 254443,
							""CONCEPT_NAME"" : ""Sjögren's syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""83901003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 257628,
							""CONCEPT_NAME"" : ""Systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""55464009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 315763,
							""CONCEPT_NAME"" : ""Hodgkin's disease, nodular sclerosis of lymph nodes of multiple sites"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""188572001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 374919,
							""CONCEPT_NAME"" : ""Multiple sclerosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""24700007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 375260,
							""CONCEPT_NAME"" : ""Polyneuropathy in collagen vascular disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""193177003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 761978,
							""CONCEPT_NAME"" : ""Cognitive impairment due to multiple sclerosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""25470001000004105"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 765565,
							""CONCEPT_NAME"" : ""Functional quadriplegia due to multiple sclerosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""24800001000004103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3654567,
							""CONCEPT_NAME"" : ""Spindling of fingers of bilateral hands due to rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""836472001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3655583,
							""CONCEPT_NAME"" : ""Multiple mononeuropathy due to perinuclear antineutrophil cytoplasmic associated antibody associated vasculitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""866047004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3656106,
							""CONCEPT_NAME"" : ""Ulcer of intestine due to immunoglobulin A vasculitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871631000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4009501,
							""CONCEPT_NAME"" : ""Psoriasiform napkin eruption"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111188005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028118,
							""CONCEPT_NAME"" : ""Diffuse interstitial rheumatoid disease of lung"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10713006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4044056,
							""CONCEPT_NAME"" : ""Chorea in systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""230307005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4045732,
							""CONCEPT_NAME"" : ""Myopathy in myasthenia gravis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""230687001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4060405,
							""CONCEPT_NAME"" : ""Dilated cardiomyopathy secondary to rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21430002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4077943,
							""CONCEPT_NAME"" : ""Thyroid eye disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276177000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4102503,
							""CONCEPT_NAME"" : ""Myopathy due to Sjögren's disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""193253000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4107913,
							""CONCEPT_NAME"" : ""Myopathy due to rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""193250002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4116142,
							""CONCEPT_NAME"" : ""Arthropathy in ulcerative colitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""201727001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4132809,
							""CONCEPT_NAME"" : ""Juvenile seropositive polyarthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410796000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4132810,
							""CONCEPT_NAME"" : ""Juvenile seronegative polyarthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410797009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4137275,
							""CONCEPT_NAME"" : ""Vasculitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31996006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4140462,
							""CONCEPT_NAME"" : ""Cerebral vasculitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""427020007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4145240,
							""CONCEPT_NAME"" : ""Renal tubulo-interstitial disorder in systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""307755009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4211939,
							""CONCEPT_NAME"" : ""Anterior uveitis in juvenile idiopathic arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""416666007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4219859,
							""CONCEPT_NAME"" : ""Systemic lupus erythematosus-related syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397856003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4219879,
							""CONCEPT_NAME"" : ""Nevoid psoriasis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""400069004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4225691,
							""CONCEPT_NAME"" : ""Toxic megacolon due to ulcerative colitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""404908004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4232076,
							""CONCEPT_NAME"" : ""Graves' disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""353295004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4253901,
							""CONCEPT_NAME"" : ""Juvenile rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410795001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4269448,
							""CONCEPT_NAME"" : ""Dilated cardiomyopathy secondary to systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""36471000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4297650,
							""CONCEPT_NAME"" : ""Cutaneous atrophy due to rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402431009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4300204,
							""CONCEPT_NAME"" : ""Systemic lupus erythematosus-associated antiphospholipid syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402865003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4319305,
							""CONCEPT_NAME"" : ""Rash of systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95332009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4330635,
							""CONCEPT_NAME"" : ""Deformity of wrist due to rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""431707004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4334806,
							""CONCEPT_NAME"" : ""Deformity of foot due to rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433228003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37016279,
							""CONCEPT_NAME"" : ""Glomerular disease due to systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""308751000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37110681,
							""CONCEPT_NAME"" : ""Lumbosacral plexopathy due to vasculitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""724996005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37116301,
							""CONCEPT_NAME"" : ""Secondary autoimmune hemolytic anemia co-occurrent and due to ulcerative colitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""732966008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37117740,
							""CONCEPT_NAME"" : ""Secondary autoimmune hemolytic anemia co-occurrent and due to systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""732960002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42539357,
							""CONCEPT_NAME"" : ""Demyelination due to systemic vasculitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""762352004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44784474,
							""CONCEPT_NAME"" : ""Dementia associated with multiple sclerosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698626001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45757061,
							""CONCEPT_NAME"" : ""Restrictive strabismus due to Graves disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""103681000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45757069,
							""CONCEPT_NAME"" : ""Ophthalmoplegia due to Graves disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""104461000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766237,
							""CONCEPT_NAME"" : ""Pulmonary hypertension due to vasculitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703355003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269952,
							""CONCEPT_NAME"" : ""Fistula of intestine due to ulcerative colitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1092861000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273369,
							""CONCEPT_NAME"" : ""Endocarditis due to systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""72181000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273442,
							""CONCEPT_NAME"" : ""Deformity of hand due to rheumatoid arthritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""96531000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273477,
							""CONCEPT_NAME"" : ""Complication due to ulcerative colitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1092851000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273478,
							""CONCEPT_NAME"" : ""Rectal hemorrhage due to ulcerative colitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1092881000119105"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46274082,
							""CONCEPT_NAME"" : ""Intestinal obstruction due to ulcerative colitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1092871000119107"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 15,
			""name"" : ""Chronic Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4212540,
							""CONCEPT_NAME"" : ""Chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""328383001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 16,
			""name"" : ""Nutritional deficiency (mostly malnutrition)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 435227,
							""CONCEPT_NAME"" : ""Nutritional deficiency disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""70241007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4181204,
							""CONCEPT_NAME"" : ""Nutritional deficiency associated condition"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363246002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 35622258,
							""CONCEPT_NAME"" : ""Intellectual disability due to nutritional deficiency"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""763626009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4101286,
							""CONCEPT_NAME"" : ""Sequelae of malnutrition and other nutritional deficiencies"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""190674005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434622,
							""CONCEPT_NAME"" : ""Deficiency anemias"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267513007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4280354,
							""CONCEPT_NAME"" : ""Nutritional anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""66612000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436070,
							""CONCEPT_NAME"" : ""Vitamin D deficiency"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""34713006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436658,
							""CONCEPT_NAME"" : ""Vitamin deficiency"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85670002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4146209,
							""CONCEPT_NAME"" : ""Iron deficiency"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""35240004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 18,
			""name"" : ""Paroxysmal nocturnal hemoglobinuria"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4024671,
							""CONCEPT_NAME"" : ""Paroxysmal nocturnal hemoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1963002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40481388,
							""CONCEPT_NAME"" : ""Thrombophilia due to paroxysmal nocturnal hemoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""441990004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 19,
			""name"" : ""Hemolytic uremic syndrome"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 197253,
							""CONCEPT_NAME"" : ""Hemolytic uremic syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111407006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4159966,
							""CONCEPT_NAME"" : ""Upshaw-Schulman syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""373420004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36674324,
							""CONCEPT_NAME"" : ""Hemolytic uremic syndrome suspected"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""772169008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 20,
			""name"" : ""Thrombotic microangiopathy"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 313800,
							""CONCEPT_NAME"" : ""Thrombotic microangiopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""126729006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4198102,
							""CONCEPT_NAME"" : ""Microangiopathic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""51071000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 21,
			""name"" : ""HELLP syndrome"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4316372,
							""CONCEPT_NAME"" : ""HELLP syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95605009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 23,
			""name"" : ""Tumors of hematopoietic cells including lymphoma, leukemia, myeloma and related"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4030264,
							""CONCEPT_NAME"" : ""Chronic myelomonocytic leukemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128831004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295651,
							""CONCEPT_NAME"" : ""Lymphoma stage finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""385389007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4043444,
							""CONCEPT_NAME"" : ""Bone marrow erythropoiesis hyperplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""167922001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4057594,
							""CONCEPT_NAME"" : ""Erythroid hypoplasia of bone marrow"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""167923006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37016161,
							""CONCEPT_NAME"" : ""Light chain nephropathy due to multiple myeloma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127911000119105"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4056992,
							""CONCEPT_NAME"" : ""Bone marrow myeloid hypoplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""167928002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4043445,
							""CONCEPT_NAME"" : ""Bone marrow myeloid hyperplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""167927007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4323972,
							""CONCEPT_NAME"" : ""Plasma cell hyperplasia of bone marrow"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""70958007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36402787,
							""CONCEPT_NAME"" : ""Waldenstrom macroglobulinemia of blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9761/3-C42.0"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICDO3"",
							""CONCEPT_CLASS_ID"" : ""ICDO Condition""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432571,
							""CONCEPT_NAME"" : ""Malignant lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""118600007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161665,
							""CONCEPT_NAME"" : ""Lymphoma finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399600009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4041104,
							""CONCEPT_NAME"" : ""Malignant histiocytosis (clinical)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""118612006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36402625,
							""CONCEPT_NAME"" : ""Heavy chain disease, NOS, of blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9762/3-C42.0"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICDO3"",
							""CONCEPT_CLASS_ID"" : ""ICDO Condition""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4156433,
							""CONCEPT_NAME"" : ""Myelosuppression"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""370569000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4241295,
							""CONCEPT_NAME"" : ""High grade (lymphoma)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""369767007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4219140,
							""CONCEPT_NAME"" : ""Bone marrow granulocytic aplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""417250005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 317510,
							""CONCEPT_NAME"" : ""Leukemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93143009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4215820,
							""CONCEPT_NAME"" : ""Hypocellular bone marrow"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""416995001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4224628,
							""CONCEPT_NAME"" : ""Amyloid light chain amyloidosis due to multiple myeloma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402453006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4347562,
							""CONCEPT_NAME"" : ""Splenic schistosomal giant cell lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""240794006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161138,
							""CONCEPT_NAME"" : ""Surgical margin uninvolved by lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399570001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058706,
							""CONCEPT_NAME"" : ""History of leukemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161436008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37206728,
							""CONCEPT_NAME"" : ""Monoclonal B-cell lymphocytosis chronic lymphocytic leukemia-type"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""786855003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37204530,
							""CONCEPT_NAME"" : ""Non-chronic lymphocytic leukemia monoclonal B-cell lymphocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""783211008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45767656,
							""CONCEPT_NAME"" : ""Gingivitis due to leukemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""705127009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4264693,
							""CONCEPT_NAME"" : ""Mast cell malignancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397009000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4043713,
							""CONCEPT_NAME"" : ""Neuropathy due to multiple myeloma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""230586003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4301780,
							""CONCEPT_NAME"" : ""Leukemic infiltration of skin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""404156009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4301659,
							""CONCEPT_NAME"" : ""Lymphomatoid papulosis type C (anaplastic large-cell lymphoma-like)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""404105000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4221907,
							""CONCEPT_NAME"" : ""Precursor T cell lymphoblastic leukemia/lymphoblastic lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420890002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437233,
							""CONCEPT_NAME"" : ""Multiple myeloma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""109989006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4131124,
							""CONCEPT_NAME"" : ""Bone marrow disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127035006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36402821,
							""CONCEPT_NAME"" : ""Immunoproliferative small intestinal disease of blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9764/3-C42.0"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICDO3"",
							""CONCEPT_CLASS_ID"" : ""ICDO Condition""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161560,
							""CONCEPT_NAME"" : ""Surgical distal margin involved by lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399545001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37110403,
							""CONCEPT_NAME"" : ""Langerhans cell sarcoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""724649000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161020,
							""CONCEPT_NAME"" : ""Surgical circumferential margin involved by lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399457008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4164159,
							""CONCEPT_NAME"" : ""Surgical margin involvement by lymphoma cannot be assessed"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399676002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 24,
			""name"" : ""Pancytopenia & bone marrow disorder"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 432881,
							""CONCEPT_NAME"" : ""Pancytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127034005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4131124,
							""CONCEPT_NAME"" : ""Bone marrow disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127035006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 25,
			""name"" : ""Neutropenia, Agranulocytosis or Leukopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715585,
							""CONCEPT_NAME"" : ""Refractory neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721303001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 320073,
							""CONCEPT_NAME"" : ""Neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""165517008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42872951,
							""CONCEPT_NAME"" : ""Refractory neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""450946009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435224,
							""CONCEPT_NAME"" : ""Leukopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84828003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440689,
							""CONCEPT_NAME"" : ""Agranulocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17182001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766061,
							""CONCEPT_NAME"" : ""Periodontitis associated with chronic familial neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703148008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 26,
			""name"" : ""Neutrophil Absolute Count"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393856,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022551000000104"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148615,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""30630007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017732,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26499-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3013650,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""751-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017501,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Manual count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""753-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 27,
			""name"" : ""Anemia or Reticulocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617149,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer radiotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EB"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36716029,
							""CONCEPT_NAME"" : ""Hyperuricemia, anemia, renal failure syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721840000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617148,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EA"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029669,
							""CONCEPT_NAME"" : ""Refractory anemia with sideroblasts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128846006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4120449,
							""CONCEPT_NAME"" : ""von Jaksch's anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234345001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 35624756,
							""CONCEPT_NAME"" : ""Anemia due to and following chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""767657005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028718,
							""CONCEPT_NAME"" : ""Refractory anemia with excess blasts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128847002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017165,
							""CONCEPT_NAME"" : ""GATA binding protein 1 related thrombocytopenia with dyserythropoiesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713388002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4144746,
							""CONCEPT_NAME"" : ""Hereditary hemoglobinopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""427306008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617150,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia not due to anti-cancer radiotherapy or anti-cancer chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EC"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44831063,
							""CONCEPT_NAME"" : ""Anemia associated with other specified nutritional deficiency"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281.8"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD9CM"",
							""CONCEPT_CLASS_ID"" : ""4-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4105643,
							""CONCEPT_NAME"" : ""Myasthenic syndrome due to pernicious anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""193213003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37398911,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 4"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691401000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438869,
							""CONCEPT_NAME"" : ""Perinatal jaundice due to hereditary hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56921004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4183718,
							""CONCEPT_NAME"" : ""Pericarditis associated with severe chronic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43742007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37395652,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 5"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691411000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125630,
							""CONCEPT_NAME"" : ""Chronic non-spherocytic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4217370,
							""CONCEPT_NAME"" : ""Aase syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71988008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267432,
							""CONCEPT_NAME"" : ""Erythropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62574001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36680584,
							""CONCEPT_NAME"" : ""Autosomal dominant aplasia and myelodysplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""778006008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37018722,
							""CONCEPT_NAME"" : ""Anemia caused by zidovudine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713496008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295183,
							""CONCEPT_NAME"" : ""Mixed hemoglobin disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38589006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028717,
							""CONCEPT_NAME"" : ""Refractory anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128845005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44783626,
							""CONCEPT_NAME"" : ""Pulmonary arterial hypertension associated with chronic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""697908003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4159748,
							""CONCEPT_NAME"" : ""Hand-foot syndrome in sickle cell anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371104006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4051681,
							""CONCEPT_NAME"" : ""Reticulocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""124961001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017132,
							""CONCEPT_NAME"" : ""Anemia co-occurrent with human immunodeficiency virus infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713349004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029670,
							""CONCEPT_NAME"" : ""Refractory anemia with excess blasts in transformation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128848007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006467,
							""CONCEPT_NAME"" : ""Anemia due to infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111570005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40478891,
							""CONCEPT_NAME"" : ""Erythropoietin resistance in anemia of chronic kidney disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444271000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715584,
							""CONCEPT_NAME"" : ""Refractory anemia with ringed sideroblasts associated with marked thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721302006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 28,
			""name"" : ""Hemoglobin measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3000963,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3027484,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood by calculation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20509-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 29,
			""name"" : ""Hematocrit measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3009542,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20570-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3034976,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41654-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3028813,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Capillary blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""42908-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3019909,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Centrifugation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4545-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050746,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Estimated"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48703-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869584,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Venous blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71829-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3023314,
							""CONCEPT_NAME"" : ""Hematocrit [Volume Fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4544-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42869588,
							""CONCEPT_NAME"" : ""Hematocrit [Pure volume fraction] of Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71833-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4016241,
							""CONCEPT_NAME"" : ""Hematocrit, spun microhematocrit method"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""104139004"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151358,
							""CONCEPT_NAME"" : ""Hematocrit determination"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""28317006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4097621,
							""CONCEPT_NAME"" : ""Platelet hematocrit measurement"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""250314004"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212641,
							""CONCEPT_NAME"" : ""Blood count; spun microhematocrit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85013"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212642,
							""CONCEPT_NAME"" : ""Blood count; hematocrit (Hct)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85014"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 30,
			""name"" : ""Immune Thrombocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4103532,
							""CONCEPT_NAME"" : ""Immune thrombocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2897005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4119134,
							""CONCEPT_NAME"" : ""Thrombocytopenic purpura"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""302873008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40479556,
							""CONCEPT_NAME"" : ""History of immune thrombocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""441511006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""365 days  washout period "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 30,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No congenital or genetic thrombocytopenia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 9,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Platelet count > 100 on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 7,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 101,
									""Op"" : ""bt"",
									""Extent"" : 450
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 8848,
										""CONCEPT_NAME"" : ""thousand per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8961,
										""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/mm3"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 9444,
										""CONCEPT_NAME"" : ""billion per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8816,
										""CONCEPT_NAME"" : ""million per milliliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*6/mL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 44777588,
										""CONCEPT_NAME"" : ""billion cells per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No thrombocytosis on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 10,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Hypersplenism"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 13,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Antiphospholipid syndrome"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 12,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Paroxysmal nocturnal hemoglobinuria"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 18,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Hemolytic uremic syndrome"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 19,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Thrombotic microangiopathy"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 20,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No major autoimmune disorders (RA, MS, Psoriasis, SLE, CD, UC, Addisons, Graves, Sjogren, Myasthenia Gravis, Vasculitis, Celiac)"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 14,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Chronic Liver Disease"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 15,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Pregnancy related HELLP syndrome (in past 3 months)"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 21,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 90,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No tumors of hematopoietic cells including lymphoma, leukemia, myeloma and related"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 23,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Nutritional deficiency"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 16,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Pancytopenia or bone marrow disorder diagnosis within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 24,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Neutropenia, Agranulocytosis diagnosis within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 25,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No low neutrophil count within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 26,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 0.010000000000000000208167,
									""Op"" : ""bt"",
									""Extent"" : 1.4990000000000001101341
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 9444,
										""CONCEPT_NAME"" : ""billion per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8848,
										""CONCEPT_NAME"" : ""thousand per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8816,
										""CONCEPT_NAME"" : ""million per milliliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*6/mL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8961,
										""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/mm3"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 44777588,
										""CONCEPT_NAME"" : ""billion cells per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								],
								""RangeLow"" : {
									""Value"" : 1.5,
									""Op"" : ""bt"",
									""Extent"" : 4
								}
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 26,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 10,
									""Op"" : ""bt"",
									""Extent"" : 1500
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 8784,
										""CONCEPT_NAME"" : ""cells per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""{cells}/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8647,
										""CONCEPT_NAME"" : ""per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Anemia diagnosis within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 27,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 27,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No low Hemoglobin measurement in blood within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 28,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 4,
									""Op"" : ""bt"",
									""Extent"" : 11
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 4121395,
										""CONCEPT_NAME"" : ""g/dL"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""258795003"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""SNOMED"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8713,
										""CONCEPT_NAME"" : ""gram per deciliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""g/dL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8950,
										""CONCEPT_NAME"" : ""gram per deciliter calculated"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""g/dL{calc}"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No low Hematocrit measurement in blood within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 29,
								""MeasurementTypeExclude"" : false,
								""Unit"" : [
									{
										""CONCEPT_ID"" : 8554,
										""CONCEPT_NAME"" : ""percent"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""%"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 180
		}
	},
	""CensoringCriteria"" : [
		{
			""Measurement"" : {
				""CodesetId"" : 7,
				""MeasurementTypeExclude"" : false,
				""ValueAsNumber"" : {
					""Value"" : 150,
					""Op"" : ""bt"",
					""Extent"" : 450
				},
				""Unit"" : [
					{
						""CONCEPT_ID"" : 8848,
						""CONCEPT_NAME"" : ""thousand per microliter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*3/uL"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 8961,
						""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*3/mm3"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 9444,
						""CONCEPT_NAME"" : ""billion per liter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*9/L"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 8816,
						""CONCEPT_NAME"" : ""million per milliliter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*6/mL"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 44777588,
						""CONCEPT_NAME"" : ""billion cells per liter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					}
				]
			}
		},
		{
			""ConditionOccurrence"" : {
				""CodesetId"" : 10,
				""ConditionTypeExclude"" : false
			}
		}
	],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4267147,3031586,3050583,3007461,37393863))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4267147,3031586,3050583,3007461,37393863))

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (37397537,4121131,4006469,42537688,437242))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (37397537,4121131,4006469,42537688,437242))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4280071,36715584,45766614))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4280071,36715584,45766614))

) I
) C UNION ALL 
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4098292))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4098292))

) I
) C UNION ALL 
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (192298,200527,4064314,4272928))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (192298,200527,4064314,4272928))

) I
) C UNION ALL 
SELECT 14 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (75580,76685,80809,81893,140168,194992,201606,254443,257628,315763,374919,375260,761978,765565,3654567,3655583,3656106,4009501,4028118,4044056,4045732,4060405,4077943,4102503,4107913,4116142,4132809,4132810,4137275,4140462,4145240,4211939,4219859,4219879,4225691,4232076,4253901,4269448,4297650,4300204,4319305,4330635,4334806,37016279,37110681,37116301,37117740,42539357,44784474,45757061,45757069,45766237,46269952,46273369,46273442,46273477,46273478,46274082))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (75580,76685,80809,81893,140168,194992,201606,254443,257628,315763,374919,375260,761978,765565,3654567,3655583,3656106,4009501,4028118,4044056,4045732,4060405,4077943,4102503,4107913,4116142,4132809,4132810,4137275,4140462,4145240,4211939,4219859,4219879,4225691,4232076,4253901,4269448,4297650,4300204,4319305,4330635,4334806,37016279,37110681,37116301,37117740,42539357,44784474,45757061,45757069,45766237,46269952,46273369,46273442,46273477,46273478,46274082))

) I
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4212540))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4212540))

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435227,4181204,35622258,4101286))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435227,4181204,35622258,4101286))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (434622,4280354,436070,436658,4146209))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (434622,4280354,436070,436658,4146209))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4024671,40481388))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4024671,40481388))

) I
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (197253,4159966,36674324))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (197253,4159966,36674324))

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (313800,4198102))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (313800,4198102))

) I
) C UNION ALL 
SELECT 21 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4316372))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4316372))

) I
) C UNION ALL 
SELECT 23 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4030264,4295651,4043444,4057594,37016161,4056992,4043445,4323972,36402787,432571,4161665,4041104,36402625,4156433,4241295,4219140,317510,4215820,4224628,4347562,4161138,4058706,37206728,37204530,45767656,4264693,4043713,4301780,4301659,4221907,437233,4131124,36402821,4161560,37110403,4161020,4164159))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4030264,4295651,4043444,4057594,37016161,4056992,4043445,4323972,36402787,432571,4161665,4041104,36402625,4156433,4241295,4219140,317510,4215820,4224628,4347562,4161138,4058706,37206728,37204530,45767656,4264693,4043713,4301780,4301659,4221907,437233,4131124,36402821,4161560,37110403,4161020,4164159))

) I
) C UNION ALL 
SELECT 24 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (432881,4131124))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (432881,4131124))

) I
) C UNION ALL 
SELECT 25 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (36715585,320073,42872951,435224,440689,45766061))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (36715585,320073,42872951,435224,440689,45766061))

) I
) C UNION ALL 
SELECT 26 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (37393856,4148615,3017732,3013650,3017501))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3017732,3013650,3017501))

) I
) C UNION ALL 
SELECT 27 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (2617149,36716029,2617148,4029669,4120449,35624756,4028718,37017165,4144746,2617150,44831063,4105643,37398911,438869,4183718,37395652,4125630,4217370,4267432,36680584,37018722,4295183,4028717,44783626,4159748,4051681,37017132,4029670,4006467,40478891,36715584))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (2617149,36716029,2617148,4029669,4120449,35624756,4028718,37017165,4144746,2617150,4105643,37398911,438869,4183718,37395652,4125630,4217370,4267432,36680584,37018722,4295183,4028717,44783626,4159748,4051681,37017132,4029670,4006467,40478891,36715584))

) I
) C UNION ALL 
SELECT 28 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3000963,3027484))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3000963,3027484))

) I
) C UNION ALL 
SELECT 29 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3009542,3034976,3028813,3019909,3050746,42869584,3023314,42869588,4016241,4151358,4097621,2212641,2212642))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3009542,3034976,3028813,3019909,3050746,42869584,3023314,42869588,4016241,4151358,4097621,2212641,2212642))

) I
) C UNION ALL 
SELECT 30 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4103532,4119134,40479556))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4103532,4119134,40479556))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 30)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 30)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 7)
) C

WHERE (C.value_as_number >= 101.0000 and C.value_as_number <= 450.0000)
AND C.unit_concept_id in (8848,8961,9444,8816,44777588)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 13)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 7 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_7
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 8 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_8
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 9 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_9
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 10 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_10
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 11 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_11
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 21)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-90,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 12 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_12
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 23)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 13 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_13
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 14 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_14
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 24)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 15 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_15
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 25)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 16 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_16
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 26)
) C

WHERE (C.value_as_number >= 0.0100 and C.value_as_number <= 1.4990)
AND C.unit_concept_id in (9444,8848,8816,8961,44777588)
AND (C.range_low >= 1.5000 and C.range_low <= 4.0000)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 26)
) C

WHERE (C.value_as_number >= 10.0000 and C.value_as_number <= 1500.0000)
AND C.unit_concept_id in (8784,8647)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 17 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_17
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 27)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 27)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 18 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_18
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 28)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 19 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_19
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 29)
) C

WHERE C.unit_concept_id in (8554)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_7
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_8
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_9
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_10
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_11
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_12
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_13
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_14
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_15
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_16
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_17
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_18
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_19) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;

TRUNCATE TABLE #Inclusion_7;
DROP TABLE #Inclusion_7;

TRUNCATE TABLE #Inclusion_8;
DROP TABLE #Inclusion_8;

TRUNCATE TABLE #Inclusion_9;
DROP TABLE #Inclusion_9;

TRUNCATE TABLE #Inclusion_10;
DROP TABLE #Inclusion_10;

TRUNCATE TABLE #Inclusion_11;
DROP TABLE #Inclusion_11;

TRUNCATE TABLE #Inclusion_12;
DROP TABLE #Inclusion_12;

TRUNCATE TABLE #Inclusion_13;
DROP TABLE #Inclusion_13;

TRUNCATE TABLE #Inclusion_14;
DROP TABLE #Inclusion_14;

TRUNCATE TABLE #Inclusion_15;
DROP TABLE #Inclusion_15;

TRUNCATE TABLE #Inclusion_16;
DROP TABLE #Inclusion_16;

TRUNCATE TABLE #Inclusion_17;
DROP TABLE #Inclusion_17;

TRUNCATE TABLE #Inclusion_18;
DROP TABLE #Inclusion_18;

TRUNCATE TABLE #Inclusion_19;
DROP TABLE #Inclusion_19;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{20 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),20)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,180,end_date) > op_end_date then op_end_date else DATEADD(day,180,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

UNION ALL
-- Censor Events
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 7)
) C

WHERE (C.value_as_number >= 150.0000 and C.value_as_number <= 450.0000)
AND C.unit_concept_id in (8848,8961,9444,8816,44777588)
-- End Measurement Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Condition Occurrence Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id


    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 20 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence UNION ALL SELECT CAST(6 as int) as rule_sequence UNION ALL SELECT CAST(7 as int) as rule_sequence UNION ALL SELECT CAST(8 as int) as rule_sequence UNION ALL SELECT CAST(9 as int) as rule_sequence UNION ALL SELECT CAST(10 as int) as rule_sequence UNION ALL SELECT CAST(11 as int) as rule_sequence UNION ALL SELECT CAST(12 as int) as rule_sequence UNION ALL SELECT CAST(13 as int) as rule_sequence UNION ALL SELECT CAST(14 as int) as rule_sequence UNION ALL SELECT CAST(15 as int) as rule_sequence UNION ALL SELECT CAST(16 as int) as rule_sequence UNION ALL SELECT CAST(17 as int) as rule_sequence UNION ALL SELECT CAST(18 as int) as rule_sequence UNION ALL SELECT CAST(19 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
218,"Rhabdomyolysis","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 1,
					""ObservationTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""Measurement"" : {
										""CodesetId"" : 13,
										""MeasurementTypeExclude"" : false,
										""ValueAsNumber"" : {
											""Value"" : 0,
											""Op"" : ""gt""
										},
										""RangeHigh"" : {
											""Value"" : 100,
											""Op"" : ""gt""
										},
										""RangeHighRatio"" : {
											""Value"" : 5,
											""Op"" : ""gt""
										}
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 7,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 7,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 12,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Rhabdomyolysis or Myoglobinuria"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4207805,
							""CONCEPT_NAME"" : ""Idiopathic myoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5523002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4230337,
							""CONCEPT_NAME"" : ""Rhabdomyolysis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""89010004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4345578,
							""CONCEPT_NAME"" : ""Rhabdomyolysis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""240131006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44808744,
							""CONCEPT_NAME"" : ""Acute renal failure due to non-traumatic rhabdomyolysis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""841961000000100"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439142,
							""CONCEPT_NAME"" : ""Myoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48165008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Burn"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 442013,
							""CONCEPT_NAME"" : ""Burn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""125666000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Inpatient or Inpatient/ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Trauma"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 440921,
							""CONCEPT_NAME"" : ""Traumatic injury"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""417746004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Drowning"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 443081,
							""CONCEPT_NAME"" : ""Drowning and non-fatal immersion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""212962007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Hypothermia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 435371,
							""CONCEPT_NAME"" : ""Hypothermia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""386689009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Hyperthermia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4260205,
							""CONCEPT_NAME"" : ""Hyperpyrexia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""409702008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Sepsis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 132797,
							""CONCEPT_NAME"" : ""Sepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""91302008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Crush Syndrome"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4128029,
							""CONCEPT_NAME"" : ""Crush syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""23697004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Exertional rhabdomyolysis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4218766,
							""CONCEPT_NAME"" : ""Exertional rhabdomyolysis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""72960004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 11,
			""name"" : ""March myoglobinuria"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4140389,
							""CONCEPT_NAME"" : ""March myoglobinuria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""33033006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 12,
			""name"" : ""Muscle, ligament and fascia disorders"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 137967,
							""CONCEPT_NAME"" : ""Muscle, ligament and fascia disorders"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""268006001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 13,
			""name"" : ""Rhabdomyolysis measurement of creatine kinase"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 40782593,
							""CONCEPT_NAME"" : ""Creatine kinase"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""LP15510-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""LOINC Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4265595,
							""CONCEPT_NAME"" : ""Creatine kinase measurement"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397798009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 14,
			""name"" : ""Alcohol intoxication"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4104431,
							""CONCEPT_NAME"" : ""Alcohol intoxication"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""25702006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Washout period - 180 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 180,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 1,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 180,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ALL"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""Measurement"" : {
													""CodesetId"" : 13,
													""MeasurementTypeExclude"" : false,
													""ValueAsNumber"" : {
														""Value"" : 0,
														""Op"" : ""gt""
													},
													""RangeHigh"" : {
														""Value"" : 100,
														""Op"" : ""gt""
													},
													""RangeHighRatio"" : {
														""Value"" : 5,
														""Op"" : ""gt""
													}
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 7,
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 7,
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 12,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 180,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Requires hospitalization"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CodesetId"" : 3,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""EndWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : true
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No major trauma in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ANY"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 4,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 3,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No major burn in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ANY"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 2,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 3,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No major drowning in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ANY"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 5,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 3,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No major hypothermia in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ANY"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 6,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 3,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No major hyperthermia or hyperpyrexia in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ANY"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 7,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 3,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Sepsis inpatient in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ANY"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 8,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 3,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Sepsis in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 8,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Crush Syndrome in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 9,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No March myoglobinuria in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 11,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Not due to exertional reasons in last 14 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 10,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No alcohol intoxication in the last 14 days "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 14,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 14,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4207805,4230337,4345578,44808744,439142))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4207805,4230337,4345578,44808744,439142))

) I
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (442013))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (442013))

) I
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (262,9201))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (262,9201))

) I
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (440921))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (440921))

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (443081))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (443081))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435371))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435371))

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4260205))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4260205))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (132797))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (132797))

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4128029))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4128029))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4218766))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4218766))

) I
) C UNION ALL 
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4140389))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4140389))

) I
) C UNION ALL 
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (137967))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (137967))

) I
) C UNION ALL 
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (40782593,4265595))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (40782593,4265595))

) I
) C UNION ALL 
SELECT 14 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4104431))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4104431))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Observation Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 13)
) C

WHERE C.value_as_number > 0.0000
AND C.range_high > 100.0000
AND (C.value_as_number / NULLIF(C.range_high, 0)) > 5.0000
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 13)
) C

WHERE C.value_as_number > 0.0000
AND C.range_high > 100.0000
AND (C.value_as_number / NULLIF(C.range_high, 0)) > 5.0000
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 4)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 7 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_7
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 8 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_8
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 9 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_9
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 10 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_10
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 11 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_11
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 12 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_12
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-14,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_7
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_8
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_9
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_10
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_11
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_12) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;

TRUNCATE TABLE #Inclusion_7;
DROP TABLE #Inclusion_7;

TRUNCATE TABLE #Inclusion_8;
DROP TABLE #Inclusion_8;

TRUNCATE TABLE #Inclusion_9;
DROP TABLE #Inclusion_9;

TRUNCATE TABLE #Inclusion_10;
DROP TABLE #Inclusion_10;

TRUNCATE TABLE #Inclusion_11;
DROP TABLE #Inclusion_11;

TRUNCATE TABLE #Inclusion_12;
DROP TABLE #Inclusion_12;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{13 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),13)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > op_end_date then op_end_date else DATEADD(day,3,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 13 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence UNION ALL SELECT CAST(6 as int) as rule_sequence UNION ALL SELECT CAST(7 as int) as rule_sequence UNION ALL SELECT CAST(8 as int) as rule_sequence UNION ALL SELECT CAST(9 as int) as rule_sequence UNION ALL SELECT CAST(10 as int) as rule_sequence UNION ALL SELECT CAST(11 as int) as rule_sequence UNION ALL SELECT CAST(12 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
219,"Sudden Cardiac arrest or cardiac death","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 0,
					""ObservationTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 0,
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Cardiac arrest"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4249449,
							""CONCEPT_NAME"" : ""Failed attempted termination of pregnancy with cardiac arrest and/or failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""73837001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766194,
							""CONCEPT_NAME"" : ""Hypoxic ischemic encephalopathy due to cardiac arrest"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703305006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4141660,
							""CONCEPT_NAME"" : ""Cardiopulmonary resuscitation discontinued - return of spontaneous circulation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""426970003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44790539,
							""CONCEPT_NAME"" : ""Cardiopulmonary resuscitation discontinued - reason unknown"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""243391000000102"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4232320,
							""CONCEPT_NAME"" : ""Cardiopulmonary resuscitation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""89666000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4143106,
							""CONCEPT_NAME"" : ""Cardiopulmonary resuscitation discontinued - medical control order"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""425519007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4317150,
							""CONCEPT_NAME"" : ""Sudden cardiac death"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95281009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4146438,
							""CONCEPT_NAME"" : ""Cardiopulmonary resuscitation discontinued as per protocol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""427569000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4173781,
							""CONCEPT_NAME"" : ""Cardiac arrest due to electrocution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""424390001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4143834,
							""CONCEPT_NAME"" : ""Cardiopulmonary resuscitation discontinued - signs of death"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""426999008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 321042,
							""CONCEPT_NAME"" : ""Cardiac arrest"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410429000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4141039,
							""CONCEPT_NAME"" : ""Cardiopulmonary resuscitation discontinued due to do not resuscitate order"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""425921008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4175137,
							""CONCEPT_NAME"" : ""Miscarriage with cardiac arrest and/or cardiac failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48739004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43530918,
							""CONCEPT_NAME"" : ""Induced termination of pregnancy complicated by cardiac arrest and/or failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""609460008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3663210,
							""CONCEPT_NAME"" : ""Collapse due to cardiac arrest"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""840333006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4296246,
							""CONCEPT_NAME"" : ""Cardiopulmonary resuscitation management"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""386240008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4233618,
							""CONCEPT_NAME"" : ""Cardiac arrest rhythm"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""405804005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4077195,
							""CONCEPT_NAME"" : ""Respiratory arrest preceding cardiac arrest"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276259003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4204802,
							""CONCEPT_NAME"" : ""Direct current defibrillation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""308842001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4064455,
							""CONCEPT_NAME"" : ""EKG: ventricular fibrillation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164896001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Has Inpatient or ER visit "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CodesetId"" : 1,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""EndWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : true
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4249449,45766194,4141660,44790539,4232320,4143106,4317150,4146438,4173781,4143834,321042,4141039,4175137,43530918,3663210,4296246,4233618,4077195,4204802,4064455))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4249449,45766194,4141660,44790539,4232320,4143106,4317150,4146438,4173781,4143834,321042,4141039,4175137,43530918,3663210,4296246,4233618,4077195,4204802,4064455))

) I
) C UNION ALL 
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (262,9203,9201))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (262,9203,9201))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Observation Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{1 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)
}
) Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > op_end_date then op_end_date else DATEADD(day,1,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 1 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
222,"Stevens-Johnson syndrome, toxic epidermal necrolysis spectrum","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 2,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Stevens-Johnson syndrome or TEN"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 35625857,
							""CONCEPT_NAME"" : ""Stevens-Johnson syndrome, toxic epidermal necrolysis spectrum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""768946000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Emergency room or Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Visit is Inpatient or Emergency Room"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CodesetId"" : 3,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""EndWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""End"" : {
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : true
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (35625857))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (35625857))

) I
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (262,9203,9201))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (262,9203,9201))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{1 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)
}
) Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > op_end_date then op_end_date else DATEADD(day,1,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 1 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
229,"Progressive multifocal leukoencephalopathy","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Progressive Multifocal Leukoencephalopathy (PML)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 433957,
							""CONCEPT_NAME"" : ""Progressive multifocal leukoencephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22255007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4100234,
							""CONCEPT_NAME"" : ""Cerebral degeneration due to progressive multifocal leukoencephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""192819000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (433957,4100234))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (433957,4100234))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{0 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),0)-1)
}
) Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 0 != 0}?{

CREATE TABLE #inclusion_rules (rule_sequence int);

-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
275,"Polymorphic Ventricular Tachycardia or Torsades de Pointes","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Ventricular tachycardia, polymorphic or EKG torsades"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4088349,
							""CONCEPT_NAME"" : ""Ventricular tachycardia, polymorphic"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""251159007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4141527,
							""CONCEPT_NAME"" : ""EKG: torsades de pointes"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""426882006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017188,
							""CONCEPT_NAME"" : ""EKG ventricular tachycardia polymorphic"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713420008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4088349,4141527,37017188))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4088349,4141527,37017188))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{0 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),0)-1)
}
) Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > op_end_date then op_end_date else DATEADD(day,3,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 0 != 0}?{

CREATE TABLE #inclusion_rules (rule_sequence int);

-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
276,"Sudden Vision Loss","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Vision Loss"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 377556,
							""CONCEPT_NAME"" : ""Sudden visual loss"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""15203004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4338523,
							""CONCEPT_NAME"" : ""Amaurosis fugax"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88032003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Eye Pathology"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4285569,
							""CONCEPT_NAME"" : ""Pupillary disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""68633000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443767,
							""CONCEPT_NAME"" : ""Disorder of eye due to diabetes mellitus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""25093002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437541,
							""CONCEPT_NAME"" : ""Glaucoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""23986001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 381290,
							""CONCEPT_NAME"" : ""Ocular hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4210003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4134613,
							""CONCEPT_NAME"" : ""Eye infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128351009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436134,
							""CONCEPT_NAME"" : ""Disorder of sclera"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""33064008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435656,
							""CONCEPT_NAME"" : ""Neonatal jaundice"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""387712008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Washout - no prior vision loss in 365 days prior"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No eye pathology"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 2,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 90
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (377556,4338523))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (377556,4338523))

) I
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4285569,443767,437541,381290,4134613,436134))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4285569,443767,437541,381290,4134613,436134))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435656))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435656))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{2 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,90,start_date) > op_end_date then op_end_date else DATEADD(day,90,start_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 2 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
720,"Aplastic Anemia","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 32,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 17,
			""name"" : ""Bone Marrow Hyperplasia, Infiltration including Lymphoma, Leukemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 317510,
							""CONCEPT_NAME"" : ""Leukemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93143009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432571,
							""CONCEPT_NAME"" : ""Malignant lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""118600007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437233,
							""CONCEPT_NAME"" : ""Multiple myeloma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""109989006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3654297,
							""CONCEPT_NAME"" : ""Anaplastic lymphoma kinase fusion oncogene negative non-small cell lung cancer"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""830055006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3654352,
							""CONCEPT_NAME"" : ""Anaplastic lymphoma kinase fusion oncogene positive non-small cell lung cancer"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""830151004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4005251,
							""CONCEPT_NAME"" : ""Bone marrow hyperplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10138007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4030264,
							""CONCEPT_NAME"" : ""Chronic myelomonocytic leukemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128831004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4043444,
							""CONCEPT_NAME"" : ""Bone marrow erythropoiesis hyperplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""167922001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4043445,
							""CONCEPT_NAME"" : ""Bone marrow myeloid hyperplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""167927007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4043713,
							""CONCEPT_NAME"" : ""Neuropathy due to multiple myeloma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""230586003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058706,
							""CONCEPT_NAME"" : ""History of leukemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161436008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4156433,
							""CONCEPT_NAME"" : ""Myelosuppression"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""370569000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161020,
							""CONCEPT_NAME"" : ""Surgical circumferential margin involved by lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399457008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161138,
							""CONCEPT_NAME"" : ""Surgical margin uninvolved by lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399570001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161560,
							""CONCEPT_NAME"" : ""Surgical distal margin involved by lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399545001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161665,
							""CONCEPT_NAME"" : ""Lymphoma finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399600009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4164159,
							""CONCEPT_NAME"" : ""Surgical margin involvement by lymphoma cannot be assessed"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399676002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4221907,
							""CONCEPT_NAME"" : ""Precursor T cell lymphoblastic leukemia/lymphoblastic lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420890002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4224628,
							""CONCEPT_NAME"" : ""Amyloid light chain amyloidosis due to multiple myeloma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402453006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4241295,
							""CONCEPT_NAME"" : ""High grade (lymphoma)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""369767007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295651,
							""CONCEPT_NAME"" : ""Lymphoma stage finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""385389007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4301659,
							""CONCEPT_NAME"" : ""Lymphomatoid papulosis type C (anaplastic large-cell lymphoma-like)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""404105000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4301780,
							""CONCEPT_NAME"" : ""Leukemic infiltration of skin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""404156009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4323972,
							""CONCEPT_NAME"" : ""Plasma cell hyperplasia of bone marrow"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""70958007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4347562,
							""CONCEPT_NAME"" : ""Splenic schistosomal giant cell lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""240794006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36680584,
							""CONCEPT_NAME"" : ""Autosomal dominant aplasia and myelodysplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""778006008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37016161,
							""CONCEPT_NAME"" : ""Light chain nephropathy due to multiple myeloma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127911000119105"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37204530,
							""CONCEPT_NAME"" : ""Non-chronic lymphocytic leukemia monoclonal B-cell lymphocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""783211008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37206728,
							""CONCEPT_NAME"" : ""Monoclonal B-cell lymphocytosis chronic lymphocytic leukemia-type"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""786855003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42538056,
							""CONCEPT_NAME"" : ""Anaplastic lymphoma kinase positive anaplastic large cell lymphoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""738770003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45767656,
							""CONCEPT_NAME"" : ""Gingivitis due to leukemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""705127009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 32,
			""name"" : ""Aplastic anemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 137829,
							""CONCEPT_NAME"" : ""Aplastic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""306058006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 33,
			""name"" : ""Pure Red Cell Aplasia ICD9 CM"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 44829910,
							""CONCEPT_NAME"" : ""Constitutional red blood cell aplasia"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""284.01"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD9CM"",
							""CONCEPT_CLASS_ID"" : ""5-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 34,
			""name"" : ""Pure Red Cell Aplasia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 140065,
							""CONCEPT_NAME"" : ""Pure red cell aplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""50715003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""No Bone Marrow Hyperplasia, Infiltration including Lymphoma, Leukemia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 17,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Not pure red cell aplasia"",
			""description"" : ""https://github.com/OHDSI/Vocabulary-v5.0/issues/865"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""ConditionTypeExclude"" : false,
								""ConditionSourceConcept"" : 33
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 34,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (317510,432571,437233,3654297,3654352,4005251,4030264,4043444,4043445,4043713,4058706,4156433,4161020,4161138,4161560,4161665,4164159,4221907,4224628,4241295,4295651,4301659,4301780,4323972,4347562,36680584,37016161,37204530,37206728,42538056,45767656))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (317510,432571,437233,3654297,3654352,4005251,4030264,4043444,4043445,4043713,4058706,4156433,4161020,4161138,4161560,4161665,4164159,4221907,4224628,4241295,4295651,4301659,4301780,4323972,4347562,36680584,37016161,37204530,37206728,42538056,45767656))

) I
) C UNION ALL 
SELECT 32 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (137829))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (137829))

) I
) C UNION ALL 
SELECT 33 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (44829910))

) I
) C UNION ALL 
SELECT 34 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (140065))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (140065))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 32)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 17)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cns on (co.condition_source_concept_id = cns.concept_id and cns.codeset_id = 33)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 34)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{2 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)
}
) Results

;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 2 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
723,"Earliest event of Acute Hepatic Failure","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 21,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Disorder caused by alcohol"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 36714559,
							""CONCEPT_NAME"" : ""Disorder caused by alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""719848005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4042860,
							""CONCEPT_NAME"" : ""Finding relating to alcohol drinking behavior"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""228273003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435140,
							""CONCEPT_NAME"" : ""Toxic effect of alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67426006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269816,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082601000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37311131,
							""CONCEPT_NAME"" : ""Alcohol detoxification"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""827094004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058714,
							""CONCEPT_NAME"" : ""H/O: alcoholism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161466001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269817,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082611000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195300,
							""CONCEPT_NAME"" : ""Alcoholic gastritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2043009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 318773,
							""CONCEPT_NAME"" : ""Dilated cardiomyopathy secondary to alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""83521008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37016176,
							""CONCEPT_NAME"" : ""Cerebral degeneration due to alcoholism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""135761000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45757783,
							""CONCEPT_NAME"" : ""Gastric hemorrhage due to alcoholic gastritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40241000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44788725,
							""CONCEPT_NAME"" : ""Hazardous alcohol use"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198421000000108"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40484946,
							""CONCEPT_NAME"" : ""High alcohol level in blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442766007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661461,
							""CONCEPT_NAME"" : ""Adverse reaction to alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""836464003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44788726,
							""CONCEPT_NAME"" : ""Harmful alcohol use"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198431000000105"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Hepatic coma due to viral hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 196029,
							""CONCEPT_NAME"" : ""Hepatic coma due to viral hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40946000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Chronic Hepatic Failure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269836,
							""CONCEPT_NAME"" : ""Hepatic coma due to chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1085091000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37396401,
							""CONCEPT_NAME"" : ""Decompensated cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""716203000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4331292,
							""CONCEPT_NAME"" : ""Hepatic failure due to a procedure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22508003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45769564,
							""CONCEPT_NAME"" : ""End stage liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""708248004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Liver Cirrhosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4064161,
							""CONCEPT_NAME"" : ""Cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""19943007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196463,
							""CONCEPT_NAME"" : ""Alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420054005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269816,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082601000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Liver Fibrosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267417,
							""CONCEPT_NAME"" : ""Hepatic fibrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62484002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058695,
							""CONCEPT_NAME"" : ""Toxic liver disease with fibrosis and cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197362001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Steatosis of liver, not including non-alcoholic"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4026131,
							""CONCEPT_NAME"" : ""Non-alcoholic fatty liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197315008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4059290,
							""CONCEPT_NAME"" : ""Steatosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197321007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 11,
			""name"" : ""Non-Alcoholic Fatty Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4026131,
							""CONCEPT_NAME"" : ""Non-alcoholic fatty liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197315008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40484532,
							""CONCEPT_NAME"" : ""Nonalcoholic steatohepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442685003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 12,
			""name"" : ""Other Liver problems"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4326594,
							""CONCEPT_NAME"" : ""Abnormal liver function"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75183008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058725,
							""CONCEPT_NAME"" : ""H/O: liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161535005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4113557,
							""CONCEPT_NAME"" : ""Liver problem"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""300338006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194984,
							""CONCEPT_NAME"" : ""Disease of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235856003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 15,
			""name"" : ""Malignancies that spread to liver (breast, esophageal, stomach, pancreatic, lung, kidney, melanoma, primary malignancy of liver)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4112853,
							""CONCEPT_NAME"" : ""Malignant tumor of breast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""254837009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4162276,
							""CONCEPT_NAME"" : ""Malignant melanoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""372244006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40493428,
							""CONCEPT_NAME"" : ""Malignant neoplasm of respiratory system"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""449096009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43021272,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473067009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4101758,
							""CONCEPT_NAME"" : ""Hepatocellular carcinoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""25370001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435506,
							""CONCEPT_NAME"" : ""Benign neoplastic disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20376005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4180793,
							""CONCEPT_NAME"" : ""Malignant tumor of pancreas"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363418001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4181343,
							""CONCEPT_NAME"" : ""Malignant tumor of esophagus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196653,
							""CONCEPT_NAME"" : ""Malignant tumor of kidney"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363518003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43021272,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473067009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273375,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of pancreas"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""73761000119105"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4178769,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of esophagus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429410000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058705,
							""CONCEPT_NAME"" : ""H/O Malignant melanoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161432005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4187205,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of lung"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""415082004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4324190,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of breast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429087003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 16,
			""name"" : ""Alcoholic hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340383,
							""CONCEPT_NAME"" : ""Alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235875008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 201343,
							""CONCEPT_NAME"" : ""Acute alcoholic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9953008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269835,
							""CONCEPT_NAME"" : ""Hepatic ascites due to chronic alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1085021000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Wilsons disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4229262,
							""CONCEPT_NAME"" : ""Wilson's disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88518009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 18,
			""name"" : ""Autoimmune Hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 200762,
							""CONCEPT_NAME"" : ""Autoimmune hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""408335007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 19,
			""name"" : ""Hemochromatosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163735,
							""CONCEPT_NAME"" : ""Hemochromatosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399187006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 20,
			""name"" : ""Primary Biliary Cholangitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4135822,
							""CONCEPT_NAME"" : ""Primary biliary cholangitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31712002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 21,
			""name"" : ""Acute Hepatic Failure, adding Sequela of chronic liver disease to capture potential cases in icd-9 "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029488,
							""CONCEPT_NAME"" : ""Hepatic encephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13920009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4245975,
							""CONCEPT_NAME"" : ""Hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59927004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40481531,
							""CONCEPT_NAME"" : ""Sequela of chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444918006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 22,
			""name"" : ""Ascites"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 200528,
							""CONCEPT_NAME"" : ""Ascites"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""389026000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 23,
			""name"" : ""Toxic Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055224,
							""CONCEPT_NAME"" : ""Toxic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197354009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055223,
							""CONCEPT_NAME"" : ""Toxic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197352008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 24,
			""name"" : ""Portal Hypertension"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 192680,
							""CONCEPT_NAME"" : ""Portal hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""34742003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46270558,
							""CONCEPT_NAME"" : ""History of portal hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59701000119109"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 25,
			""name"" : ""Liver Transplant"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 42537742,
							""CONCEPT_NAME"" : ""Transplanted liver present"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""737297006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 26,
			""name"" : ""Neoplasm of liver"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4130518,
							""CONCEPT_NAME"" : ""Neoplasm of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""126851005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 27,
			""name"" : ""Cholestasis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4143915,
							""CONCEPT_NAME"" : ""Cholestasis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""33688009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058694,
							""CONCEPT_NAME"" : ""Toxic liver disease with cholestasis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197355005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 30,
			""name"" : ""Hepatic Necrosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4337543,
							""CONCEPT_NAME"" : ""Hepatic necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""87248009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 31,
			""name"" : ""Chronic Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4212540,
							""CONCEPT_NAME"" : ""Chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""328383001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Chronic Hepatic Failure "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 6,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""History of Liver Cirrhosis"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 7,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""History of Liver Transplant"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 25,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 90
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (36714559,4042860,435140,46269816,37311131,4058714,46269817,195300,318773,37016176,45757783,44788725,40484946,3661461,44788726))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (36714559,4042860,435140,46269816,37311131,4058714,46269817,195300,318773,37016176,45757783,44788725,40484946,3661461,44788726))

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (196029))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (196029))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390,46269836,37396401,4331292,45769564))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390,46269836,37396401,4331292,45769564))

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4064161,196463,46269816))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4064161,196463,46269816))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4267417,4058695))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4267417,4058695))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4059290))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4059290))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4026131))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4026131))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4026131,40484532))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4026131,40484532))

) I
) C UNION ALL 
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4326594,4058725,4113557,194984))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4326594,4058725,4113557,194984))

) I
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4112853,4162276,40493428,43021272,4101758,4180793,4181343,196653,43021272,46273375,4178769,4058705,4187205,4324190))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4112853,4162276,40493428,43021272,4101758,4180793,4181343,196653,43021272,46273375,4178769,4058705,4187205,4324190))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435506))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435506))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340383,201343,46269835))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340383,46269835))

) I
) C UNION ALL 
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4229262))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4229262))

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (200762))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (200762))

) I
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4163735))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4163735))

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4135822))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4135822))

) I
) C UNION ALL 
SELECT 21 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4029488,4245975,40481531))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4029488,4245975))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 22 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (200528))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (200528))

) I
) C UNION ALL 
SELECT 23 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4055224,4055223))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4055224,4055223))

) I
) C UNION ALL 
SELECT 24 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (192680,46270558))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (192680,46270558))

) I
) C UNION ALL 
SELECT 25 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (42537742))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (42537742))

) I
) C UNION ALL 
SELECT 26 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4130518))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4130518))

) I
) C UNION ALL 
SELECT 27 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4143915,4058694))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4143915,4058694))

) I
) C UNION ALL 
SELECT 30 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4337543))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4337543))

) I
) C UNION ALL 
SELECT 31 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4212540))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4212540))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 21)
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 25)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{3 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),3)-1)
}
) Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,90,end_date) > op_end_date then op_end_date else DATEADD(day,90,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 3 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
724,"Earliest event of Acute Hepatic Failure, NO viral hepatitis or alcoholic hepatic failure","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 33,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Disorder caused by alcohol"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 36714559,
							""CONCEPT_NAME"" : ""Disorder caused by alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""719848005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4042860,
							""CONCEPT_NAME"" : ""Finding relating to alcohol drinking behavior"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""228273003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435140,
							""CONCEPT_NAME"" : ""Toxic effect of alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67426006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269816,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082601000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37311131,
							""CONCEPT_NAME"" : ""Alcohol detoxification"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""827094004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058714,
							""CONCEPT_NAME"" : ""H/O: alcoholism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161466001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269817,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082611000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195300,
							""CONCEPT_NAME"" : ""Alcoholic gastritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2043009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 318773,
							""CONCEPT_NAME"" : ""Dilated cardiomyopathy secondary to alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""83521008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37016176,
							""CONCEPT_NAME"" : ""Cerebral degeneration due to alcoholism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""135761000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45757783,
							""CONCEPT_NAME"" : ""Gastric hemorrhage due to alcoholic gastritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40241000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44788725,
							""CONCEPT_NAME"" : ""Hazardous alcohol use"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198421000000108"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40484946,
							""CONCEPT_NAME"" : ""High alcohol level in blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442766007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661461,
							""CONCEPT_NAME"" : ""Adverse reaction to alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""836464003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44788726,
							""CONCEPT_NAME"" : ""Harmful alcohol use"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198431000000105"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Viral hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4291005,
							""CONCEPT_NAME"" : ""Viral hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""3738000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196029,
							""CONCEPT_NAME"" : ""Hepatic coma due to viral hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40946000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4093637,
							""CONCEPT_NAME"" : ""Sequelae of viral hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""187260009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Chronic Hepatic Failure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269836,
							""CONCEPT_NAME"" : ""Hepatic coma due to chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1085091000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37396401,
							""CONCEPT_NAME"" : ""Decompensated cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""716203000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4331292,
							""CONCEPT_NAME"" : ""Hepatic failure due to a procedure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22508003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45769564,
							""CONCEPT_NAME"" : ""End stage liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""708248004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Liver Cirrhosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4064161,
							""CONCEPT_NAME"" : ""Cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""19943007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196463,
							""CONCEPT_NAME"" : ""Alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420054005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269816,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082601000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Liver Fibrosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267417,
							""CONCEPT_NAME"" : ""Hepatic fibrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62484002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058695,
							""CONCEPT_NAME"" : ""Toxic liver disease with fibrosis and cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197362001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Steatosis of liver, not including non-alcoholic"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4026131,
							""CONCEPT_NAME"" : ""Non-alcoholic fatty liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197315008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4059290,
							""CONCEPT_NAME"" : ""Steatosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197321007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 11,
			""name"" : ""Non-Alcoholic Fatty Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4026131,
							""CONCEPT_NAME"" : ""Non-alcoholic fatty liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197315008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40484532,
							""CONCEPT_NAME"" : ""Nonalcoholic steatohepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442685003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 12,
			""name"" : ""Other Liver problems"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4326594,
							""CONCEPT_NAME"" : ""Abnormal liver function"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75183008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058725,
							""CONCEPT_NAME"" : ""H/O: liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161535005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4113557,
							""CONCEPT_NAME"" : ""Liver problem"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""300338006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194984,
							""CONCEPT_NAME"" : ""Disease of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235856003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 15,
			""name"" : ""Malignancies that spread to liver (breast, esophageal, stomach, pancreatic, lung, kidney, melanoma, primary malignancy of liver)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4112853,
							""CONCEPT_NAME"" : ""Malignant tumor of breast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""254837009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4162276,
							""CONCEPT_NAME"" : ""Malignant melanoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""372244006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40493428,
							""CONCEPT_NAME"" : ""Malignant neoplasm of respiratory system"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""449096009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43021272,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473067009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4101758,
							""CONCEPT_NAME"" : ""Hepatocellular carcinoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""25370001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435506,
							""CONCEPT_NAME"" : ""Benign neoplastic disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20376005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4180793,
							""CONCEPT_NAME"" : ""Malignant tumor of pancreas"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363418001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4181343,
							""CONCEPT_NAME"" : ""Malignant tumor of esophagus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196653,
							""CONCEPT_NAME"" : ""Malignant tumor of kidney"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363518003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43021272,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473067009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273375,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of pancreas"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""73761000119105"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4178769,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of esophagus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429410000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058705,
							""CONCEPT_NAME"" : ""H/O Malignant melanoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161432005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4187205,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of lung"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""415082004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4324190,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of breast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429087003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 16,
			""name"" : ""Alcoholic hepatitis or alcoholic liver failure "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340383,
							""CONCEPT_NAME"" : ""Alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235875008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 201343,
							""CONCEPT_NAME"" : ""Acute alcoholic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9953008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269835,
							""CONCEPT_NAME"" : ""Hepatic ascites due to chronic alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1085021000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269818,
							""CONCEPT_NAME"" : ""Hepatic coma due to alcoholic liver failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082621000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340386,
							""CONCEPT_NAME"" : ""Alcoholic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235881000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Wilsons disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4229262,
							""CONCEPT_NAME"" : ""Wilson's disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88518009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 18,
			""name"" : ""Autoimmune Hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 200762,
							""CONCEPT_NAME"" : ""Autoimmune hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""408335007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 19,
			""name"" : ""Hemochromatosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163735,
							""CONCEPT_NAME"" : ""Hemochromatosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399187006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 20,
			""name"" : ""Primary Biliary Cholangitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4135822,
							""CONCEPT_NAME"" : ""Primary biliary cholangitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31712002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 21,
			""name"" : ""\n\nHepatic failure "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4245975,
							""CONCEPT_NAME"" : ""Hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59927004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 22,
			""name"" : ""Ascites"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 200528,
							""CONCEPT_NAME"" : ""Ascites"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""389026000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 23,
			""name"" : ""Toxic Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055224,
							""CONCEPT_NAME"" : ""Toxic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197354009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055223,
							""CONCEPT_NAME"" : ""Toxic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197352008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 24,
			""name"" : ""Portal Hypertension"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 192680,
							""CONCEPT_NAME"" : ""Portal hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""34742003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46270558,
							""CONCEPT_NAME"" : ""History of portal hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59701000119109"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 25,
			""name"" : ""Liver Transplant"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 42537742,
							""CONCEPT_NAME"" : ""Transplanted liver present"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""737297006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 26,
			""name"" : ""hepatorenal"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 196455,
							""CONCEPT_NAME"" : ""Hepatorenal syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""51292008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 27,
			""name"" : ""Cholestasis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4143915,
							""CONCEPT_NAME"" : ""Cholestasis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""33688009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058694,
							""CONCEPT_NAME"" : ""Toxic liver disease with cholestasis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197355005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 30,
			""name"" : ""Hepatic Necrosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4337543,
							""CONCEPT_NAME"" : ""Hepatic necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""87248009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 31,
			""name"" : ""Chronic Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4212540,
							""CONCEPT_NAME"" : ""Chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""328383001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 32,
			""name"" : ""Acute Hepatic Failure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029488,
							""CONCEPT_NAME"" : ""Hepatic encephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13920009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4245975,
							""CONCEPT_NAME"" : ""Hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59927004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 33,
			""name"" : ""Acute Hepatic Failure, adding Sequela of chronic liver disease to capture potential cases in icd-9"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029488,
							""CONCEPT_NAME"" : ""Hepatic encephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13920009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4245975,
							""CONCEPT_NAME"" : ""Hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59927004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40481531,
							""CONCEPT_NAME"" : ""Sequela of chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444918006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Chronic Hepatic Failure "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 6,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Liver Cirrhosis"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 7,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""History of Liver Transplant"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 25,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""coccurring viral hepatitis around the same time "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 5,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 3,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 3,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""cooccurring Alcoholic hepatitis or alcoholic liver failure "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 16,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 3,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 3,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""cooccurring hepatorenal disorder indicating a probable chronic liver disease  "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionEra"" : {
								""CodesetId"" : 26
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 90
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (36714559,4042860,435140,46269816,37311131,4058714,46269817,195300,318773,37016176,45757783,44788725,40484946,3661461,44788726))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (36714559,4042860,435140,46269816,37311131,4058714,46269817,195300,318773,37016176,45757783,44788725,40484946,3661461,44788726))

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4291005,196029,4093637))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4291005,196029,4093637))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390,46269836,37396401,4331292,45769564))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390,46269836,37396401,4331292,45769564))

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4064161,196463,46269816))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4064161,196463,46269816))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4267417,4058695))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4267417,4058695))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4059290))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4059290))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4026131))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4026131))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4026131,40484532))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4026131,40484532))

) I
) C UNION ALL 
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4326594,4058725,4113557,194984))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4326594,4058725,4113557,194984))

) I
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4112853,4162276,40493428,43021272,4101758,4180793,4181343,196653,43021272,46273375,4178769,4058705,4187205,4324190))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4112853,4162276,40493428,43021272,4101758,4180793,4181343,196653,43021272,46273375,4178769,4058705,4187205,4324190))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435506))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435506))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340383,201343,46269835,46269818,4340386))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340383,46269835,46269818,4340386))

) I
) C UNION ALL 
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4229262))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4229262))

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (200762))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (200762))

) I
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4163735))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4163735))

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4135822))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4135822))

) I
) C UNION ALL 
SELECT 21 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4245975))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4245975))

) I
) C UNION ALL 
SELECT 22 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (200528))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (200528))

) I
) C UNION ALL 
SELECT 23 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4055224,4055223))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4055224,4055223))

) I
) C UNION ALL 
SELECT 24 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (192680,46270558))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (192680,46270558))

) I
) C UNION ALL 
SELECT 25 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (42537742))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (42537742))

) I
) C UNION ALL 
SELECT 26 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (196455))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (196455))

) I
) C UNION ALL 
SELECT 27 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4143915,4058694))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4143915,4058694))

) I
) C UNION ALL 
SELECT 30 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4337543))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4337543))

) I
) C UNION ALL 
SELECT 31 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4212540))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4212540))

) I
) C UNION ALL 
SELECT 32 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4029488,4245975))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4029488,4245975))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 33 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4029488,4245975,40481531))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4029488,4245975))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 25)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-3,P.START_DATE) AND A.START_DATE <= DATEADD(day,3,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-3,P.START_DATE) AND A.START_DATE <= DATEADD(day,3,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Era Criteria
select C.person_id, C.condition_era_id as event_id, C.start_date, C.end_date,
  CAST(NULL as bigint) as visit_occurrence_id, C.start_date as sort_date
from 
(
  select ce.person_id,ce.condition_era_id,ce.condition_concept_id,ce.condition_occurrence_count,ce.condition_era_start_date as start_date, ce.condition_era_end_date as end_date 
  FROM @cdm_database_schema.CONDITION_ERA ce
where ce.condition_concept_id in (SELECT concept_id from  #Codesets where codeset_id = 26)
) C


-- End Condition Era Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{6 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),6)-1)
}
) Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,90,end_date) > op_end_date then op_end_date else DATEADD(day,90,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 6 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
725,"All events of Acute Kidney Injury (AKI)","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 5,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 7,
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""End-stage renal disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 193782,
							""CONCEPT_NAME"" : ""End-stage renal disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""46177005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443611,
							""CONCEPT_NAME"" : ""Chronic kidney disease stage 5"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433146000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Dialysis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4146536,
							""CONCEPT_NAME"" : ""Renal dialysis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""265764009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4032243,
							""CONCEPT_NAME"" : ""Dialysis procedure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""108241001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617342,
							""CONCEPT_NAME"" : ""Unscheduled or emergency dialysis treatment for an esrd patient in a hospital outpatient department that is not certified as an esrd facility"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""G0257"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Acute kidney injury"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 197320,
							""CONCEPT_NAME"" : ""Acute renal failure syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""14669001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196455,
							""CONCEPT_NAME"" : ""Hepatorenal syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""51292008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37116834,
							""CONCEPT_NAME"" : ""Postpartum acute renal failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""733839001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 444044,
							""CONCEPT_NAME"" : ""Acute tubular necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""35455006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Dialysis procedure at a Medicare certified ESRD facility for acute kidney injury without ESRD"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 1314323,
							""CONCEPT_NAME"" : ""Dialysis procedure at a medicare certified esrd facility for acute kidney injury without esrd"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""G0491"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Erythropoietin like drugs\n"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 43009086,
							""CONCEPT_NAME"" : ""erythropoietin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4700512"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1304643,
							""CONCEPT_NAME"" : ""darbepoetin alfa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""283838"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1301125,
							""CONCEPT_NAME"" : ""epoetin alfa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""105694"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Kidney transplant conditions"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 42539502,
							""CONCEPT_NAME"" : ""Transplanted kidney present"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""737295003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4324887,
							""CONCEPT_NAME"" : ""Disorder related to renal transplantation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429451003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Kidney transplant procedure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4324887,
							""CONCEPT_NAME"" : ""Disorder related to renal transplantation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429451003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4180454,
							""CONCEPT_NAME"" : ""Examination of live donor after kidney transplant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429496005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2833286,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Urinary System @ Transplantation @ Kidney, Left"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0TY1"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2877118,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Urinary System @ Transplantation @ Kidney, Right"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0TY0"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163566,
							""CONCEPT_NAME"" : ""Renal replacement"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""398887003"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4146256,
							""CONCEPT_NAME"" : ""Transplant nephrectomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""265550007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4082531,
							""CONCEPT_NAME"" : ""US scan of transplant kidney"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""241484009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Washout period with no AKI codes"",
			""description"" : ""To rule out diagnosis codes that are follow ups (for example: check for status of recovery or progression, check sequelae, etc) from the actual event of AKI"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 5,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 7,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No ESKD at baseline"",
			""description"" : ""To exclude cases with a diagnosis of End-Stage Kidney Disease in the 365 days before AKI occurrence. Period from -365 to -7 to account for ESKD due to the index episode of AKI"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 2,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No chronic dialysis at baseline (-365 to 8 days) "",
			""description"" : ""To exclude all patients receiving chronic dialysis defined as more than 3 recorded events of dialysis in the 1 year- 8 days before index date, or one erythropoietin dose and dialysis in same year"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 3,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 8,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 1,
							""Count"" : 3,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : [
					{
						""Type"" : ""ANY"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ProcedureOccurrence"" : {
										""CodesetId"" : 3,
										""ProcedureTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 365,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 8,
										""Coeff"" : -1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : true,
								""Occurrence"" : {
									""Type"" : 0,
									""Count"" : 0,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 8,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 365,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 8,
										""Coeff"" : -1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : true,
								""Occurrence"" : {
									""Type"" : 0,
									""Count"" : 0,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					}
				]
			}
		},
		{
			""name"" : ""No Kidney Transplant any time prior "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 9,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 10,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (193782,443611))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (193782,443611))

) I
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4146536,4032243,2617342))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4146536,2617342))

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (197320,444044))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (197320,444044))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (196455,37116834))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (196455,37116834))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (1314323))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (1314323))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (43009086,1304643,1301125))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (43009086,1304643,1301125))

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (42539502,4324887))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (42539502,4324887))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4324887,4180454,2833286,2877118,4163566,4146256,4082531))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4324887,4180454,2833286,2877118,4163566,4146256,4082531))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-8,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) <= 3
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-8,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-8,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{4 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),4)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,end_date) > op_end_date then op_end_date else DATEADD(day,7,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 4 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
726,"All events of Anaphylaxis, Mini-Sentinel","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ANY"",
						""CriteriaList"" : [],
						""DemographicCriteriaList"" : [],
						""Groups"" : [
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""Observation"" : {
												""CodesetId"" : 11,
												""ObservationTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 11,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""VisitOccurrence"" : {
												""CodesetId"" : 9,
												""VisitTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""EndWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""End"" : {
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : true
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							},
							{
								""Type"" : ""ALL"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""VisitOccurrence"" : {
												""CodesetId"" : 10,
												""VisitTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : [
									{
										""Type"" : ""ANY"",
										""CriteriaList"" : [
											{
												""Criteria"" : {
													""ConditionOccurrence"" : {
														""CodesetId"" : 12,
														""ConditionTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ConditionOccurrence"" : {
														""CodesetId"" : 13,
														""ConditionTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ConditionOccurrence"" : {
														""CodesetId"" : 14,
														""ConditionTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""DrugExposure"" : {
														""CodesetId"" : 15,
														""DrugTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ProcedureOccurrence"" : {
														""CodesetId"" : 15,
														""ProcedureTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""DrugExposure"" : {
														""CodesetId"" : 16,
														""DrugTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ProcedureOccurrence"" : {
														""CodesetId"" : 16,
														""ProcedureTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ProcedureOccurrence"" : {
														""CodesetId"" : 18,
														""ProcedureTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											}
										],
										""DemographicCriteriaList"" : [],
										""Groups"" : []
									}
								]
							}
						]
					},
					""CodesetId"" : 2,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ANY"",
						""CriteriaList"" : [],
						""DemographicCriteriaList"" : [],
						""Groups"" : [
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""Observation"" : {
												""CodesetId"" : 11,
												""ObservationTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 11,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""VisitOccurrence"" : {
												""CodesetId"" : 9,
												""VisitTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""EndWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""End"" : {
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : true
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							},
							{
								""Type"" : ""ALL"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""VisitOccurrence"" : {
												""CodesetId"" : 10,
												""VisitTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : [
									{
										""Type"" : ""ANY"",
										""CriteriaList"" : [
											{
												""Criteria"" : {
													""ConditionOccurrence"" : {
														""CodesetId"" : 12,
														""ConditionTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ConditionOccurrence"" : {
														""CodesetId"" : 13,
														""ConditionTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ConditionOccurrence"" : {
														""CodesetId"" : 14,
														""ConditionTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""DrugExposure"" : {
														""CodesetId"" : 15,
														""DrugTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ProcedureOccurrence"" : {
														""CodesetId"" : 15,
														""ProcedureTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""DrugExposure"" : {
														""CodesetId"" : 16,
														""DrugTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ProcedureOccurrence"" : {
														""CodesetId"" : 16,
														""ProcedureTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											},
											{
												""Criteria"" : {
													""ProcedureOccurrence"" : {
														""CodesetId"" : 18,
														""ProcedureTypeExclude"" : false
													}
												},
												""StartWindow"" : {
													""Start"" : {
														""Days"" : 0,
														""Coeff"" : -1
													},
													""End"" : {
														""Days"" : 0,
														""Coeff"" : 1
													},
													""UseIndexEnd"" : false,
													""UseEventEnd"" : false
												},
												""RestrictVisit"" : false,
												""IgnoreObservationPeriod"" : false,
												""Occurrence"" : {
													""Type"" : 2,
													""Count"" : 1,
													""IsDistinct"" : false
												}
											}
										],
										""DemographicCriteriaList"" : [],
										""Groups"" : []
									}
								]
							}
						]
					},
					""CodesetId"" : 2,
					""ObservationTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [],
						""DemographicCriteriaList"" : [],
						""Groups"" : [
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""VisitOccurrence"" : {
												""CodesetId"" : 9,
												""VisitTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""EndWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""End"" : {
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : true
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 11,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""Observation"" : {
												""CodesetId"" : 11,
												""ObservationTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							},
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 12,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 13,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 16,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""DrugExposure"" : {
												""CodesetId"" : 16,
												""DrugTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							},
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 14,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 15,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""DrugExposure"" : {
												""CodesetId"" : 15,
												""DrugTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 18,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""Observation"" : {
												""CodesetId"" : 18,
												""ObservationTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							}
						]
					},
					""CodesetId"" : 19,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [],
						""DemographicCriteriaList"" : [],
						""Groups"" : [
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""VisitOccurrence"" : {
												""CodesetId"" : 9,
												""VisitTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""EndWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""End"" : {
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : true
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 11,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""Observation"" : {
												""CodesetId"" : 11,
												""ObservationTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							},
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 12,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 13,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 16,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""DrugExposure"" : {
												""CodesetId"" : 16,
												""DrugTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							},
							{
								""Type"" : ""ANY"",
								""CriteriaList"" : [
									{
										""Criteria"" : {
											""ConditionOccurrence"" : {
												""CodesetId"" : 14,
												""ConditionTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 15,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""DrugExposure"" : {
												""CodesetId"" : 15,
												""DrugTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""ProcedureOccurrence"" : {
												""CodesetId"" : 18,
												""ProcedureTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									},
									{
										""Criteria"" : {
											""Observation"" : {
												""CodesetId"" : 18,
												""ObservationTypeExclude"" : false
											}
										},
										""StartWindow"" : {
											""Start"" : {
												""Days"" : 0,
												""Coeff"" : -1
											},
											""End"" : {
												""Days"" : 0,
												""Coeff"" : 1
											},
											""UseIndexEnd"" : false,
											""UseEventEnd"" : false
										},
										""RestrictVisit"" : false,
										""IgnoreObservationPeriod"" : false,
										""Occurrence"" : {
											""Type"" : 2,
											""Count"" : 1,
											""IsDistinct"" : false
										}
									}
								],
								""DemographicCriteriaList"" : [],
								""Groups"" : []
							}
						]
					},
					""CodesetId"" : 19,
					""ObservationTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Anaphylaxis (criterion 1 or 2)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 434219,
							""CONCEPT_NAME"" : ""Food anaphylaxis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""91941002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4083866,
							""CONCEPT_NAME"" : ""Anaphylaxis caused by venom"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""241930003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4221182,
							""CONCEPT_NAME"" : ""Anaphylaxis due to substance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""417516000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661863,
							""CONCEPT_NAME"" : ""Anaphylaxis caused by insect bite and/or insect sting"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871926004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42538691,
							""CONCEPT_NAME"" : ""Anaphylaxis caused by low temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""762455001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40479646,
							""CONCEPT_NAME"" : ""Anaphylaxis due to latex"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""441593005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4083995,
							""CONCEPT_NAME"" : ""Exercise anaphylaxis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""241952007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441202,
							""CONCEPT_NAME"" : ""Anaphylaxis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""39579001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 762511,
							""CONCEPT_NAME"" : ""Anaphylaxis due to diphtheria and tetanus vaccine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""428281000124107"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 762514,
							""CONCEPT_NAME"" : ""Anaphylaxis due to Hepatitis B vaccine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""428321000124101"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 762509,
							""CONCEPT_NAME"" : ""Anaphylaxis due to human papillomavirus vaccine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""428241000124101"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 762513,
							""CONCEPT_NAME"" : ""Anaphylaxis due to meningococcal vaccine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""428301000124106"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 762515,
							""CONCEPT_NAME"" : ""Anaphylaxis due to rotavirus vaccine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""428331000124103"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Food anaphylaxis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 434219,
							""CONCEPT_NAME"" : ""Food anaphylaxis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""91941002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Anaphylaxis due to substance"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4221182,
							""CONCEPT_NAME"" : ""Anaphylaxis due to substance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""417516000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4084168,
							""CONCEPT_NAME"" : ""Drug-induced anaphylaxis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""241937000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434219,
							""CONCEPT_NAME"" : ""Food anaphylaxis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""91941002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442038,
							""CONCEPT_NAME"" : ""Anaphylactic shock due to serum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""213320003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Anaphylaxis caused by insect bite and/or insect sting"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661863,
							""CONCEPT_NAME"" : ""Anaphylaxis caused by insect bite and/or insect sting"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871926004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Insect bite or sting"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4173025,
							""CONCEPT_NAME"" : ""Insect bite - wound"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276433004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661864,
							""CONCEPT_NAME"" : ""Allergic reaction caused by insect bite and/or insect sting"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871927008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437478,
							""CONCEPT_NAME"" : ""Bite of nonvenomous arthropod"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""217706007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4114305,
							""CONCEPT_NAME"" : ""Insect sting"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""299971005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661861,
							""CONCEPT_NAME"" : ""Allergic reaction to insect bite"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871920005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36674264,
							""CONCEPT_NAME"" : ""Bite of insect"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""771191003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Event""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4266230,
							""CONCEPT_NAME"" : ""Poisoning by venomous snake"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61288004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4296183,
							""CONCEPT_NAME"" : ""Insect bite reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402150002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4032280,
							""CONCEPT_NAME"" : ""Snake bite"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""238456006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442149,
							""CONCEPT_NAME"" : ""Poisoning by bee sting"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""7998009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Toxic effect of venom"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 440905,
							""CONCEPT_NAME"" : ""Toxic effect of venom"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""44400004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Accidental poisoning"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 436581,
							""CONCEPT_NAME"" : ""Accidental poisoning"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""72431002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Inpatient or ER Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Outpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 9202,
							""CONCEPT_NAME"" : ""Outpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 11,
			""name"" : ""Inpatient Care Concepts"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4289459,
							""CONCEPT_NAME"" : ""Initial hospital visit by physician"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""69399002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888082,
							""CONCEPT_NAME"" : ""Subsequent Hospital Care Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013668"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4203130,
							""CONCEPT_NAME"" : ""Discharge from hospital"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""308283009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4307376,
							""CONCEPT_NAME"" : ""Final inpatient visit with instructions at discharge"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""83362003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4214577,
							""CONCEPT_NAME"" : ""Inpatient care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""394656005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2721702,
							""CONCEPT_NAME"" : ""Hospice general inpatient care; per diem"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""T2045"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4027135,
							""CONCEPT_NAME"" : ""Subsequent hospital visit by physician"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""12843005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888081,
							""CONCEPT_NAME"" : ""Hospital Observation Care Discharge Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013649"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888494,
							""CONCEPT_NAME"" : ""Inpatient Neonatal and Pediatric Critical Care Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1019134"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888205,
							""CONCEPT_NAME"" : ""Prolonged service in the inpatient or observation setting, requiring unit/floor time beyond the usual service"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013800"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45889184,
							""CONCEPT_NAME"" : ""New or Established Patient Initial Hospital Inpatient Care Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013661"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 8715,
							""CONCEPT_NAME"" : ""Hospital admission"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""32485007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888973,
							""CONCEPT_NAME"" : ""New or Established Patient Initial Inpatient Consultation Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013700"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4202667,
							""CONCEPT_NAME"" : ""Medical consultation on inpatient"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53923005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 12,
			""name"" : ""Bronchospasm"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 256717,
							""CONCEPT_NAME"" : ""Bronchospasm"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4386001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 13,
			""name"" : ""Stridor"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 253321,
							""CONCEPT_NAME"" : ""Stridor"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""70407001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 14,
			""name"" : ""Hypotension"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 317002,
							""CONCEPT_NAME"" : ""Low blood pressure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""45007003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 313232,
							""CONCEPT_NAME"" : ""Hemodialysis-associated hypotension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""408667000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 316447,
							""CONCEPT_NAME"" : ""Chronic hypotension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""77545000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 314432,
							""CONCEPT_NAME"" : ""Maternal hypotension syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88887003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 15,
			""name"" : ""Epinephrine"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 1343916,
							""CONCEPT_NAME"" : ""epinephrine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""3992"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 16,
			""name"" : ""Diphenhydramine injection"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 36224040,
							""CONCEPT_NAME"" : ""diphenhydramine Injectable Product"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1158446"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Dose Group""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Allergy or substance adverse event (Criterion 3)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 43021227,
							""CONCEPT_NAME"" : ""Allergic condition"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473011001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4019380,
							""CONCEPT_NAME"" : ""Atopy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""115665000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4188970,
							""CONCEPT_NAME"" : ""Chronic disease of immune function"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""413834006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441207,
							""CONCEPT_NAME"" : ""Adverse reaction to drug"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62014003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 18,
			""name"" : ""Cardio Pulmonary Resuscitation CPR"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4205502,
							""CONCEPT_NAME"" : ""Resuscitation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""439569004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4230167,
							""CONCEPT_NAME"" : ""Artificial respiration"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40617009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4013354,
							""CONCEPT_NAME"" : ""Insertion of endotracheal tube"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""112798008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40487536,
							""CONCEPT_NAME"" : ""Intubation of respiratory tract"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""447996002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4202832,
							""CONCEPT_NAME"" : ""Intubation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52765003"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 19,
			""name"" : ""Anaphylaxis nonspecific codes"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 43530807,
							""CONCEPT_NAME"" : ""Allergic disposition"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""609328004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439228,
							""CONCEPT_NAME"" : ""Sulfonamide adverse reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""293032001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443368,
							""CONCEPT_NAME"" : ""Carbonic anhydrase inhibitor adverse reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""293492009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440281,
							""CONCEPT_NAME"" : ""Bromine complexes adverse reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""292639002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441488,
							""CONCEPT_NAME"" : ""Adverse reaction to substance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""282100009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440015,
							""CONCEPT_NAME"" : ""Iron adverse reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""293354007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661841,
							""CONCEPT_NAME"" : ""Adverse reaction to hydantoin and hydantoin derivative"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871702008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661819,
							""CONCEPT_NAME"" : ""Adverse reaction to adrenergic receptor antagonist"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871566007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441207,
							""CONCEPT_NAME"" : ""Adverse reaction to drug"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62014003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4303952,
							""CONCEPT_NAME"" : ""Allergic reaction to substance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""418634005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 433389,
							""CONCEPT_NAME"" : ""Tetracyclines group adverse reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""293047005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40490404,
							""CONCEPT_NAME"" : ""Adverse reaction to biological substance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""446994009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443351,
							""CONCEPT_NAME"" : ""Vaccine adverse reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""293104008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 433658,
							""CONCEPT_NAME"" : ""Penicillin adverse reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""292954005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 433399,
							""CONCEPT_NAME"" : ""Opioid antagonist adverse reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""292736001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435730,
							""CONCEPT_NAME"" : ""Adverse reaction to pharmaceutical excipient"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""438784000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661853,
							""CONCEPT_NAME"" : ""Adverse reaction to arsenic and arsenic compound"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871783000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Washout period 30 days - applied only to outpatient visit"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ANY"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 2,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										},
										{
											""Criteria"" : {
												""Observation"" : {
													""CodesetId"" : 2,
													""ObservationTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 10,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Food anaphylaxis on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 3,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No anaphylaxis due to substances other than food or drug on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 4,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No anaphylaxis due insect bite on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 5,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No insect bite or sting"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 6,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 6,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Toxic effect of venom"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 7,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Accidental poisoning"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 8,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (441202,762511,762514,762509,762513,762515))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (441202,762511,762514,762509,762513,762515))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (434219,4083866,4221182,3661863,42538691,40479646,4083995))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (434219,4083866,3661863,42538691,40479646,4083995))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (434219))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (434219))

) I
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4221182))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4221182))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4084168,434219,442038))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4084168,434219,442038))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3661863))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3661863))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4173025,3661864,437478,4114305,3661861,36674264,4266230,4296183,4032280,442149))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4173025,3661864,437478,4114305,3661861,36674264,4266230,4296183,4032280,442149))

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (440905))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (440905))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (436581))

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (9201,262,9203))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (9201,262,9203))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (9202))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (9202))

) I
) C UNION ALL 
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4289459,45888082,4203130,4307376,4214577,2721702,4027135,45888081,45888494,45888205,45889184,8715,45888973,4202667))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4289459,45888082,4203130,4307376,4214577,2721702,4027135,45888081,45888494,45888205,45889184,8715,45888973,4202667))

) I
) C UNION ALL 
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (256717))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (256717))

) I
) C UNION ALL 
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (253321))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (253321))

) I
) C UNION ALL 
SELECT 14 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (317002))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (317002))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (313232,316447,314432))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (313232,316447,314432))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (1343916))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (1343916))

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (36224040))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (36224040))

) I
) C UNION ALL 
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (43021227,4019380,441207))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (43021227,4019380,441207))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4188970))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4188970))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4205502,4230167,4013354,40487536,4202832))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4205502,4230167,4013354,40487536,4202832))

) I
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (43530807,439228,443368,440281,441488,440015,3661841,3661819,441207,4303952,433389,40490404,443351,433658,433399,435730,3661853))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (439228,443368,440281,440015,3661841,3661819,441207,433389,40490404,443351,433658,433399,435730,3661853))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 13)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 3 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 4 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 5 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 6 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 7 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 13)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 3 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 4 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 5 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 6 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 7 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 13)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 3 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 2 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 3 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 4 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 11)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 12)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 13)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 3 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 2 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 14)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 3 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 4 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 4)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{7 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),7)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > op_end_date then op_end_date else DATEADD(day,1,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 7 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence UNION ALL SELECT CAST(6 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
727,"Angioedema","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Angioedema or urticaria"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4296370,
							""CONCEPT_NAME"" : ""Cutis laxa following urticaria-angioedema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""403398009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432791,
							""CONCEPT_NAME"" : ""Angioedema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41291007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4297361,
							""CONCEPT_NAME"" : ""Angioedema and/or urticaria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""404177007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4270861,
							""CONCEPT_NAME"" : ""Allergic angioedema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402387002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Cardia edema"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4231570,
							""CONCEPT_NAME"" : ""Cardiac edema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""89555002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235646,
							""CONCEPT_NAME"" : ""Acute cardiac pulmonary edema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""360371003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Cellulits"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 435613,
							""CONCEPT_NAME"" : ""Cellulitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128045006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4299470,
							""CONCEPT_NAME"" : ""Cellulitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""385627004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 133566,
							""CONCEPT_NAME"" : ""Necrotizing fasciitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52486002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Erysipelas"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 138346,
							""CONCEPT_NAME"" : ""Erysipelas"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""44653001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4104689,
							""CONCEPT_NAME"" : ""Infective otitis externa due to erysipelas"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""194202008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Dermatitis or Eczema"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 133835,
							""CONCEPT_NAME"" : ""Eczema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43116000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766714,
							""CONCEPT_NAME"" : ""Inflammatory dermatosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703938007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Lymphedema"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 435839,
							""CONCEPT_NAME"" : ""Lymphedema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234097001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Insect bite or sting"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4173025,
							""CONCEPT_NAME"" : ""Insect bite - wound"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276433004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661864,
							""CONCEPT_NAME"" : ""Allergic reaction caused by insect bite and/or insect sting"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871927008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437478,
							""CONCEPT_NAME"" : ""Bite of nonvenomous arthropod"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""217706007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4114305,
							""CONCEPT_NAME"" : ""Insect sting"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""299971005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661861,
							""CONCEPT_NAME"" : ""Allergic reaction to insect bite"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""871920005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36674264,
							""CONCEPT_NAME"" : ""Bite of insect"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""771191003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Event""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4266230,
							""CONCEPT_NAME"" : ""Poisoning by venomous snake"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61288004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4296183,
							""CONCEPT_NAME"" : ""Insect bite reaction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""402150002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4032280,
							""CONCEPT_NAME"" : ""Snake bite"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""238456006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Angioedema"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4296370,
							""CONCEPT_NAME"" : ""Cutis laxa following urticaria-angioedema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""403398009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432791,
							""CONCEPT_NAME"" : ""Angioedema"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41291007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Angioedema within 3 days  "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 10,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 3,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Washout period 180 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 10,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 180,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Cardiac Edema"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 4,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Cellulitis"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 5,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 5,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Erysipelas"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 6,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Dermatitis or Eczema"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 7,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Lymphedema "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 8,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No insect bites"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 9,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 9,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4296370,432791,4297361,4270861))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4296370,432791,4297361,4270861))

) I
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4231570,4235646))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4231570,4235646))

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435613,4299470,133566))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435613,4299470,133566))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (138346,4104689))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (138346,4104689))

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (133835,45766714))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (133835,45766714))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435839))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435839))

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4173025,3661864,437478,4114305,3661861,36674264,4266230,4296183,4032280))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4173025,3661864,437478,4114305,3661861,36674264,4266230,4296183,4032280))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4296370,432791))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4296370,432791))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,3,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 4)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 7 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_7
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_7) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;

TRUNCATE TABLE #Inclusion_7;
DROP TABLE #Inclusion_7;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{8 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),8)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > op_end_date then op_end_date else DATEADD(day,1,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 8 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence UNION ALL SELECT CAST(6 as int) as rule_sequence UNION ALL SELECT CAST(7 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
728,"Autoimmune hemolytic anemia","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Autoimmune hemolytic anemia\named Concept Set"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 441269,
							""CONCEPT_NAME"" : ""Autoimmune hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""413603009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436956,
							""CONCEPT_NAME"" : ""Evans syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75331009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (441269))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (441269))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (436956))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (436956))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{0 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),0)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,start_date) > op_end_date then op_end_date else DATEADD(day,1,start_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 90, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,90,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 0 != 0}?{

CREATE TABLE #inclusion_rules (rule_sequence int);

-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
729,"All events of Autoimmune hepatitis, with a washout period of 365 days","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Autoimmune hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 200762,
							""CONCEPT_NAME"" : ""Autoimmune hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""408335007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Certain Chronic Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 200762,
							""CONCEPT_NAME"" : ""Autoimmune hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""408335007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4012113,
							""CONCEPT_NAME"" : ""Chronic viral hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10295004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 201613,
							""CONCEPT_NAME"" : ""Chronic nonalcoholic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""79720007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 200763,
							""CONCEPT_NAME"" : ""Chronic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76783007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196463,
							""CONCEPT_NAME"" : ""Alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420054005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4143008,
							""CONCEPT_NAME"" : ""Drug-induced cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""425413006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Systemic Lupus Erythematosus"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 257628,
							""CONCEPT_NAME"" : ""Systemic lupus erythematosus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""55464009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""has no autoimmune hepatitis events in prior 'clean window' - 365 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 0,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""has no certain chronic liver disease events in prior 0 - 365 days"",
			""description"" : ""Exclusion of diseases that have a similar presentation, particularly viral hepatitis, drug-induced liver injury, and alcoholic liver disease"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""has no Systemic Lupus Erythematosus events in prior 0 - 365 days"",
			""description"" : ""Exclusion of diseases that have a similar presentation"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 2,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (200762))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (200762))

) I
) C UNION ALL 
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4012113,201613,200763,196463,4143008))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4012113,201613,200763,196463,4143008))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (200762))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (200762))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (257628))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (257628))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{3 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),3)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > op_end_date then op_end_date else DATEADD(day,1,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 3 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
730,"All events Acute pancreatitis, indexed on visit with NO chronic or hereditary pancreatitis","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""VisitOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""AT_LEAST"",
						""Count"" : 1,
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 15,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""UseIndexEnd"" : true,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 16,
					""VisitTypeExclude"" : false
				}
			},
			{
				""VisitOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ProcedureOccurrence"" : {
										""CodesetId"" : 21,
										""ProcedureTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""UseIndexEnd"" : true,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 15,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 20,
					""VisitTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 15,
			""name"" : ""Pancreatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4192640,
							""CONCEPT_NAME"" : ""Pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75694006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 16,
			""name"" : ""Inpatient or Inpatient/ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Acute Pancreatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 199074,
							""CONCEPT_NAME"" : ""Acute pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197456007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4341076,
							""CONCEPT_NAME"" : ""Pancreatic and peripancreatic necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235959006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4192640,
							""CONCEPT_NAME"" : ""Pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75694006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4243504,
							""CONCEPT_NAME"" : ""Subacute pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59154002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195596,
							""CONCEPT_NAME"" : ""Chronic pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235494005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 18,
			""name"" : ""Chronic Pancreatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 195596,
							""CONCEPT_NAME"" : ""Chronic pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235494005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715932,
							""CONCEPT_NAME"" : ""Acute on chronic pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721724009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 19,
			""name"" : ""Hereditary Pancreatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4194916,
							""CONCEPT_NAME"" : ""Hereditary pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""68072000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 20,
			""name"" : ""outpatient visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 9202,
							""CONCEPT_NAME"" : ""Outpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 21,
			""name"" : ""Emergency room visit as a procedure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514436,
							""CONCEPT_NAME"" : ""Emergency department visit for the evaluation and management of a patient, which requires these 3 key components: A detailed history; A detailed examination; and Medical decision making of moderate complexity. Counseling and/or coordination of care with o"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99284"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514434,
							""CONCEPT_NAME"" : ""Emergency department visit for the evaluation and management of a patient, which requires these 3 key components: An expanded problem focused history; An expanded problem focused examination; and Medical decision making of low complexity. Counseling and/o"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99282"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514435,
							""CONCEPT_NAME"" : ""Emergency department visit for the evaluation and management of a patient, which requires these 3 key components: An expanded problem focused history; An expanded problem focused examination; and Medical decision making of moderate complexity. Counseling "",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99283"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514433,
							""CONCEPT_NAME"" : ""Emergency department visit for the evaluation and management of a patient, which requires these 3 key components: A problem focused history; A problem focused examination; and Straightforward medical decision making. Counseling and/or coordination of care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99281"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514437,
							""CONCEPT_NAME"" : ""Emergency department visit for the evaluation and management of a patient, which requires these 3 key components within the constraints imposed by the urgency of the patient's clinical condition and/or mental status: A comprehensive history; A comprehensi"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99285"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Washout period of 365 days"",
			""description"" : ""This rule will prevent a person to renter for 1 year after entering a cohort. This is based on the assumption that any event in the 1 year period after prior event is part of an ongoing episode of care and thus not an independent event or case."",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ALL"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 15,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 16,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CorrelatedCriteria"" : {
									""Type"" : ""ALL"",
									""CriteriaList"" : [
										{
											""Criteria"" : {
												""ProcedureOccurrence"" : {
													""CodesetId"" : 21,
													""ProcedureTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										},
										{
											""Criteria"" : {
												""ConditionOccurrence"" : {
													""CodesetId"" : 15,
													""ConditionTypeExclude"" : false
												}
											},
											""StartWindow"" : {
												""Start"" : {
													""Coeff"" : -1
												},
												""End"" : {
													""Days"" : 0,
													""Coeff"" : -1
												},
												""UseIndexEnd"" : true,
												""UseEventEnd"" : false
											},
											""EndWindow"" : {
												""Start"" : {
													""Days"" : 0,
													""Coeff"" : 1
												},
												""End"" : {
													""Coeff"" : 1
												},
												""UseIndexEnd"" : false,
												""UseEventEnd"" : false
											},
											""RestrictVisit"" : false,
											""IgnoreObservationPeriod"" : false,
											""Occurrence"" : {
												""Type"" : 2,
												""Count"" : 1,
												""IsDistinct"" : false
											}
										}
									],
									""DemographicCriteriaList"" : [],
									""Groups"" : []
								},
								""CodesetId"" : 20,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Should have Acute Pancreatitis within 1 day"",
			""description"" : ""Includes unspecified pancreatitis code without descendants"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 17,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Should NOT have Chronic Pancreatitis on or before Acute Pancreatitis"",
			""description"" : ""Includes index date."",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 18,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Should NOT have Hereditary Pancreatitis any time"",
			""description"" : ""Any time in persons observation period"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 19,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4192640))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4192640))

) I
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (262,9201,9203))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (262,9201,9203))

) I
) C UNION ALL 
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (199074,4341076,4192640))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (199074,4341076))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4243504,195596))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4243504,195596))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (195596,36715932))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (195596,36715932))

) I
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4194916))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4194916))

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (9202))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (9202))

) I
) C UNION ALL 
SELECT 21 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (2514436,2514434,2514435,2514433,2514437))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) >= 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 21)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 16)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 21)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE) AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 17)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 18)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 19)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{4 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),4)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,end_date) > op_end_date then op_end_date else DATEADD(day,7,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 4 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
731,"All events of Sudden Hearing Loss, No congenital anomaly or middle or inner ear conditions","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 5,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ANY"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 8,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 1,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 21,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""ProcedureOccurrence"" : {
										""CodesetId"" : 9,
										""ProcedureTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 1,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 21,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""ProcedureOccurrence"" : {
										""CodesetId"" : 3,
										""ProcedureTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 1,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 21,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 2,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ANY"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 8,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 1,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 21,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""ProcedureOccurrence"" : {
										""CodesetId"" : 9,
										""ProcedureTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 1,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 21,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""ProcedureOccurrence"" : {
										""CodesetId"" : 3,
										""ProcedureTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 1,
										""Coeff"" : 1
									},
									""End"" : {
										""Days"" : 21,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 2,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 1,
					""ObservationTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Hearing loss "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 377889,
							""CONCEPT_NAME"" : ""Hearing loss"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""15188001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 376793,
							""CONCEPT_NAME"" : ""Congenital anomaly of ear with impairment of hearing"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111339003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40484010,
							""CONCEPT_NAME"" : ""Unilateral conductive hearing loss"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442535004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434046,
							""CONCEPT_NAME"" : ""Unilateral mixed conductive and sensorineural hearing loss with unrestricted hearing on the contralateral side"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""194428008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 379831,
							""CONCEPT_NAME"" : ""Unilateral neural hearing loss"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""425601005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 433496,
							""CONCEPT_NAME"" : ""Unilateral sensory hearing loss"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""425980006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40659147,
							""CONCEPT_NAME"" : ""Verification and documentation of sudden or rapidly progressive hearing loss"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""G8565"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Middle ear finding"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4101079,
							""CONCEPT_NAME"" : ""Middle ear finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""300162007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4113411,
							""CONCEPT_NAME"" : ""Middle ear normal"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""300194002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Hearing examination"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4134565,
							""CONCEPT_NAME"" : ""Hearing examination"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""398171003"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Inner Ear Disorder"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4335747,
							""CONCEPT_NAME"" : ""Disorder of inner ear"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""232297009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Sudden Hearing Loss"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 374053,
							""CONCEPT_NAME"" : ""Sudden hearing loss"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""79471008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Congenital anomaly of ear with impairment of hearing"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 376793,
							""CONCEPT_NAME"" : ""Congenital anomaly of ear with impairment of hearing"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111339003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Corticosteroids systemic or topical"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 21605042,
							""CONCEPT_NAME"" : ""Corticosteroids"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""R01AD"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""ATC"",
							""CONCEPT_CLASS_ID"" : ""ATC 4th""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21601607,
							""CONCEPT_NAME"" : ""Corticosteroids"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C05AA"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""ATC"",
							""CONCEPT_CLASS_ID"" : ""ATC 4th""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21605199,
							""CONCEPT_NAME"" : ""CORTICOSTEROIDS"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""S03B"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""ATC"",
							""CONCEPT_CLASS_ID"" : ""ATC 3rd""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21605164,
							""CONCEPT_NAME"" : ""CORTICOSTEROIDS"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""S02B"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""ATC"",
							""CONCEPT_CLASS_ID"" : ""ATC 3rd""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21602728,
							""CONCEPT_NAME"" : ""Glucocorticoids"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""H02AB"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""ATC"",
							""CONCEPT_CLASS_ID"" : ""ATC 4th""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21600652,
							""CONCEPT_NAME"" : ""Corticosteroids acting locally"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""A07EA"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""ATC"",
							""CONCEPT_CLASS_ID"" : ""ATC 4th""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Imaging of head area"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4060499,
							""CONCEPT_NAME"" : ""CT of neck"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169068008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125350,
							""CONCEPT_NAME"" : ""CT of head"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""303653007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4086261,
							""CONCEPT_NAME"" : ""CT of cervical spine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""241578008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2799719,
							""CONCEPT_NAME"" : ""Imaging @ Anatomical Regions @ Magnetic Resonance Imaging (MRI) @ Head"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""BW38"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Washout - no prior hearing loss in 365 days prior"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 1,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Not a congenital anomaly of hearing"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 6,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Has no middle ear related disease"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 2,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Has no inner ear related disease"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 4,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""Has not had audiometry in past 365 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 3,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 30
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (377889,40484010,434046,379831,433496,40659147))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (377889,40484010,434046,379831,433496,40659147))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (376793))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (376793))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4101079))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4101079))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4113411))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4113411))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4134565))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4134565))

) I
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4335747))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4335747))

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (374053))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (374053))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (376793))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (376793))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (21605042,21601607,21605199,21605164,21602728,21600652))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (21605042,21601607,21605199,21605164,21602728,21600652))

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4060499,4125350,4086261,2799719))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4060499,4125350,4086261,2799719))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,21,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,21,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,21,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 2
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Observation Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,21,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,21,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Observation Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,1,P.START_DATE) AND A.START_DATE <= DATEADD(day,21,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 2
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 4)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 3)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-30,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{5 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),5)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,30,start_date) > op_end_date then op_end_date else DATEADD(day,30,start_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 5 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
732,"All events of Severe Cutaneous Adverse Reaction (SCAR = SJS+TEN+DRESS)","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 2,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Drug rash with eosinophilia and systemic symptoms syndrome [DRESS]"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 45765791,
							""CONCEPT_NAME"" : ""Drug reaction with eosinophilia and systemic symptoms"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""702809001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Erythema multiforme"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 132702,
							""CONCEPT_NAME"" : ""Erythema multiforme"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""36715001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Stevens-Johnson syndrome or TEN"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 35625857,
							""CONCEPT_NAME"" : ""Stevens-Johnson syndrome, toxic epidermal necrolysis spectrum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""768946000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""has no events in prior 'clean window' - 365 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 0,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 2,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (45765791))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (45765791))

) I
) C UNION ALL 
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (132702))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (132702))

) I
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (35625857))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (35625857))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 2)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{1 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > op_end_date then op_end_date else DATEADD(day,3,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 1 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
733,"All events Drug Rash with Eosinophilia and Systemic Symptoms (DRESS)","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Drug rash with eosinophilia and systemic symptoms syndrome [DRESS]"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 45765791,
							""CONCEPT_NAME"" : ""Drug reaction with eosinophilia and systemic symptoms"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""702809001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""has no events in prior 'clean window' - 365 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 0,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (45765791))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (45765791))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 0)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{1 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > op_end_date then op_end_date else DATEADD(day,1,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 1 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
735,"All events of Acute Liver Injury","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 32,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ANY"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""VisitOccurrence"" : {
										""CodesetId"" : 34,
										""VisitTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : true
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""Observation"" : {
										""CodesetId"" : 34,
										""ObservationTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : true
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""ProcedureOccurrence"" : {
										""CodesetId"" : 34,
										""ProcedureTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : true
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 33,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 21,
			""name"" : ""\nchronic Hepatic Failure\n"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 32,
			""name"" : ""Acute hepatic injury"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055224,
							""CONCEPT_NAME"" : ""Toxic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197354009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4245975,
							""CONCEPT_NAME"" : ""Hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59927004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194990,
							""CONCEPT_NAME"" : ""Inflammatory disease of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128241005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058696,
							""CONCEPT_NAME"" : ""Central hemorrhagic necrosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197364000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055225,
							""CONCEPT_NAME"" : ""Toxic liver disease with chronic lobular hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197360009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4059299,
							""CONCEPT_NAME"" : ""Toxic liver disease with chronic active hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197361008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4059298,
							""CONCEPT_NAME"" : ""Toxic liver disease with chronic persistent hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197359004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058695,
							""CONCEPT_NAME"" : ""Toxic liver disease with fibrosis and cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197362001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029488,
							""CONCEPT_NAME"" : ""Hepatic encephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13920009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4337543,
							""CONCEPT_NAME"" : ""Hepatic necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""87248009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3655440,
							""CONCEPT_NAME"" : ""Chronic necrosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""863957008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4239091,
							""CONCEPT_NAME"" : ""Necrosis of liver of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""91162000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42599120,
							""CONCEPT_NAME"" : ""Hepatic necrosis in animals"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""346721000009103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED Veterinary"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194417,
							""CONCEPT_NAME"" : ""Hepatic infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17890003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40481531,
							""CONCEPT_NAME"" : ""Sequela of chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444918006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 33,
			""name"" : ""unspecified jaundice"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 137977,
							""CONCEPT_NAME"" : ""Jaundice"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""18165001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 34,
			""name"" : ""Inpatient Setting Concepts"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4203130,
							""CONCEPT_NAME"" : ""Discharge from hospital"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""308283009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 8715,
							""CONCEPT_NAME"" : ""Hospital admission"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""32485007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4214577,
							""CONCEPT_NAME"" : ""Inpatient care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""394656005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888973,
							""CONCEPT_NAME"" : ""New or Established Patient Initial Inpatient Consultation Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013700"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888411,
							""CONCEPT_NAME"" : ""Observation or Inpatient Care Services (Including Admission and Discharge Services)"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013675"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888081,
							""CONCEPT_NAME"" : ""Hospital Observation Care Discharge Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013649"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888494,
							""CONCEPT_NAME"" : ""Inpatient Neonatal and Pediatric Critical Care Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1019134"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4202667,
							""CONCEPT_NAME"" : ""Medical consultation on inpatient"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53923005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888205,
							""CONCEPT_NAME"" : ""Prolonged service in the inpatient or observation setting, requiring unit/floor time beyond the usual service"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013800"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45889184,
							""CONCEPT_NAME"" : ""New or Established Patient Initial Hospital Inpatient Care Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013661"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4313303,
							""CONCEPT_NAME"" : ""Evaluation and management of inpatient"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""86181006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2721702,
							""CONCEPT_NAME"" : ""Hospice general inpatient care; per diem"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""T2045"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""have no chronic hepatic failure on the day of diagnosis "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 21,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 21 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390))

) I
) C UNION ALL 
SELECT 32 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4055224,4245975,194990,4058696,4029488,4337543,40481531))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4055224,4245975,4058696,4029488,4337543))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390,4055225,4059299,4059298,4058695,3655440,4239091,42599120,194417))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390,4055225,4059299,4059298,4058695,3655440,4239091,42599120,194417))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 33 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (137977))

) I
) C UNION ALL 
SELECT 34 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (9201,4203130,8715,4214577,45888973,45888411,45888081,45888494,4202667,45888205,45889184,4313303,2721702,262))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (9201,4203130,8715,4214577,45888973,45888411,45888081,45888494,4202667,45888205,45889184,4313303,2721702,262))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 32)
) C


-- End Condition Occurrence Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 34)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 34)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 34)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 21)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{1 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > op_end_date then op_end_date else DATEADD(day,1,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 90, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,90,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 1 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
736,"All events of Acute Liver Injury, NO viral hepatitis or alcoholic hepatic failure","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 32,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ANY"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""VisitOccurrence"" : {
										""CodesetId"" : 34,
										""VisitTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : true
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""Observation"" : {
										""CodesetId"" : 34,
										""ObservationTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : true
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""ProcedureOccurrence"" : {
										""CodesetId"" : 34,
										""ProcedureTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""EndWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : true
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 33,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 21,
			""name"" : ""\nchronic Hepatic Failure\n"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 32,
			""name"" : ""Acute hepatic injury"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055224,
							""CONCEPT_NAME"" : ""Toxic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197354009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4245975,
							""CONCEPT_NAME"" : ""Hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59927004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194990,
							""CONCEPT_NAME"" : ""Inflammatory disease of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128241005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058696,
							""CONCEPT_NAME"" : ""Central hemorrhagic necrosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197364000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055225,
							""CONCEPT_NAME"" : ""Toxic liver disease with chronic lobular hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197360009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4059299,
							""CONCEPT_NAME"" : ""Toxic liver disease with chronic active hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197361008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4059298,
							""CONCEPT_NAME"" : ""Toxic liver disease with chronic persistent hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197359004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058695,
							""CONCEPT_NAME"" : ""Toxic liver disease with fibrosis and cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197362001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029488,
							""CONCEPT_NAME"" : ""Hepatic encephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13920009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4337543,
							""CONCEPT_NAME"" : ""Hepatic necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""87248009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3655440,
							""CONCEPT_NAME"" : ""Chronic necrosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""863957008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4239091,
							""CONCEPT_NAME"" : ""Necrosis of liver of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""91162000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42599120,
							""CONCEPT_NAME"" : ""Hepatic necrosis in animals"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""346721000009103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED Veterinary"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194417,
							""CONCEPT_NAME"" : ""Hepatic infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17890003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40481531,
							""CONCEPT_NAME"" : ""Sequela of chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444918006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 33,
			""name"" : ""unspecified jaundice"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 137977,
							""CONCEPT_NAME"" : ""Jaundice"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""18165001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 34,
			""name"" : ""Inpatient Setting Concepts"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4203130,
							""CONCEPT_NAME"" : ""Discharge from hospital"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""308283009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 8715,
							""CONCEPT_NAME"" : ""Hospital admission"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""32485007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4214577,
							""CONCEPT_NAME"" : ""Inpatient care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""394656005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888973,
							""CONCEPT_NAME"" : ""New or Established Patient Initial Inpatient Consultation Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013700"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888411,
							""CONCEPT_NAME"" : ""Observation or Inpatient Care Services (Including Admission and Discharge Services)"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013675"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888081,
							""CONCEPT_NAME"" : ""Hospital Observation Care Discharge Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013649"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888494,
							""CONCEPT_NAME"" : ""Inpatient Neonatal and Pediatric Critical Care Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1019134"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4202667,
							""CONCEPT_NAME"" : ""Medical consultation on inpatient"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53923005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45888205,
							""CONCEPT_NAME"" : ""Prolonged service in the inpatient or observation setting, requiring unit/floor time beyond the usual service"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013800"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45889184,
							""CONCEPT_NAME"" : ""New or Established Patient Initial Hospital Inpatient Care Services"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1013661"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4313303,
							""CONCEPT_NAME"" : ""Evaluation and management of inpatient"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""86181006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2721702,
							""CONCEPT_NAME"" : ""Hospice general inpatient care; per diem"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""T2045"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 37,
			""name"" : ""Alcoholic hepatitis or alcoholic liver failure or other alcoholic liver damage "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340383,
							""CONCEPT_NAME"" : ""Alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235875008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269835,
							""CONCEPT_NAME"" : ""Hepatic ascites due to chronic alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1085021000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269818,
							""CONCEPT_NAME"" : ""Hepatic coma due to alcoholic liver failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082621000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340386,
							""CONCEPT_NAME"" : ""Alcoholic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235881000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 201343,
							""CONCEPT_NAME"" : ""Acute alcoholic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9953008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196463,
							""CONCEPT_NAME"" : ""Alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420054005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 201612,
							""CONCEPT_NAME"" : ""Alcoholic liver damage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41309000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 38,
			""name"" : ""Hepatitis due to infection"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4093637,
							""CONCEPT_NAME"" : ""Sequelae of viral hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""187260009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194087,
							""CONCEPT_NAME"" : ""Hepatitis due to infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235862008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196029,
							""CONCEPT_NAME"" : ""Hepatic coma due to viral hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40946000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 39,
			""name"" : ""measurement suggesting viral hepatitis present "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2213087,
							""CONCEPT_NAME"" : ""Infectious agent antigen detection by immunoassay technique, (eg, enzyme immunoassay [EIA], enzyme-linked immunosorbent assay [ELISA], immunochemiluminometric assay [IMCA]) qualitative or semiquantitative, multiple-step method; hepatitis B surface antigen"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""87340"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 40,
			""name"" : ""steatohepatitis "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 40482277,
							""CONCEPT_NAME"" : ""Steatohepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442191002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 41,
			""name"" : ""alcohol abuse "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 433753,
							""CONCEPT_NAME"" : ""Alcohol abuse"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""15167005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""have no chronic hepatic failure on the day of diagnosis "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 21,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""cooccurring Hepatitis due to infection around the same time "",
			""expression"" : {
				""Type"" : ""ANY"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 38,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 39,
								""MeasurementTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""cooccurring Alcoholic hepatitis or alcoholic liver failure "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 37,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""steatohepatitis "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 40,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""have no alcohol abuse around the same time "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 41,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 21 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390))

) I
) C UNION ALL 
SELECT 32 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4055224,4245975,194990,4058696,4029488,4337543,40481531))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4055224,4245975,4058696,4029488,4337543))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390,4055225,4059299,4059298,4058695,3655440,4239091,42599120,194417))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390,4055225,4059299,4059298,4058695,3655440,4239091,42599120,194417))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 33 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (137977))

) I
) C UNION ALL 
SELECT 34 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (9201,4203130,8715,4214577,45888973,45888411,45888081,45888494,4202667,45888205,45889184,4313303,2721702,262))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (9201,4203130,8715,4214577,45888973,45888411,45888081,45888494,4202667,45888205,45889184,4313303,2721702,262))

) I
) C UNION ALL 
SELECT 37 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340383,46269835,46269818,4340386,201343,196463,201612))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340383,46269835,46269818,4340386,201343,196463))

) I
) C UNION ALL 
SELECT 38 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4093637,194087,196029))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4093637,194087,196029))

) I
) C UNION ALL 
SELECT 39 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (2213087))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (2213087))

) I
) C UNION ALL 
SELECT 40 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (40482277))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (40482277))

) I
) C UNION ALL 
SELECT 41 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (433753))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 32)
) C


-- End Condition Occurrence Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 34)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 34)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 33)
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 34)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 21)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 38)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 39)
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 37)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 40)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 41)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{5 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),5)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > op_end_date then op_end_date else DATEADD(day,1,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 90, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,90,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 5 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
737,"Neutropenic Fever, Inpatient or ER, indexed on fever or Infection, 90 days era","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 5,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CodesetId"" : 1,
					""MeasurementTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CodesetId"" : 2,
					""MeasurementTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 38,
						""Op"" : ""bt"",
						""Extent"" : 42
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 586323,
							""CONCEPT_NAME"" : ""degree Celsius"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""Cel"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Measurement"" : {
					""CodesetId"" : 2,
					""MeasurementTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 100.40000000000000568434,
						""Op"" : ""bt"",
						""Extent"" : 120
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 9289,
							""CONCEPT_NAME"" : ""degree Fahrenheit"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""[degF]"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 2,
					""ObservationTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 38,
						""Op"" : ""bt"",
						""Extent"" : 42
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 586323,
							""CONCEPT_NAME"" : ""degree Celsius"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""Cel"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 2,
					""ObservationTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 100.40000000000000568434,
						""Op"" : ""bt"",
						""Extent"" : 120
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 9289,
							""CONCEPT_NAME"" : ""degree Fahrenheit"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""[degF]"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 7,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 8,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : [
			{
				""Type"" : ""ANY"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 5,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 4,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 6,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 0.010000000000000000208167,
									""Op"" : ""bt"",
									""Extent"" : 1.4990000000000001101341
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 9444,
										""CONCEPT_NAME"" : ""billion per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8848,
										""CONCEPT_NAME"" : ""thousand per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8816,
										""CONCEPT_NAME"" : ""million per milliliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*6/mL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8961,
										""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/mm3"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 44777588,
										""CONCEPT_NAME"" : ""billion cells per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 6,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 10,
									""Op"" : ""bt"",
									""Extent"" : 1500
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 8784,
										""CONCEPT_NAME"" : ""cells per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""{cells}/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8647,
										""CONCEPT_NAME"" : ""per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		]
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Fever (38.0°C or higher) pre-coordinated measurement and conditions"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4346179,
							""CONCEPT_NAME"" : ""Bancroftian filarial fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""240822009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4170869,
							""CONCEPT_NAME"" : ""Dehydration fever in newborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49513005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4226022,
							""CONCEPT_NAME"" : ""Drug-induced hyperpyrexia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""405543000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37205085,
							""CONCEPT_NAME"" : ""Familial mesial temporal lobe epilepsy with febrile seizures"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""784372002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 444413,
							""CONCEPT_NAME"" : ""Febrile convulsion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41497008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437663,
							""CONCEPT_NAME"" : ""Fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""386661006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4141062,
							""CONCEPT_NAME"" : ""Fever greater than 100.4 Fahrenheit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""426000000"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4318555,
							""CONCEPT_NAME"" : ""Fever of the newborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95627000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37016869,
							""CONCEPT_NAME"" : ""Infection caused by Borrelia miyamotoi"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713014002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443908,
							""CONCEPT_NAME"" : ""Louse-borne relapsing fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""14683004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4093997,
							""CONCEPT_NAME"" : ""Malarial fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248437004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4347651,
							""CONCEPT_NAME"" : ""Malayan filarial fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""240827003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440285,
							""CONCEPT_NAME"" : ""Malignant hyperthermia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""405501007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4087628,
							""CONCEPT_NAME"" : ""Malignant tertian fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248441000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4143214,
							""CONCEPT_NAME"" : ""Maternal pyrexia in labor"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267340006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4152360,
							""CONCEPT_NAME"" : ""O/E - fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""271897009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039793,
							""CONCEPT_NAME"" : ""O/E - level of fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164299002"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37397178,
							""CONCEPT_NAME"" : ""PFAPA syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""717231003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40493465,
							""CONCEPT_NAME"" : ""Paraneoplastic fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""449129007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4199309,
							""CONCEPT_NAME"" : ""Pel Ebstein fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52715007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44784428,
							""CONCEPT_NAME"" : ""Post diphtheria vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698579002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44784427,
							""CONCEPT_NAME"" : ""Post diphtheria, tetanus and pertussis vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698578005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44784429,
							""CONCEPT_NAME"" : ""Post pertussis vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698581000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44782483,
							""CONCEPT_NAME"" : ""Post tetanus vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698580004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43530646,
							""CONCEPT_NAME"" : ""Post vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""123471000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4086668,
							""CONCEPT_NAME"" : ""Postoperative fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248450003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3197956,
							""CONCEPT_NAME"" : ""Postoperative fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17670001000004108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""Nebraska Lexicon"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4094003,
							""CONCEPT_NAME"" : ""Postpartum fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248451004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43530637,
							""CONCEPT_NAME"" : ""Postprocedural fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""130091000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017455,
							""CONCEPT_NAME"" : ""Pyrexia of unknown origin co-occurrent with human immunodeficiency virus infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713731001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4087629,
							""CONCEPT_NAME"" : ""Quartan fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248442007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150518,
							""CONCEPT_NAME"" : ""Relapsing fever of Asia AND/OR Africa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31120005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4184347,
							""CONCEPT_NAME"" : ""Relapsing fever of Central AND/OR South Africa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43626008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4326408,
							""CONCEPT_NAME"" : ""Relapsing fever of Central AND/OR South America"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""74873003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4200980,
							""CONCEPT_NAME"" : ""Relapsing fever of Iberian Peninsula AND/OR Northwest Africa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52635002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4229442,
							""CONCEPT_NAME"" : ""Relapsing fever of Iran AND/OR Central Asia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88808006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4239624,
							""CONCEPT_NAME"" : ""Relapsing fever of Southern U.S., Mexico, Central AND/OR South America"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""58827009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4300533,
							""CONCEPT_NAME"" : ""Relapsing fever of Western North America"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""78168002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4308214,
							""CONCEPT_NAME"" : ""Relapsing fever of Western United States"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""39002001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4099900,
							""CONCEPT_NAME"" : ""Relapsing fever of the Caucasus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""27578005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4094000,
							""CONCEPT_NAME"" : ""Reversed diurnal fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248446005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4087017,
							""CONCEPT_NAME"" : ""Tertian fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248440004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438963,
							""CONCEPT_NAME"" : ""Tick-borne relapsing fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10301003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4243806,
							""CONCEPT_NAME"" : ""Transitory fever of newborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60025004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43530637,
							""CONCEPT_NAME"" : ""Postprocedural fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""130091000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Fever (38.0°C or higher) measurement and observation"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3025085,
							""CONCEPT_NAME"" : ""Axillary temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8328-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21490870,
							""CONCEPT_NAME"" : ""Bladder temperature via Foley"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76278-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21490688,
							""CONCEPT_NAME"" : ""Body surface temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61008-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3020891,
							""CONCEPT_NAME"" : ""Body temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8310-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3025926,
							""CONCEPT_NAME"" : ""Body temperature - Core"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8329-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3025704,
							""CONCEPT_NAME"" : ""Body temperature - Urinary bladder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8334-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017614,
							""CONCEPT_NAME"" : ""Body temperature 1 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8321-2"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3011783,
							""CONCEPT_NAME"" : ""Body temperature 1 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8311-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3004750,
							""CONCEPT_NAME"" : ""Body temperature 10 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8323-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3008557,
							""CONCEPT_NAME"" : ""Body temperature 10 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8313-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3007846,
							""CONCEPT_NAME"" : ""Body temperature 12 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8324-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3016117,
							""CONCEPT_NAME"" : ""Body temperature 12 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8314-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3006749,
							""CONCEPT_NAME"" : ""Body temperature 24 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8325-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3016715,
							""CONCEPT_NAME"" : ""Body temperature 24 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8315-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3018145,
							""CONCEPT_NAME"" : ""Body temperature 8 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8322-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3015039,
							""CONCEPT_NAME"" : ""Body temperature 8 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8312-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3009553,
							""CONCEPT_NAME"" : ""Body temperature at First encounter"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""11289-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4329518,
							""CONCEPT_NAME"" : ""Body temperature taken with digital thermometer"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""431807005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4174894,
							""CONCEPT_NAME"" : ""Core body temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276885007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21490907,
							""CONCEPT_NAME"" : ""Ear temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76011-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21490588,
							""CONCEPT_NAME"" : ""Esophageal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60836-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4212763,
							""CONCEPT_NAME"" : ""Forehead temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""415922000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4189949,
							""CONCEPT_NAME"" : ""Groin temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""415929009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44809208,
							""CONCEPT_NAME"" : ""Maximum body temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""852591000000107"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21490906,
							""CONCEPT_NAME"" : ""Nasal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76010-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21490590,
							""CONCEPT_NAME"" : ""Nasopharyngeal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60838-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4040476,
							""CONCEPT_NAME"" : ""O/E - axillary temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164292006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039792,
							""CONCEPT_NAME"" : ""O/E - core temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164295008"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4040104,
							""CONCEPT_NAME"" : ""O/E - groin temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164293001"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4164378,
							""CONCEPT_NAME"" : ""O/E - hyperpyrexia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274308003"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039796,
							""CONCEPT_NAME"" : ""O/E - hyperpyrexia - greater than 40.5 degrees Celsius"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164304001"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039793,
							""CONCEPT_NAME"" : ""O/E - level of fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164299002"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4077057,
							""CONCEPT_NAME"" : ""O/E - oral temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""275874003"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039791,
							""CONCEPT_NAME"" : ""O/E - rectal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164294007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039795,
							""CONCEPT_NAME"" : ""O/E - temperature elevated"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164303007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4040106,
							""CONCEPT_NAME"" : ""O/E - temperature low"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164301009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039794,
							""CONCEPT_NAME"" : ""O/E - temperature normal"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164300005"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151775,
							""CONCEPT_NAME"" : ""O/E - tympanic temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""315632006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4038778,
							""CONCEPT_NAME"" : ""O/E -skin temperature abnormal"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""163633002"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3006322,
							""CONCEPT_NAME"" : ""Oral temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8331-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3022060,
							""CONCEPT_NAME"" : ""Rectal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8332-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45769775,
							""CONCEPT_NAME"" : ""Temperature of neonate at birth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""708499008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4265708,
							""CONCEPT_NAME"" : ""Temperature of skin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""364537001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267945,
							""CONCEPT_NAME"" : ""Temperature of vagina"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""364246006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3025163,
							""CONCEPT_NAME"" : ""Tympanic membrane temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8333-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Neutropenia or Agranulocytosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715585,
							""CONCEPT_NAME"" : ""Refractory neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721303001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 320073,
							""CONCEPT_NAME"" : ""Neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""165517008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42872951,
							""CONCEPT_NAME"" : ""Refractory neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""450946009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435224,
							""CONCEPT_NAME"" : ""Leukopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84828003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440689,
							""CONCEPT_NAME"" : ""Agranulocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17182001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766061,
							""CONCEPT_NAME"" : ""Periodontitis associated with chronic familial neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703148008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Febrile neutropenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4250734,
							""CONCEPT_NAME"" : ""Febrile neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""409089005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Neutrophil Absolute Count"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393856,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022551000000104"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148615,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""30630007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017732,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26499-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3013650,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""751-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017501,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Manual count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""753-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Significant Infections"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4311853,
							""CONCEPT_NAME"" : ""Upper urinary tract infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""422747000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4170143,
							""CONCEPT_NAME"" : ""Respiratory tract infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""275498002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435742,
							""CONCEPT_NAME"" : ""Disease due to Gram-negative bacteria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371583007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4000938,
							""CONCEPT_NAME"" : ""Bacterial sepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10001005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161193,
							""CONCEPT_NAME"" : ""Disease due to Gram-positive bacteria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371582002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4309542,
							""CONCEPT_NAME"" : ""Infection due to anaerobic bacteria"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""423451008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 132736,
							""CONCEPT_NAME"" : ""Bacteremia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5758002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 72410,
							""CONCEPT_NAME"" : ""Infection of bone"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111253001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435613,
							""CONCEPT_NAME"" : ""Cellulitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128045006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Inpatient Visit"",
			""description"" : ""Overlapping with Neutropenia"",
			""expression"" : {
				""Type"" : ""ANY"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""VisitOccurrence"" : {
								""CodesetId"" : 8,
								""VisitTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""EndWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : true
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Normal Neutrophil count (ANC )"",
			""expression"" : {
				""Type"" : ""ANY"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 6,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 4,
									""Op"" : ""bt"",
									""Extent"" : 8.25
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 9444,
										""CONCEPT_NAME"" : ""billion per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8848,
										""CONCEPT_NAME"" : ""thousand per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8816,
										""CONCEPT_NAME"" : ""million per milliliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*6/mL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8961,
										""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/mm3"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 6,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 4000,
									""Op"" : ""bt"",
									""Extent"" : 8250
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 8784,
										""CONCEPT_NAME"" : ""cells per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""{cells}/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8647,
										""CONCEPT_NAME"" : ""per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								],
								""RangeLow"" : {
									""Value"" : 1500,
									""Op"" : ""bt"",
									""Extent"" : 4000
								}
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (444413,437663,4141062,4152360,43530637))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (444413,437663,4141062,4152360,43530637))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4346179,4170869,4226022,37205085,4318555,37016869,443908,4093997,4347651,440285,4087628,4143214,4039793,37397178,40493465,4199309,44784428,44784427,44784429,44782483,43530646,4086668,3197956,4094003,43530637,37017455,4087629,4150518,4184347,4326408,4200980,4229442,4239624,4300533,4308214,4099900,4094000,4087017,438963,4243806))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4346179,4170869,4226022,37205085,4318555,37016869,443908,4093997,4347651,440285,4087628,4143214,4039793,37397178,40493465,4199309,44784428,44784427,44784429,44782483,43530646,4086668,3197956,4094003,43530637,37017455,4087629,4150518,4184347,4326408,4200980,4229442,4239624,4300533,4308214,4099900,4094000,4087017,438963,4243806))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3025085,21490870,21490688,3020891,3025926,3025704,3017614,3011783,3004750,3008557,3007846,3016117,3006749,3016715,3018145,3015039,3009553,4329518,4174894,21490907,21490588,4212763,44809208,21490906,21490590,4039793,4077057,4039791,4151775,3006322,3022060,4265708,3025163))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3025085,21490870,21490688,3020891,3025926,3025704,3017614,3011783,3004750,3008557,3007846,3016117,3006749,3016715,3018145,3015039,3009553,4329518,4174894,21490907,21490588,4212763,44809208,21490906,21490590,4039793,4077057,4039791,4151775,3006322,3022060,4265708,3025163))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4189949,4040476,4039792,4040104,4164378,4039796,4039795,4040106,4039794,4038778,45769775,4267945))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4189949,4040476,4039792,4040104,4164378,4039796,4039795,4040106,4039794,4038778,45769775,4267945))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (36715585,320073,42872951,435224,440689,45766061))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (36715585,320073,42872951,435224,440689,45766061))

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4250734))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4250734))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (37393856,4148615,3017732,3013650,3017501))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3017732,3013650,3017501))

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4311853,4170143,435742,4000938,4161193,4309542,132736,72410,435613))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4311853,4170143,435742,4000938,4161193,4309542,132736,72410,435613))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (262,9203,9201))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (262,9203,9201))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 4)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 2 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 6)
) C

WHERE (C.value_as_number >= 0.0100 and C.value_as_number <= 1.4990)
AND C.unit_concept_id in (9444,8848,8816,8961,44777588)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 3 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 5)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.unit_concept_id,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 2)
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 6)
) C

WHERE (C.value_as_number >= 10.0000 and C.value_as_number <= 1500.0000)
AND C.unit_concept_id in (8784,8647)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-1,P.START_DATE) AND A.START_DATE <= DATEADD(day,1,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select vo.person_id,vo.visit_occurrence_id,vo.visit_concept_id,vo.visit_start_date as start_date, vo.visit_end_date as end_date 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets cs on (vo.visit_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 6)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 8.2500)
AND C.unit_concept_id in (9444,8848,8816,8961)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 6)
) C

WHERE (C.value_as_number >= 4000.0000 and C.value_as_number <= 8250.0000)
AND C.unit_concept_id in (8784,8647)
AND (C.range_low >= 1500.0000 and C.range_low <= 4000.0000)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{2 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > op_end_date then op_end_date else DATEADD(day,3,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 90, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,90,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 2 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
739,"Isolated Immune Thrombocytopenia (ITP), with a washout period of 365 days","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 30,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 7,
			""name"" : ""Platelet measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267147,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61928009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3031586,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood by Estimate"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49497-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050583,
							""CONCEPT_NAME"" : ""Platelets panel - Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53800-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3007461,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26515-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393863,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022651000000100"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Congenital or genetic causes for thrombocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 37397537,
							""CONCEPT_NAME"" : ""Beta thalassemia X-linked thrombocytopenia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718196002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4121131,
							""CONCEPT_NAME"" : ""Inherited platelet disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234469001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006469,
							""CONCEPT_NAME"" : ""Reticular dysgenesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111584000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42537688,
							""CONCEPT_NAME"" : ""Congenital thrombocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""737221003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437242,
							""CONCEPT_NAME"" : ""Congenital thrombocytopenic purpura"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267535004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Thrombocytosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4280071,
							""CONCEPT_NAME"" : ""Thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""6631009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715584,
							""CONCEPT_NAME"" : ""Refractory anemia with ringed sideroblasts associated with marked thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721302006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766614,
							""CONCEPT_NAME"" : ""Refractory anemia with ring sideroblasts associated with marked thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703817002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 24,
			""name"" : ""Pancytopenia & bone marrow disorder"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 432881,
							""CONCEPT_NAME"" : ""Pancytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127034005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4131124,
							""CONCEPT_NAME"" : ""Bone marrow disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""127035006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 25,
			""name"" : ""Neutropenia, Agranulocytosis or Unspecified Leukopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715585,
							""CONCEPT_NAME"" : ""Refractory neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721303001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 320073,
							""CONCEPT_NAME"" : ""Neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""165517008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42872951,
							""CONCEPT_NAME"" : ""Refractory neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""450946009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435224,
							""CONCEPT_NAME"" : ""Leukopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84828003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440689,
							""CONCEPT_NAME"" : ""Agranulocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17182001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45766061,
							""CONCEPT_NAME"" : ""Periodontitis associated with chronic familial neutropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703148008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4119158,
							""CONCEPT_NAME"" : ""Neutropenic disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""303011007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 26,
			""name"" : ""Neutrophil Absolute Count"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393856,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022551000000104"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148615,
							""CONCEPT_NAME"" : ""Neutrophil count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""30630007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017732,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26499-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3013650,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""751-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017501,
							""CONCEPT_NAME"" : ""Neutrophils [#/volume] in Blood by Manual count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""753-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 27,
			""name"" : ""Anemia or Reticulocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617149,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer radiotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EB"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36716029,
							""CONCEPT_NAME"" : ""Hyperuricemia, anemia, renal failure syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721840000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617148,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia due to anti-cancer chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EA"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029669,
							""CONCEPT_NAME"" : ""Refractory anemia with sideroblasts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128846006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4120449,
							""CONCEPT_NAME"" : ""von Jaksch's anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234345001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 35624756,
							""CONCEPT_NAME"" : ""Anemia due to and following chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""767657005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028718,
							""CONCEPT_NAME"" : ""Refractory anemia with excess blasts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128847002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017165,
							""CONCEPT_NAME"" : ""GATA binding protein 1 related thrombocytopenia with dyserythropoiesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713388002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4144746,
							""CONCEPT_NAME"" : ""Hereditary hemoglobinopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""427306008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2617150,
							""CONCEPT_NAME"" : ""Erythropoetic stimulating agent (esa) administered to treat anemia not due to anti-cancer radiotherapy or anti-cancer chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""EC"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS Modifier""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44831063,
							""CONCEPT_NAME"" : ""Anemia associated with other specified nutritional deficiency"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281.8"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD9CM"",
							""CONCEPT_CLASS_ID"" : ""4-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4105643,
							""CONCEPT_NAME"" : ""Myasthenic syndrome due to pernicious anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""193213003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37398911,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 4"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691401000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438869,
							""CONCEPT_NAME"" : ""Perinatal jaundice due to hereditary hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56921004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4183718,
							""CONCEPT_NAME"" : ""Pericarditis associated with severe chronic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43742007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37395652,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 5"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691411000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4125630,
							""CONCEPT_NAME"" : ""Chronic non-spherocytic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4217370,
							""CONCEPT_NAME"" : ""Aase syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71988008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267432,
							""CONCEPT_NAME"" : ""Erythropenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62574001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36680584,
							""CONCEPT_NAME"" : ""Autosomal dominant aplasia and myelodysplasia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""778006008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37018722,
							""CONCEPT_NAME"" : ""Anemia caused by zidovudine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713496008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4295183,
							""CONCEPT_NAME"" : ""Mixed hemoglobin disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38589006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028717,
							""CONCEPT_NAME"" : ""Refractory anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128845005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44783626,
							""CONCEPT_NAME"" : ""Pulmonary arterial hypertension associated with chronic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""697908003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4159748,
							""CONCEPT_NAME"" : ""Hand-foot syndrome in sickle cell anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371104006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4051681,
							""CONCEPT_NAME"" : ""Reticulocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""124961001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37017132,
							""CONCEPT_NAME"" : ""Anemia co-occurrent with human immunodeficiency virus infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713349004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029670,
							""CONCEPT_NAME"" : ""Refractory anemia with excess blasts in transformation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""128848007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006467,
							""CONCEPT_NAME"" : ""Anemia due to infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111570005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40478891,
							""CONCEPT_NAME"" : ""Erythropoietin resistance in anemia of chronic kidney disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444271000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36715584,
							""CONCEPT_NAME"" : ""Refractory anemia with ringed sideroblasts associated with marked thrombocytosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""721302006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 28,
			""name"" : ""Hemoglobin measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3000963,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3027484,
							""CONCEPT_NAME"" : ""Hemoglobin [Mass/volume] in Blood by calculation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20509-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 30,
			""name"" : ""Immune Thrombocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4103532,
							""CONCEPT_NAME"" : ""Immune thrombocytopenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2897005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4119134,
							""CONCEPT_NAME"" : ""Thrombocytopenic purpura"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""302873008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""washout period of 365 days  "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 30,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 365,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No congenital or genetic thrombocytopenia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 9,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Platelet count > 100 on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 7,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 101,
									""Op"" : ""bt"",
									""Extent"" : 450
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 8848,
										""CONCEPT_NAME"" : ""thousand per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8961,
										""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/mm3"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 9444,
										""CONCEPT_NAME"" : ""billion per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8816,
										""CONCEPT_NAME"" : ""million per milliliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*6/mL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 44777588,
										""CONCEPT_NAME"" : ""billion cells per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No thrombocytosis on index date"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 10,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Pancytopenia or bone marrow disorder diagnosis within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 24,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Neutropenia, Agranulocytosis diagnosis within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 25,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No low neutrophil count within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 26,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 0.010000000000000000208167,
									""Op"" : ""bt"",
									""Extent"" : 1.4990000000000001101341
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 9444,
										""CONCEPT_NAME"" : ""billion per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8848,
										""CONCEPT_NAME"" : ""thousand per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8816,
										""CONCEPT_NAME"" : ""million per milliliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*6/mL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8961,
										""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/mm3"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 44777588,
										""CONCEPT_NAME"" : ""billion cells per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								],
								""RangeLow"" : {
									""Value"" : 1.5,
									""Op"" : ""bt"",
									""Extent"" : 4
								}
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 26,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 10,
									""Op"" : ""bt"",
									""Extent"" : 1500
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 8784,
										""CONCEPT_NAME"" : ""cells per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""{cells}/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8647,
										""CONCEPT_NAME"" : ""per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Anemia diagnosis within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 27,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 27,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No low Hemoglobin measurement in blood within 7 days"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 28,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 4,
									""Op"" : ""bt"",
									""Extent"" : 11
								},
								""Unit"" : [
									{
										""CONCEPT_ID"" : 4121395,
										""CONCEPT_NAME"" : ""g/dL"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""258795003"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""SNOMED"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8713,
										""CONCEPT_NAME"" : ""gram per deciliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""g/dL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8950,
										""CONCEPT_NAME"" : ""gram per deciliter calculated"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""g/dL{calc}"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 180
		}
	},
	""CensoringCriteria"" : [
		{
			""Measurement"" : {
				""CodesetId"" : 7,
				""MeasurementTypeExclude"" : false,
				""ValueAsNumber"" : {
					""Value"" : 150,
					""Op"" : ""bt"",
					""Extent"" : 450
				},
				""Unit"" : [
					{
						""CONCEPT_ID"" : 8848,
						""CONCEPT_NAME"" : ""thousand per microliter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*3/uL"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 8961,
						""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*3/mm3"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 9444,
						""CONCEPT_NAME"" : ""billion per liter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*9/L"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 8816,
						""CONCEPT_NAME"" : ""million per milliliter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*6/mL"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 44777588,
						""CONCEPT_NAME"" : ""billion cells per liter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*9.{cellls}/L"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					}
				]
			}
		},
		{
			""ConditionOccurrence"" : {
				""CodesetId"" : 10,
				""ConditionTypeExclude"" : false
			}
		}
	],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4267147,3031586,3050583,3007461,37393863))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4267147,3031586,3050583,3007461,37393863))

) I
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (37397537,4121131,4006469,42537688,437242))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (37397537,4121131,4006469,42537688,437242))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4280071,36715584,45766614))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4280071,36715584,45766614))

) I
) C UNION ALL 
SELECT 24 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (432881,4131124))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (432881,4131124))

) I
) C UNION ALL 
SELECT 25 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (36715585,320073,42872951,435224,440689,45766061,4119158))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (36715585,320073,42872951,440689,45766061,4119158))

) I
) C UNION ALL 
SELECT 26 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (37393856,4148615,3017732,3013650,3017501))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3017732,3013650,3017501))

) I
) C UNION ALL 
SELECT 27 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (2617149,36716029,2617148,4029669,4120449,35624756,4028718,37017165,4144746,2617150,44831063,4105643,37398911,438869,4183718,37395652,4125630,4217370,4267432,36680584,37018722,4295183,4028717,44783626,4159748,4051681,37017132,4029670,4006467,40478891,36715584))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (2617149,36716029,2617148,4029669,4120449,35624756,4028718,37017165,4144746,2617150,4105643,37398911,438869,4183718,37395652,4125630,4217370,4267432,36680584,37018722,4295183,4028717,44783626,4159748,4051681,37017132,4029670,4006467,40478891,36715584))

) I
) C UNION ALL 
SELECT 28 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (3000963,3027484))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (3000963,3027484))

) I
) C UNION ALL 
SELECT 30 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4103532,4119134))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4103532,4119134))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 30)
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 30)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-365,P.START_DATE) AND A.START_DATE <= DATEADD(day,-1,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 7)
) C

WHERE (C.value_as_number >= 101.0000 and C.value_as_number <= 450.0000)
AND C.unit_concept_id in (8848,8961,9444,8816,44777588)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 3 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_3
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 4 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_4
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 24)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 5 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_5
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 25)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 6 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_6
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 26)
) C

WHERE (C.value_as_number >= 0.0100 and C.value_as_number <= 1.4990)
AND C.unit_concept_id in (9444,8848,8816,8961,44777588)
AND (C.range_low >= 1.5000 and C.range_low <= 4.0000)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 26)
) C

WHERE (C.value_as_number >= 10.0000 and C.value_as_number <= 1500.0000)
AND C.unit_concept_id in (8784,8647)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 7 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_7
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 27)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.start_date, C.END_DATE,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select o.person_id,o.observation_id,o.observation_concept_id,o.visit_occurrence_id,o.value_as_number,o.observation_date as start_date, DATEADD(day,1,o.observation_date) as end_date 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets cs on (o.observation_concept_id = cs.concept_id and cs.codeset_id = 27)
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 8 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_8
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 28)
) C

WHERE (C.value_as_number >= 4.0000 and C.value_as_number <= 11.0000)
AND C.unit_concept_id in (4121395,8713,8950)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,-7,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_3
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_4
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_5
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_6
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_7
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_8) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;

TRUNCATE TABLE #Inclusion_3;
DROP TABLE #Inclusion_3;

TRUNCATE TABLE #Inclusion_4;
DROP TABLE #Inclusion_4;

TRUNCATE TABLE #Inclusion_5;
DROP TABLE #Inclusion_5;

TRUNCATE TABLE #Inclusion_6;
DROP TABLE #Inclusion_6;

TRUNCATE TABLE #Inclusion_7;
DROP TABLE #Inclusion_7;

TRUNCATE TABLE #Inclusion_8;
DROP TABLE #Inclusion_8;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{9 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),9)-1)
}
) Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,180,end_date) > op_end_date then op_end_date else DATEADD(day,180,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

UNION ALL
-- Censor Events
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 7)
) C

WHERE (C.value_as_number >= 150.0000 and C.value_as_number <= 450.0000)
AND C.unit_concept_id in (8848,8961,9444,8816,44777588)
-- End Measurement Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 10)
) C


-- End Condition Occurrence Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id


    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 9 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence UNION ALL SELECT CAST(3 as int) as rule_sequence UNION ALL SELECT CAST(4 as int) as rule_sequence UNION ALL SELECT CAST(5 as int) as rule_sequence UNION ALL SELECT CAST(6 as int) as rule_sequence UNION ALL SELECT CAST(7 as int) as rule_sequence UNION ALL SELECT CAST(8 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
741,"Earliest event of Thrombotic microangiopathy (TMA) or Microangiopathic hemolytic anemia (MAHA)","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 17,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 17,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 20,
					""ProcedureTypeExclude"" : false
				}
			},
			{
				""DrugExposure"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 17,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 20,
					""DrugTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""ConditionOccurrence"" : {
										""CodesetId"" : 17,
										""ConditionTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 20,
					""MeasurementTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Congenital or genetic causes for thrombocytopenia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006469,
							""CONCEPT_NAME"" : ""Reticular dysgenesis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111584000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37397537,
							""CONCEPT_NAME"" : ""Beta thalassemia X-linked thrombocytopenia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""718196002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Platelet measurement"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267147,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61928009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3031586,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood by Estimate"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49497-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3050583,
							""CONCEPT_NAME"" : ""Platelets panel - Blood by Automated count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53800-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3007461,
							""CONCEPT_NAME"" : ""Platelets [#/volume] in Blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26515-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Lab Test""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37393863,
							""CONCEPT_NAME"" : ""Platelet count"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1022651000000100"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Thrombotic microangiopathy or Microangiopathic hemolytic anemia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 313800,
							""CONCEPT_NAME"" : ""Thrombotic microangiopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""126729006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4198102,
							""CONCEPT_NAME"" : ""Microangiopathic hemolytic anemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""51071000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 20,
			""name"" : ""Treatment or investigation for TMA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2212705,
							""CONCEPT_NAME"" : ""Coagulation and fibrinolysis, functional activity, not otherwise specified (eg, ADAMTS-13), each analyte"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""85397"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1314273,
							""CONCEPT_NAME"" : ""rituximab"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""121191"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4182536,
							""CONCEPT_NAME"" : ""Transfusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5447007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4049372,
							""CONCEPT_NAME"" : ""Plasmapheresis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20720000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4022139,
							""CONCEPT_NAME"" : ""Administration of blood product"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""116762002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""No congenital or genetic thrombocytopenia"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No Platelet count > 150 on index date"",
			""description"" : ""Thrombocytopenia is a hallmark of this condition. Absence of thrombocytopenia makes this phenotype unlikely. Platelet count the lower limit of normal, i.e., 150000/microliter (for adults)the lower limit of normal, i.e., 150000/microliter (for adults)"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 7,
								""MeasurementTypeExclude"" : false,
								""ValueAsNumber"" : {
									""Value"" : 151,
									""Op"" : ""bt"",
									""Extent"" : 450
								},
								""ValueAsConcept"" : [
									{
										""CONCEPT_ID"" : 8848,
										""CONCEPT_NAME"" : ""thousand per microliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/uL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8961,
										""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*3/mm3"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 9444,
										""CONCEPT_NAME"" : ""billion per liter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*9/L"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 8816,
										""CONCEPT_NAME"" : ""million per milliliter"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""10*6/mL"",
										""DOMAIN_ID"" : ""Unit"",
										""VOCABULARY_ID"" : ""UCUM"",
										""CONCEPT_CLASS_ID"" : null
									}
								]
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [
		{
			""Measurement"" : {
				""CodesetId"" : 7,
				""MeasurementTypeExclude"" : false,
				""ValueAsNumber"" : {
					""Value"" : 151,
					""Op"" : ""bt"",
					""Extent"" : 450
				},
				""Unit"" : [
					{
						""CONCEPT_ID"" : 8848,
						""CONCEPT_NAME"" : ""thousand per microliter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*3/uL"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 8961,
						""CONCEPT_NAME"" : ""thousand per cubic millimeter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*3/mm3"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 9444,
						""CONCEPT_NAME"" : ""billion per liter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*9/L"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					},
					{
						""CONCEPT_ID"" : 8816,
						""CONCEPT_NAME"" : ""million per milliliter"",
						""STANDARD_CONCEPT"" : null,
						""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
						""INVALID_REASON"" : null,
						""INVALID_REASON_CAPTION"" : ""Unknown"",
						""CONCEPT_CODE"" : ""10*6/mL"",
						""DOMAIN_ID"" : ""Unit"",
						""VOCABULARY_ID"" : ""UCUM"",
						""CONCEPT_CLASS_ID"" : null
					}
				]
			}
		}
	],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4006469,37397537))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4006469,37397537))

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4267147,3031586,3050583,3007461,37393863))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4267147,3031586,3050583,3007461,37393863))

) I
) C UNION ALL 
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (313800,4198102))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (313800,4198102))

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (2212705,1314273,4182536,4049372,4022139))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (2212705,1314273,4182536,4049372,4022139))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 17)
) C


-- End Condition Occurrence Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Procedure Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 17)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Drug Exposure Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id,C.start_date as sort_date
from 
(
  select de.person_id,de.drug_exposure_id,de.drug_concept_id,de.visit_occurrence_id,days_supply,quantity,refills,de.drug_exposure_start_date as start_date, COALESCE(de.drug_exposure_end_date, DATEADD(day,de.days_supply,de.drug_exposure_start_date), DATEADD(day,1,de.drug_exposure_start_date)) as end_date 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets cs on (de.drug_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 17)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 20)
) C


-- End Measurement Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 17)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 1)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.value_as_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 7)
) C

WHERE (C.value_as_number >= 151.0000 and C.value_as_number <= 450.0000)
AND C.value_as_concept_id in (8848,8961,9444,8816)
-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{2 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)
}
) Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,end_date) > op_end_date then op_end_date else DATEADD(day,7,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

UNION ALL
-- Censor Events
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select m.person_id,m.measurement_id,m.measurement_concept_id,m.visit_occurrence_id,m.value_as_number,m.range_high,m.range_low,m.unit_concept_id,m.measurement_date as start_date, DATEADD(day,1,m.measurement_date) as end_date 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets cs on (m.measurement_concept_id = cs.concept_id and cs.codeset_id = 7)
) C

WHERE (C.value_as_number >= 151.0000 and C.value_as_number <= 450.0000)
AND C.unit_concept_id in (8848,8961,9444,8816)
-- End Measurement Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id


    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 2 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
747,"Pulmonary Arterial Hypertension","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 15,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""ProcedureOccurrence"" : {
						""CodesetId"" : 9,
						""ProcedureTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 30,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			},
			{
				""Criteria"" : {
					""ProcedureOccurrence"" : {
						""CodesetId"" : 8,
						""ProcedureTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 30,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 8,
			""name"" : ""Echocardiogram"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4230911,
							""CONCEPT_NAME"" : ""Echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40701008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37311810,
							""CONCEPT_NAME"" : ""Stress echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""816996009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4019824,
							""CONCEPT_NAME"" : ""Transesophageal echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""105376000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4203365,
							""CONCEPT_NAME"" : ""Epicardial echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433232009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4335825,
							""CONCEPT_NAME"" : ""Transthoracic echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433236007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4334807,
							""CONCEPT_NAME"" : ""Contrast echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433231002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4334808,
							""CONCEPT_NAME"" : ""Fetal echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433235006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4331964,
							""CONCEPT_NAME"" : ""Pediatric echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""431852008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4138036,
							""CONCEPT_NAME"" : ""Transluminal intracardiac echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""425789000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4335824,
							""CONCEPT_NAME"" : ""Exercise stress echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433233004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45773079,
							""CONCEPT_NAME"" : ""Stress echocardiography using dobutamine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""703338002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4305021,
							""CONCEPT_NAME"" : ""Echocardiography for detecting cardiac output"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8151003"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4147613,
							""CONCEPT_NAME"" : ""Echocardiography for determining ventricular contraction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""35757004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43021737,
							""CONCEPT_NAME"" : ""Transthoracic echocardiography for congenital heart disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473381003"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4268930,
							""CONCEPT_NAME"" : ""Echocardiography, real time with image documentation with M-mode, follow-up"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62559003"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4211674,
							""CONCEPT_NAME"" : ""Echocardiography, real-time with image documentation with M-mode recording, complete"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""57093001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4160720,
							""CONCEPT_NAME"" : ""Cardiac septostomy using ultrasound guidance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""431514000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273020,
							""CONCEPT_NAME"" : ""Doppler fetal echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""711490008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273033,
							""CONCEPT_NAME"" : ""Doppler transesophageal echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""711507002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4330376,
							""CONCEPT_NAME"" : ""Doppler ultrasonography of myocardium for tissue strain rate"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""431488007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4171199,
							""CONCEPT_NAME"" : ""Echocardiography for determining interventricular septal thickness"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49276007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4225363,
							""CONCEPT_NAME"" : ""Echocardiography for determining mitral and tricuspid valve motion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40357002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267123,
							""CONCEPT_NAME"" : ""Echocardiography for determining mitral, aortic and tricuspid valve motion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61832002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4307818,
							""CONCEPT_NAME"" : ""Echocardiography for determining mitral valve motion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""83061004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4265040,
							""CONCEPT_NAME"" : ""Echocardiography for determining pericardial effusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61982008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4084945,
							""CONCEPT_NAME"" : ""Echocardiography for determining posterior left ventricular wall thickness"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""24058001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4203445,
							""CONCEPT_NAME"" : ""Echocardiography for determining prosthetic valve motion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53457009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4250325,
							""CONCEPT_NAME"" : ""Echocardiography for determining size of ventricular chambers"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""74193008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37311809,
							""CONCEPT_NAME"" : ""Echocardiography using pharmacologic stress agent"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""816997000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44809812,
							""CONCEPT_NAME"" : ""Fluoroscopy guided percutaneous transluminal repair of mitral valve leaflet using transoesophageal echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""865051000000105"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 36717088,
							""CONCEPT_NAME"" : ""Focused transthoracic echocardiography in intensive care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""719508009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4197265,
							""CONCEPT_NAME"" : ""Four dimensional ultrasound imaging of heart"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""51469006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40488479,
							""CONCEPT_NAME"" : ""Intracardiac echocardiography with contrast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""448193008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40491498,
							""CONCEPT_NAME"" : ""Intracardiac three dimensional echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""448761005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4329506,
							""CONCEPT_NAME"" : ""Intracardiac ultrasonography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""431748001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4098216,
							""CONCEPT_NAME"" : ""Intracavitary echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""252421008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4327260,
							""CONCEPT_NAME"" : ""Intraoperative echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429884006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4329659,
							""CONCEPT_NAME"" : ""Intravascular ultrasonography of coronary artery using fluoroscopic guidance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""431945005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44514109,
							""CONCEPT_NAME"" : ""Other specified diagnostic Echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""U20.8"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""OPCS4"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37209048,
							""CONCEPT_NAME"" : ""PoC (point of care) cardiac ultrasonography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1111771000000109"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37206167,
							""CONCEPT_NAME"" : ""Saline contrast echocardiogram"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""785775005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3654312,
							""CONCEPT_NAME"" : ""Speckle tracking echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""830079008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40492792,
							""CONCEPT_NAME"" : ""Three dimensional transesophageal ultrasonography of heart"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""445864005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4216774,
							""CONCEPT_NAME"" : ""Transesophageal echocardiographic valvular monitoring"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397835000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4161943,
							""CONCEPT_NAME"" : ""Transesophageal echocardiographic ventricular function monitoring"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""398305002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4234778,
							""CONCEPT_NAME"" : ""Transesophageal echocardiography with contrast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""440467009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44805204,
							""CONCEPT_NAME"" : ""Transluminal intracardiac echocardiography for complex congenital heart disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""772571000000107"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43022021,
							""CONCEPT_NAME"" : ""Transluminal intracardiac echocardiography for congenital heart disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473196007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44805203,
							""CONCEPT_NAME"" : ""Transoesophageal echocardiography for complex congenital heart disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""772551000000103"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44805202,
							""CONCEPT_NAME"" : ""Transthoracic echocardiography for complex congenital heart disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""772531000000105"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42535579,
							""CONCEPT_NAME"" : ""Two dimensional echocardiography of fetus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""422851000119101"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4202441,
							""CONCEPT_NAME"" : ""Ultrasonography of cardiac ventricle for resynchronization"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433033007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3654311,
							""CONCEPT_NAME"" : ""Velocity vector imaging echocardiography"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""830078000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Right Heart Catheterization"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 42732622,
							""CONCEPT_NAME"" : ""Right heart catheterization"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93501"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 21491681,
							""CONCEPT_NAME"" : ""Right heart catheterization performed"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""78930-5"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313897,
							""CONCEPT_NAME"" : ""Right heart catheterization, for congenital cardiac anomalies"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93530"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42732626,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and retrograde left heart catheterization"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93526"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313898,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and retrograde left heart catheterization, for congenital cardiac anomalies"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93531"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40756947,
							""CONCEPT_NAME"" : ""Right heart catheterization including measurement(s) of oxygen saturation and cardiac output, when performed"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93451"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42732628,
							""CONCEPT_NAME"" : ""Combined right heart catheterization with left ventricular puncture (with or without retrograde left heart catheterization)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93528"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42738797,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and left heart catheterization through existing septal opening (with or without retrograde left heart catheterization)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93529"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42732627,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and transseptal left heart catheterization through intact septum (with or without retrograde left heart catheterization)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93527"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313899,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and transseptal left heart catheterization through intact septum with or without retrograde left heart catheterization, for congenital cardiac anomalies"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93532"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40756899,
							""CONCEPT_NAME"" : ""Catheter placement in coronary artery(s) for coronary angiography, including intraprocedural injection(s) for coronary angiography, imaging supervision and interpretation; with right heart catheterization"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93456"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313900,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and transseptal left heart catheterization through existing septal opening, with or without retrograde left heart catheterization, for congenital cardiac anomalies"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93533"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45890619,
							""CONCEPT_NAME"" : ""Right heart catheterization with implantation of wireless pressure sensor in the pulmonary artery, including any type of measurement, angiography, imaging supervision, interpretation, and report"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C9741"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 927088,
							""CONCEPT_NAME"" : ""Transcatheter implantation of wireless pulmonary artery pressure sensor for long-term hemodynamic monitoring, including deployment and calibration of the sensor, right heart catheterization, selective pulmonary catheterization, radiological supervision an"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""33289"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40217358,
							""CONCEPT_NAME"" : ""Blinded procedure for nyha class iii/iv heart failure; transcatheter implantation of interatrial shunt or placebo control, including right heart catheterization, trans-esophageal echocardiography (tee)/intracardiac echocardiography (ice), and all imagi..."",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C9758"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42738797,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and left heart catheterization through existing septal opening (with or without retrograde left heart catheterization)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93529"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42732627,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and transseptal left heart catheterization through intact septum (with or without retrograde left heart catheterization)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93527"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313899,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and transseptal left heart catheterization through intact septum with or without retrograde left heart catheterization, for congenital cardiac anomalies"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93532"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313900,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and transseptal left heart catheterization through existing septal opening, with or without retrograde left heart catheterization, for congenital cardiac anomalies"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93533"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313898,
							""CONCEPT_NAME"" : ""Combined right heart catheterization and retrograde left heart catheterization, for congenital cardiac anomalies"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93531"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 42732628,
							""CONCEPT_NAME"" : ""Combined right heart catheterization with left ventricular puncture (with or without retrograde left heart catheterization)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93528"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40757025,
							""CONCEPT_NAME"" : ""Combined right and left heart catheterization including intraprocedural injection(s) for left ventriculography, imaging supervision and interpretation, when performed"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93453"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40756857,
							""CONCEPT_NAME"" : ""Catheter placement in coronary artery(s) for coronary angiography, including intraprocedural injection(s) for coronary angiography, imaging supervision and interpretation; with right and left heart catheterization including intraprocedural injection(s) fo"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93461"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40756944,
							""CONCEPT_NAME"" : ""Catheter placement in coronary artery(s) for coronary angiography, including intraprocedural injection(s) for coronary angiography, imaging supervision and interpretation; with right and left heart catheterization including intraprocedural injection(s) fo"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93460"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 15,
			""name"" : ""Pulmonary arterial hypertension"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4013643,
							""CONCEPT_NAME"" : ""Pulmonary arterial hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""11399002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4339214,
							""CONCEPT_NAME"" : ""Secondary pulmonary hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88223008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4230911,37311810,4019824,4203365,4335825,4334807,4334808,4331964,4138036,4335824,45773079,4305021,4147613,43021737,4268930,4211674))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4230911,37311810,4019824,4203365,4335825,4334807,4334808,4331964,4138036,4335824,45773079,4305021,4147613,43021737,4268930,4211674))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4160720,46273020,46273033,4330376,4171199,4225363,4267123,4307818,4265040,4084945,4203445,4250325,37311809,44809812,36717088,4197265,40488479,40491498,4329506,4098216,4327260,4329659,44514109,37209048,37206167,3654312,40492792,4216774,4161943,4234778,44805204,43022021,44805203,44805202,42535579,4202441,3654311))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (42732622,21491681,2313897,42732626,2313898,40756947,42732628,42738797,42732627,2313899,40756899,2313900,45890619,927088,40217358,42738797,42732627,2313899,2313900,2313898,42732628,40757025,40756857,40756944))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (42732622,21491681,2313897,42732626,2313898,40756947,42732628,42738797,42732627,2313899,40756899,2313900,45890619,927088,40217358,42738797,42732627,2313899,2313900,2313898,42732628,40757025,40756857,40756944))

) I
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4013643))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4013643))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4339214))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4339214))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 9)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
select 1 as index_id, cc.person_id, cc.event_id
from (SELECT p.person_id, p.event_id 
FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 15)
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events
) P
JOIN (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.start_date, C.end_date,
       C.visit_occurrence_id, C.start_date as sort_date
from 
(
  select po.person_id,po.procedure_occurrence_id,po.procedure_concept_id,po.visit_occurrence_id,po.quantity,po.procedure_date as start_date, DATEADD(day,1,po.procedure_date) as end_date 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets cs on (po.procedure_concept_id = cs.concept_id and cs.codeset_id = 8)
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,30,P.START_DATE) ) cc 
GROUP BY cc.person_id, cc.event_id
HAVING COUNT(cc.event_id) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{0 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),0)-1)
}
) Results

;



-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 0 != 0}?{

CREATE TABLE #inclusion_rules (rule_sequence int);

-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}



TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
1316,"Neutropenia or unspecified leukopenia","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 21,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Disorder caused by alcohol"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 36714559,
							""CONCEPT_NAME"" : ""Disorder caused by alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""719848005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4042860,
							""CONCEPT_NAME"" : ""Finding relating to alcohol drinking behavior"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""228273003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435140,
							""CONCEPT_NAME"" : ""Toxic effect of alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67426006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269816,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082601000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37311131,
							""CONCEPT_NAME"" : ""Alcohol detoxification"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""827094004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058714,
							""CONCEPT_NAME"" : ""H/O: alcoholism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161466001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269817,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082611000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195300,
							""CONCEPT_NAME"" : ""Alcoholic gastritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2043009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 318773,
							""CONCEPT_NAME"" : ""Dilated cardiomyopathy secondary to alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""83521008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37016176,
							""CONCEPT_NAME"" : ""Cerebral degeneration due to alcoholism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""135761000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45757783,
							""CONCEPT_NAME"" : ""Gastric hemorrhage due to alcoholic gastritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40241000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44788725,
							""CONCEPT_NAME"" : ""Hazardous alcohol use"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198421000000108"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40484946,
							""CONCEPT_NAME"" : ""High alcohol level in blood"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442766007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3661461,
							""CONCEPT_NAME"" : ""Adverse reaction to alcohol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""836464003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 44788726,
							""CONCEPT_NAME"" : ""Harmful alcohol use"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198431000000105"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Hepatic coma due to viral hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 196029,
							""CONCEPT_NAME"" : ""Hepatic coma due to viral hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40946000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Chronic Hepatic Failure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269836,
							""CONCEPT_NAME"" : ""Hepatic coma due to chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1085091000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 37396401,
							""CONCEPT_NAME"" : ""Decompensated cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""716203000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4331292,
							""CONCEPT_NAME"" : ""Hepatic failure due to a procedure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22508003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 45769564,
							""CONCEPT_NAME"" : ""End stage liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""708248004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Liver Cirrhosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4064161,
							""CONCEPT_NAME"" : ""Cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""19943007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196463,
							""CONCEPT_NAME"" : ""Alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420054005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269816,
							""CONCEPT_NAME"" : ""Ascites due to alcoholic cirrhosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1082601000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Liver Fibrosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267417,
							""CONCEPT_NAME"" : ""Hepatic fibrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""62484002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058695,
							""CONCEPT_NAME"" : ""Toxic liver disease with fibrosis and cirrhosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197362001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""Steatosis of liver, not including non-alcoholic"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4026131,
							""CONCEPT_NAME"" : ""Non-alcoholic fatty liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197315008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4059290,
							""CONCEPT_NAME"" : ""Steatosis of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197321007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 11,
			""name"" : ""Non-Alcoholic Fatty Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4026131,
							""CONCEPT_NAME"" : ""Non-alcoholic fatty liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197315008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40484532,
							""CONCEPT_NAME"" : ""Nonalcoholic steatohepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442685003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 12,
			""name"" : ""Other Liver problems"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4326594,
							""CONCEPT_NAME"" : ""Abnormal liver function"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75183008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058725,
							""CONCEPT_NAME"" : ""H/O: liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161535005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4113557,
							""CONCEPT_NAME"" : ""Liver problem"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""300338006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194984,
							""CONCEPT_NAME"" : ""Disease of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235856003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 15,
			""name"" : ""Malignancies that spread to liver (breast, esophageal, stomach, pancreatic, lung, kidney, melanoma, primary malignancy of liver)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4112853,
							""CONCEPT_NAME"" : ""Malignant tumor of breast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""254837009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4162276,
							""CONCEPT_NAME"" : ""Malignant melanoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""372244006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40493428,
							""CONCEPT_NAME"" : ""Malignant neoplasm of respiratory system"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""449096009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43021272,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473067009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4101758,
							""CONCEPT_NAME"" : ""Hepatocellular carcinoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""25370001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Morph Abnormality""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435506,
							""CONCEPT_NAME"" : ""Benign neoplastic disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20376005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4180793,
							""CONCEPT_NAME"" : ""Malignant tumor of pancreas"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363418001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4181343,
							""CONCEPT_NAME"" : ""Malignant tumor of esophagus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363402007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196653,
							""CONCEPT_NAME"" : ""Malignant tumor of kidney"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363518003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 43021272,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""473067009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46273375,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of pancreas"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""73761000119105"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4178769,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of esophagus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429410000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058705,
							""CONCEPT_NAME"" : ""H/O Malignant melanoma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""161432005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4187205,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of lung"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""415082004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4324190,
							""CONCEPT_NAME"" : ""History of malignant neoplasm of breast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429087003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 16,
			""name"" : ""Alcoholic hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340383,
							""CONCEPT_NAME"" : ""Alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235875008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 201343,
							""CONCEPT_NAME"" : ""Acute alcoholic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9953008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46269835,
							""CONCEPT_NAME"" : ""Hepatic ascites due to chronic alcoholic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1085021000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Wilsons disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4229262,
							""CONCEPT_NAME"" : ""Wilson's disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88518009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 18,
			""name"" : ""Autoimmune Hepatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 200762,
							""CONCEPT_NAME"" : ""Autoimmune hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""408335007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 19,
			""name"" : ""Hemochromatosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163735,
							""CONCEPT_NAME"" : ""Hemochromatosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""399187006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 20,
			""name"" : ""Primary Biliary Cholangitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4135822,
							""CONCEPT_NAME"" : ""Primary biliary cholangitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31712002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 21,
			""name"" : ""Acute Hepatic Failure, adding Sequela of chronic liver disease to capture potential cases in icd-9 "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029488,
							""CONCEPT_NAME"" : ""Hepatic encephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13920009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4245975,
							""CONCEPT_NAME"" : ""Hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59927004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340390,
							""CONCEPT_NAME"" : ""Chronic hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235886005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 40481531,
							""CONCEPT_NAME"" : ""Sequela of chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444918006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 22,
			""name"" : ""Ascites"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 200528,
							""CONCEPT_NAME"" : ""Ascites"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""389026000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 23,
			""name"" : ""Toxic Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055224,
							""CONCEPT_NAME"" : ""Toxic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197354009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4055223,
							""CONCEPT_NAME"" : ""Toxic hepatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197352008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 24,
			""name"" : ""Portal Hypertension"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 192680,
							""CONCEPT_NAME"" : ""Portal hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""34742003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 46270558,
							""CONCEPT_NAME"" : ""History of portal hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59701000119109"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 25,
			""name"" : ""Liver Transplant"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 42537742,
							""CONCEPT_NAME"" : ""Transplanted liver present"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""737297006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 26,
			""name"" : ""Neoplasm of liver"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4130518,
							""CONCEPT_NAME"" : ""Neoplasm of liver"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""126851005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 27,
			""name"" : ""Cholestasis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4143915,
							""CONCEPT_NAME"" : ""Cholestasis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""33688009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058694,
							""CONCEPT_NAME"" : ""Toxic liver disease with cholestasis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197355005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 30,
			""name"" : ""Hepatic Necrosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4337543,
							""CONCEPT_NAME"" : ""Hepatic necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""87248009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 31,
			""name"" : ""Chronic Liver Disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4212540,
							""CONCEPT_NAME"" : ""Chronic liver disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""328383001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Chronic Hepatic Failure "",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 6,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""History of Liver Cirrhosis"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 7,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""History of Liver Transplant"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 25,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 7,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : true,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 90
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}","CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (36714559,4042860,435140,46269816,37311131,4058714,46269817,195300,318773,37016176,45757783,44788725,40484946,3661461,44788726))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (36714559,4042860,435140,46269816,37311131,4058714,46269817,195300,318773,37016176,45757783,44788725,40484946,3661461,44788726))

) I
) C UNION ALL 
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (196029))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (196029))

) I
) C UNION ALL 
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390,46269836,37396401,4331292,45769564))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390,46269836,37396401,4331292,45769564))

) I
) C UNION ALL 
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4064161,196463,46269816))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4064161,196463,46269816))

) I
) C UNION ALL 
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4267417,4058695))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4267417,4058695))

) I
) C UNION ALL 
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4059290))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4059290))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4026131))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4026131))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4026131,40484532))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4026131,40484532))

) I
) C UNION ALL 
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4326594,4058725,4113557,194984))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4326594,4058725,4113557,194984))

) I
) C UNION ALL 
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4112853,4162276,40493428,43021272,4101758,4180793,4181343,196653,43021272,46273375,4178769,4058705,4187205,4324190))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4112853,4162276,40493428,43021272,4101758,4180793,4181343,196653,43021272,46273375,4178769,4058705,4187205,4324190))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (435506))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (435506))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 16 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340383,201343,46269835))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340383,46269835))

) I
) C UNION ALL 
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4229262))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4229262))

) I
) C UNION ALL 
SELECT 18 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (200762))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (200762))

) I
) C UNION ALL 
SELECT 19 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4163735))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4163735))

) I
) C UNION ALL 
SELECT 20 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4135822))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4135822))

) I
) C UNION ALL 
SELECT 21 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4029488,4245975,40481531))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4029488,4245975))

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4340390))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4340390))

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C UNION ALL 
SELECT 22 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (200528))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (200528))

) I
) C UNION ALL 
SELECT 23 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4055224,4055223))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4055224,4055223))

) I
) C UNION ALL 
SELECT 24 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (192680,46270558))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (192680,46270558))

) I
) C UNION ALL 
SELECT 25 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (42537742))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (42537742))

) I
) C UNION ALL 
SELECT 26 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4130518))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4130518))

) I
) C UNION ALL 
SELECT 27 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4143915,4058694))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4143915,4058694))

) I
) C UNION ALL 
SELECT 30 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4337543))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4337543))

) I
) C UNION ALL 
SELECT 31 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where (concept_id in (4212540))
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  WHERE c.invalid_reason is null
  and (ca.ancestor_concept_id in (4212540))

) I
) C;

UPDATE STATISTICS #Codesets;


SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM (-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC, E.event_id) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 21)
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events
) pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 6)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 7)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,0,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
select 0 as index_id, p.person_id, p.event_id
from #qualified_events p
LEFT JOIN (
SELECT p.person_id, p.event_id 
FROM #qualified_events P
JOIN (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.start_date, C.end_date,
  C.visit_occurrence_id, C.start_date as sort_date
FROM 
(
  SELECT co.person_id,co.condition_occurrence_id,co.condition_concept_id,co.visit_occurrence_id,co.condition_start_date as start_date, COALESCE(co.condition_end_date, DATEADD(day,1,co.condition_start_date)) as end_date 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets cs on (co.condition_concept_id = cs.concept_id and cs.codeset_id = 25)
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE <= DATEADD(day,-7,P.START_DATE) ) cc on p.person_id = cc.person_id and p.event_id = cc.event_id
GROUP BY p.person_id, p.event_id
HAVING COUNT(cc.event_id) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;


select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM (
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups
{3 != 0}?{
  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),3)-1)
}
) Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,90,end_date) > op_end_date then op_end_date else DATEADD(day,90,end_date) end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
select person_id, start_date, end_date
INTO #cohort_rows
from ( -- first_ends
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, CE.end_date, row_number() over (partition by I.person_id, I.event_id order by CE.end_date) as ordinal
	  from #included_events I
	  join ( -- cohort_ends
-- cohort exit dates
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

    ) CE on I.event_id = CE.event_id and I.person_id = CE.person_id and CE.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
) FE;


select person_id, min(start_date) as start_date, DATEADD(day,-1 * 0, max(end_date)) as end_date
into #final_cohort
from (
  select person_id, start_date, end_date, sum(is_start) over (partition by person_id order by start_date, is_start desc rows unbounded preceding) group_idx
  from (
    select person_id, start_date, end_date, 
      case when max(end_date) over (partition by person_id order by start_date rows between unbounded preceding and 1 preceding) >= start_date then 0 else 1 end is_start
    from (
      select person_id, start_date, DATEADD(day,0,end_date) as end_date
      from #cohort_rows
    ) CR
  ) ST
) GR
group by person_id, group_idx;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;

{1 != 0}?{
-- BEGIN: Censored Stats

delete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;

-- END: Censored Stats
}
{1 != 0 & 3 != 0}?{

-- Create a temp table of inclusion rule rows for joining in the inclusion rule impact analysis

select cast(rule_sequence as int) as rule_sequence
into #inclusion_rules
from (
  SELECT CAST(0 as int) as rule_sequence UNION ALL SELECT CAST(1 as int) as rule_sequence UNION ALL SELECT CAST(2 as int) as rule_sequence
) IR;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defined as the event that satisfies the most inclusion rules.
-- ties are solved by choosing the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count_big(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count_big(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select @target_cohort_id as cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from #inclusion_rules ir
left join
(
  select i.inclusion_rule_id, count_big(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
CROSS JOIN (select count_big(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule'
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count_big(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from #inclusion_rules) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;

TRUNCATE TABLE #inclusion_rules;
DROP TABLE #inclusion_rules;
}

TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;"
